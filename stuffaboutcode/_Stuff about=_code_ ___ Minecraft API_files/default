// API callback
showrecentposts({"version":"1.0","encoding":"UTF-8","feed":{"xmlns":"http://www.w3.org/2005/Atom","xmlns$openSearch":"http://a9.com/-/spec/opensearchrss/1.0/","xmlns$blogger":"http://schemas.google.com/blogger/2008","xmlns$georss":"http://www.georss.org/georss","xmlns$gd":"http://schemas.google.com/g/2005","xmlns$thr":"http://purl.org/syndication/thread/1.0","id":{"$t":"tag:blogger.com,1999:blog-9007601562606157016"},"updated":{"$t":"2017-11-07T15:34:43.447+00:00"},"category":[{"term":"raspberry pi"},{"term":"Python"},{"term":"minecraft"},{"term":"games"},{"term":"gpio"},{"term":"social networking"},{"term":"camera"},{"term":"microbit"},{"term":"Adventures in Minecraft"},{"term":"c"},{"term":"get_iplayer"},{"term":".net"},{"term":"Car"},{"term":"RSS"},{"term":"c#"},{"term":"gps"},{"term":"raspbmc \/ xbmc"},{"term":"robot"},{"term":"asp"},{"term":"html"},{"term":"xml"},{"term":"scratch"}],"title":{"type":"text","$t":"\u003CStuff about=\"code\" \/\u003E"},"subtitle":{"type":"html","$t":"about = (stuff == 'code')"},"link":[{"rel":"http://schemas.google.com/g/2005#feed","type":"application/atom+xml","href":"http:\/\/www.stuffaboutcode.com\/feeds\/posts\/default"},{"rel":"self","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/9007601562606157016\/posts\/default?alt=json-in-script\u0026orderby=published"},{"rel":"alternate","type":"text/html","href":"http:\/\/www.stuffaboutcode.com\/"},{"rel":"hub","href":"http://pubsubhubbub.appspot.com/"},{"rel":"next","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/9007601562606157016\/posts\/default?alt=json-in-script\u0026start-index=26\u0026max-results=25\u0026orderby=published"}],"author":[{"name":{"$t":"Martin O'Hanlon"},"email":{"$t":"noreply@blogger.com"},"gd$image":{"rel":"http://schemas.google.com/g/2005#thumbnail","width":"32","height":"32","src":"\/\/lh6.googleusercontent.com\/-mXyYt17u23k\/AAAAAAAAAAI\/AAAAAAAAME4\/UO0fIz3K4Xg\/s512-c\/photo.jpg"}}],"generator":{"version":"7.00","uri":"http://www.blogger.com","$t":"Blogger"},"openSearch$totalResults":{"$t":"131"},"openSearch$startIndex":{"$t":"1"},"openSearch$itemsPerPage":{"$t":"25"},"entry":[{"id":{"$t":"tag:blogger.com,1999:blog-9007601562606157016.post-6014865720845294542"},"published":{"$t":"2017-07-07T15:37:00.002+01:00"},"updated":{"$t":"2017-07-07T16:55:17.492+01:00"},"category":[{"scheme":"http://www.blogger.com/atom/ns#","term":"Python"},{"scheme":"http://www.blogger.com/atom/ns#","term":"raspberry pi"}],"title":{"type":"text","$t":"Python Bluetooth RFCOMM Client Server"},"content":{"type":"html","$t":"As part of the \u003Ca href=\"http:\/\/www.stuffaboutcode.com\/2017\/04\/bluedot-bluetooth-remote-for-raspberry.html\"\u003EBlue Dot\u003C\/a\u003E\u0026nbsp;project I needed to create a simple Bluetooth client \/ server\u0026nbsp;library so that the communication\u0026nbsp;could be managed. This library, \u003Ca href=\"http:\/\/bluedot.readthedocs.io\/en\/latest\/btcommapi.html\"\u003Ebtcomm\u003C\/a\u003E,\u0026nbsp;is part of\u0026nbsp;bluedot but its not exclusive and\u0026nbsp;can be used for Bluetooth communication in Python.\u003Cbr \/\u003E\u003Cbr \/\u003EIt uses a 2 way RFCOMM communication - you can send messages to and from 2 devices, 1 being the server which waits for connections, 1 being the client which makes a connection.\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cb\u003EInstall the library\u003C\/b\u003E\u003Cbr \/\u003E\u003Cpre class=\"prettyprint\"\u003Esudo apt-get install python3-dbus\u003Cbr \/\u003Esudo pip3 install bluedot\u003Cbr \/\u003E\u003C\/pre\u003E\u003Cbr \/\u003E\u003Cb\u003EPairing\u003C\/b\u003E\u003Cbr \/\u003E\u003Cbr \/\u003EThe 2 devices you which want to communicate between will need to be paired, the Blue Dot documentation describes \u003Ca href=\"http:\/\/bluedot.readthedocs.io\/en\/latest\/pairpipi.html\"\u003Ehow to pair 2 raspberry pi's\u003C\/a\u003E which might be useful.\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cb\u003ESimple Client \/ Server Example\u003C\/b\u003E\u003Cbr \/\u003E\u003Cdiv\u003E\u003Cspan class=\"n\"\u003ELets create a simple example, a server which waits for connections and when it receives data it echo's it back to the\u0026nbsp;client.\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv\u003E\u003Cspan class=\"n\"\u003E\u003C\/span\u003E\u003Cspan class=\"n\"\u003E\u003Cbr \/\u003E\u003C\/span\u003E\u003Cspan class=\"n\"\u003ECreate a new Python program and save it as btserver.py:\u003C\/span\u003E\u003Cspan class=\"n\"\u003E\u003Cbr \/\u003E\u003C\/span\u003E\u003Cbr \/\u003E\u003Cpre class=\"prettyprint\"\u003E\u003Cspan class=\"n\"\u003Efrom bluedot.btcomm import BluetoothServer\u003Cbr \/\u003Efrom signal import pause\u003Cbr \/\u003E\u003Cbr \/\u003Edef data_received(data):\u003Cbr \/\u003E    print(data)\u003Cbr \/\u003E    s.send(data)\u003Cbr \/\u003E\u003Cbr \/\u003Es = BluetoothServer(data_received)\u003Cbr \/\u003Epause()\u003C\/span\u003E\u003C\/pre\u003E\u003C\/div\u003E\u003Cdiv\u003E\u003Cspan class=\"n\"\u003E\u003Cbr \/\u003E\u003C\/span\u003E\u003Cspan class=\"n\"\u003ECreate a 2nd program and save it as btclient.py:\u003C\/span\u003E\u003C\/div\u003E\u003Cpre class=\"prettyprint\"\u003Efrom bluedot.btcomm import BluetoothClient\u003Cbr \/\u003Efrom signal import pause\u003Cbr \/\u003E\u003Cbr \/\u003Edef data_received(data):\u003Cbr \/\u003E    print(data)\u003Cbr \/\u003E\u003Cbr \/\u003Ec = BluetoothClient(\"nameofyourserver\", data_received)\u003Cbr \/\u003Ec.send(\"helloworld\")\u003Cbr \/\u003E\u003Cbr \/\u003Epause()\u003Cbr \/\u003E\u003C\/pre\u003E\u003Cdiv\u003E\u003Cspan class=\"n\"\u003E\u003Cbr \/\u003E\u003C\/span\u003E\u003C\/div\u003ERun the server and then run the client, the client should connect and \"Hello World\" will be sent to the server and displayed on the screen, the server will then send the same \"Hello World\" message back to the client, which will print it to the screen.\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cb\u003EAdapter\u003C\/b\u003E\u003Cbr \/\u003E\u003Cbr \/\u003EThere is also a useful API for accessing the Bluetooth adapter allowing you to get its current status, power it on\/off, make it discoverable or find the devices its paired with.\u003Cbr \/\u003E\u003Cpre class=\"prettyprint\"\u003Efrom bluedot.btcomm import BluetoothAdapter\u003Cbr \/\u003E\u003Cbr \/\u003Ea = BluetoothAdapter()\u003Cbr \/\u003E\u003Cbr \/\u003Eprint(\"Powered = {}\".format(a.powered))\u003Cbr \/\u003Eprint(a.paired_devices)\u003Cbr \/\u003Ea.allow_pairing()\u003C\/pre\u003E\u003Cbr \/\u003E\u003Cb\u003EDocumentation\u003C\/b\u003E\u003Cbr \/\u003E\u003Cb\u003E\u003C\/b\u003E\u003Cbr \/\u003EThere is comprehensive documentation for the \u003Ca href=\"http:\/\/bluedot.readthedocs.io\/en\/latest\/btcommapi.html\"\u003Ebtcomm library\u003C\/a\u003E, which describes the API and how to use it.\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cbr \/\u003E"},"link":[{"rel":"replies","type":"application/atom+xml","href":"http:\/\/www.stuffaboutcode.com\/feeds\/6014865720845294542\/comments\/default","title":"Post Comments"},{"rel":"replies","type":"text/html","href":"http:\/\/www.stuffaboutcode.com\/2017\/07\/python-bluetooth-rfcomm-client-server.html#comment-form","title":"2 Comments"},{"rel":"edit","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/9007601562606157016\/posts\/default\/6014865720845294542"},{"rel":"self","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/9007601562606157016\/posts\/default\/6014865720845294542"},{"rel":"alternate","type":"text/html","href":"http:\/\/www.stuffaboutcode.com\/2017\/07\/python-bluetooth-rfcomm-client-server.html","title":"Python Bluetooth RFCOMM Client Server"}],"author":[{"name":{"$t":"Martin O'Hanlon"},"uri":{"$t":"https:\/\/plus.google.com\/117449463512606889592"},"email":{"$t":"noreply@blogger.com"},"gd$image":{"rel":"http://schemas.google.com/g/2005#thumbnail","width":"32","height":"32","src":"\/\/lh6.googleusercontent.com\/-mXyYt17u23k\/AAAAAAAAAAI\/AAAAAAAAME4\/UO0fIz3K4Xg\/s512-c\/photo.jpg"}}],"thr$total":{"$t":"2"}},{"id":{"$t":"tag:blogger.com,1999:blog-9007601562606157016.post-5054924099828289705"},"published":{"$t":"2017-07-04T21:53:00.001+01:00"},"updated":{"$t":"2017-07-04T21:53:49.849+01:00"},"title":{"type":"text","$t":"Mac OS - Check Java version before running script"},"content":{"type":"html","$t":"I needed to check what version of Java was installed on a Mac before running my program, so with the help of \u003Ca href=\"https:\/\/stackoverflow.com\/questions\/7334754\/correct-way-to-check-java-version-from-bash-script\"\u003Estackoverflow\u003C\/a\u003E and a few other resources I pulled together the following bash script which checks to see if the version of Java is greater than 1.8 before continuing.\u003Cbr \/\u003E\u003Cpre class=\"prettyprint\"\u003E\u003Cbr \/\u003E# Work out the JAVA version we are working with:\u003Cbr \/\u003EJAVA_VER_MAJOR=\"\"\u003Cbr \/\u003EJAVA_VER_MINOR=\"\"\u003Cbr \/\u003EJAVA_VER_BUILD=\"\"\u003Cbr \/\u003E\u003Cbr \/\u003E# Based on: http:\/\/stackoverflow.com\/a\/32026447\u003Cbr \/\u003Efor token in $(java -version 2\u003E\u00261 | grep -i version)\u003Cbr \/\u003Edo\u003Cbr \/\u003E    if [[ $token =~ \\\"([[:digit:]])\\.([[:digit:]])\\.(.*)\\\" ]]\u003Cbr \/\u003E    then\u003Cbr \/\u003E        JAVA_VER_MAJOR=${BASH_REMATCH[1]}\u003Cbr \/\u003E        JAVA_VER_MINOR=${BASH_REMATCH[2]}\u003Cbr \/\u003E        JAVA_VER_BUILD=${BASH_REMATCH[3]}\u003Cbr \/\u003E        break\u003Cbr \/\u003E    fi\u003Cbr \/\u003Edone\u003Cbr \/\u003E\u003Cbr \/\u003E#check version is greater than 1.7 (i.e. at least 1.8)\u003Cbr \/\u003Eif [ \"$JAVA_VER_MAJOR\" -gt \"1\" ]; then\u003Cbr \/\u003E    echo start your program\u003Cbr \/\u003Eelif [ \"$JAVA_VER_MINOR\" -gt \"7\" ]; then\u003Cbr \/\u003E    echo start your program\u003Cbr \/\u003Eelse\u003Cbr \/\u003E    echo ERROR - Java needs to be updated.\u003Cbr \/\u003E    echo Currently installed version is $JAVA_VER_MAJOR.$JAVA_VER_MINOR - 1.8 is required\u003Cbr \/\u003Efi\u003Cbr \/\u003E\u003C\/pre\u003E"},"link":[{"rel":"replies","type":"application/atom+xml","href":"http:\/\/www.stuffaboutcode.com\/feeds\/5054924099828289705\/comments\/default","title":"Post Comments"},{"rel":"replies","type":"text/html","href":"http:\/\/www.stuffaboutcode.com\/2017\/07\/mac-os-check-java-version-before.html#comment-form","title":"1 Comments"},{"rel":"edit","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/9007601562606157016\/posts\/default\/5054924099828289705"},{"rel":"self","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/9007601562606157016\/posts\/default\/5054924099828289705"},{"rel":"alternate","type":"text/html","href":"http:\/\/www.stuffaboutcode.com\/2017\/07\/mac-os-check-java-version-before.html","title":"Mac OS - Check Java version before running script"}],"author":[{"name":{"$t":"Martin O'Hanlon"},"uri":{"$t":"https:\/\/plus.google.com\/117449463512606889592"},"email":{"$t":"noreply@blogger.com"},"gd$image":{"rel":"http://schemas.google.com/g/2005#thumbnail","width":"32","height":"32","src":"\/\/lh6.googleusercontent.com\/-mXyYt17u23k\/AAAAAAAAAAI\/AAAAAAAAME4\/UO0fIz3K4Xg\/s512-c\/photo.jpg"}}],"thr$total":{"$t":"1"}},{"id":{"$t":"tag:blogger.com,1999:blog-9007601562606157016.post-3694958622208814974"},"published":{"$t":"2017-05-05T18:07:00.000+01:00"},"updated":{"$t":"2017-05-05T18:08:14.555+01:00"},"category":[{"scheme":"http://www.blogger.com/atom/ns#","term":"raspberry pi"}],"title":{"type":"text","$t":"Raspberry Pi Touchscreen Portrait"},"content":{"type":"html","$t":"I recently wanted to turn my Raspberry Pi Official Touchscreen portrait (i.e. sideways!), which turns out is a bit of pain. \u003Cbr \/\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: center;\"\u003E\u003Ca href=\"https:\/\/2.bp.blogspot.com\/-yW0iFK-t9Do\/WQyxOFw1EHI\/AAAAAAAAWUk\/_kYxUNEYEfoqvDrq5n_vE3xIotfjaM97QCLcB\/s1600\/IMG_20170501_174954646_HDR.jpg\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"\u003E\u003Cimg border=\"0\" height=\"320\" src=\"https:\/\/2.bp.blogspot.com\/-yW0iFK-t9Do\/WQyxOFw1EHI\/AAAAAAAAWUk\/_kYxUNEYEfoqvDrq5n_vE3xIotfjaM97QCLcB\/s320\/IMG_20170501_174954646_HDR.jpg\" width=\"180\" \/\u003E\u003C\/a\u003E\u003C\/div\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: center;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003ETurning the display is relatively easy but making the touch work is more difficult - there was a \u003Ca href=\"https:\/\/www.raspberrypi.org\/forums\/viewtopic.php?p=1084567#p1084567\"\u003Eset of instructions on the Raspberry Pi forum\u003C\/a\u003E, but a \u003Ca href=\"https:\/\/www.raspberrypi.org\/forums\/viewtopic.php?f=28\u0026amp;t=172025\"\u003Erecent update to Jessie meant they no longer worked\u003C\/a\u003E, so I pulled this set of instructions together:\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cb\u003EInstall xinput:\u003C\/b\u003E\u003Cbr \/\u003E\u003Cpre class=\"prettyprint\"\u003Esudo apt-get install xinput\u003C\/pre\u003E\u003Cb\u003ERotate the display by editing config.txt:\u003C\/b\u003E\u003Cbr \/\u003E\u003Cpre class=\"prettyprint\"\u003Esudo nano \/boot\/config.txt\u003C\/pre\u003E\u0026nbsp;.. add this to the buttom of the file:\u003Cbr \/\u003E\u003Cpre class=\"prettyprint\"\u003Edisplay_rotate=1\u003C\/pre\u003EUse Ctrl X, Yes to Save\u003Cbr \/\u003E\u003Cb\u003ECreate a script to rotate the touchscreen:\u003C\/b\u003E\u003Cbr \/\u003E\u003Cpre class=\"prettyprint\"\u003Enano \/home\/pi\/touch_rotate.sh\u003C\/pre\u003E\u0026nbsp;.. add the following command\u003Cbr \/\u003E\u003Cpre class=\"prettyprint\"\u003Exinput --set-prop 'FT5406 memory based driver' 'Coordinate Transformation Matrix'  0 1 0 -1 0 1 0 0 1\u003C\/pre\u003E\u003Cb\u003EMake the script executable:\u003C\/b\u003E\u003Cbr \/\u003E\u003Cpre class=\"prettyprint\"\u003Echmod +x touch_rotate.sh\u003C\/pre\u003E\u003Cb\u003EMake the script run when the GUI starts by editing autostart: \u003C\/b\u003E\u003Cbr \/\u003E\u003Cpre class=\"prettyprint\"\u003Esudo nano ~\/.config\/lxsession\/LXDE-pi\/autostart\u003C\/pre\u003E\u0026nbsp;.. add this to the bottom to run your script\u003Cbr \/\u003E\u003Cpre class=\"prettyprint\"\u003E@\/home\/pi\/touch_rotate.sh\u003C\/pre\u003E\u003Cb\u003EReboot: \u003C\/b\u003E\u003Cbr \/\u003E\u003Cpre class=\"prettyprint\"\u003Esudo reboot\u003C\/pre\u003E"},"link":[{"rel":"replies","type":"application/atom+xml","href":"http:\/\/www.stuffaboutcode.com\/feeds\/3694958622208814974\/comments\/default","title":"Post Comments"},{"rel":"replies","type":"text/html","href":"http:\/\/www.stuffaboutcode.com\/2017\/05\/raspberry-pi-touchscreen-portrait.html#comment-form","title":"4 Comments"},{"rel":"edit","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/9007601562606157016\/posts\/default\/3694958622208814974"},{"rel":"self","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/9007601562606157016\/posts\/default\/3694958622208814974"},{"rel":"alternate","type":"text/html","href":"http:\/\/www.stuffaboutcode.com\/2017\/05\/raspberry-pi-touchscreen-portrait.html","title":"Raspberry Pi Touchscreen Portrait"}],"author":[{"name":{"$t":"Martin O'Hanlon"},"uri":{"$t":"https:\/\/plus.google.com\/117449463512606889592"},"email":{"$t":"noreply@blogger.com"},"gd$image":{"rel":"http://schemas.google.com/g/2005#thumbnail","width":"32","height":"32","src":"\/\/lh6.googleusercontent.com\/-mXyYt17u23k\/AAAAAAAAAAI\/AAAAAAAAME4\/UO0fIz3K4Xg\/s512-c\/photo.jpg"}}],"media$thumbnail":{"xmlns$media":"http://search.yahoo.com/mrss/","url":"https:\/\/2.bp.blogspot.com\/-yW0iFK-t9Do\/WQyxOFw1EHI\/AAAAAAAAWUk\/_kYxUNEYEfoqvDrq5n_vE3xIotfjaM97QCLcB\/s72-c\/IMG_20170501_174954646_HDR.jpg","height":"72","width":"72"},"thr$total":{"$t":"4"}},{"id":{"$t":"tag:blogger.com,1999:blog-9007601562606157016.post-6467936860477264703"},"published":{"$t":"2017-04-24T22:09:00.000+01:00"},"updated":{"$t":"2017-04-25T09:26:16.154+01:00"},"category":[{"scheme":"http://www.blogger.com/atom/ns#","term":"gpio"},{"scheme":"http://www.blogger.com/atom/ns#","term":"raspberry pi"},{"scheme":"http://www.blogger.com/atom/ns#","term":"robot"}],"title":{"type":"text","$t":"Blue Dot - a bluetooth remote for Raspberry Pi"},"content":{"type":"html","$t":"\u003Ca href=\"http:\/\/bluedot.readthedocs.io\/\"\u003EBlue Dot\u003C\/a\u003E is a really simple way to add Bluetooth remote control to your Raspberry Pi projects.\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: center;\"\u003E\u003Ca href=\"https:\/\/2.bp.blogspot.com\/-5fuLlNxOhuI\/WP25p5nYGWI\/AAAAAAAAWKo\/kksw5EvrxYw3Cqh6k8l0jyO02Yx5TK2-ACLcB\/s1600\/blue_dot_feature.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"\u003E\u003Cimg border=\"0\" height=\"156\" src=\"https:\/\/2.bp.blogspot.com\/-5fuLlNxOhuI\/WP25p5nYGWI\/AAAAAAAAWKo\/kksw5EvrxYw3Cqh6k8l0jyO02Yx5TK2-ACLcB\/s320\/blue_dot_feature.png\" width=\"320\" \/\u003E\u003C\/a\u003E\u003C\/div\u003E\u003Cbr \/\u003EI created Blue Dot after being asked many times at \u003Ca href=\"https:\/\/www.raspberrypi.org\/picademy\/\"\u003EPicademy\u003C\/a\u003E “how can I get rid of all these wires?”.\u0026nbsp; \u003Cbr \/\u003E\u003Cbr \/\u003EBlue dot is an \u003Ca href=\"https:\/\/play.google.com\/store\/apps\/details?id=com.stuffaboutcode.bluedot\"\u003Eandroid app\u003C\/a\u003E (client) and really easy to use \u003Ca href=\"http:\/\/bluedot.readthedocs.io\/\"\u003EPython library\u003C\/a\u003E which allows you to wirelessly control your Python projects, whether that is a \u003Ca href=\"http:\/\/bluedot.readthedocs.io\/en\/latest\/recipes.html#flash-an-led\"\u003Elight switch\u003C\/a\u003E, \u003Ca href=\"http:\/\/bluedot.readthedocs.io\/en\/latest\/recipes.html#remote-camera\"\u003Eremote camera\u003C\/a\u003E, \u003Ca href=\"http:\/\/bluedot.readthedocs.io\/en\/latest\/recipes.html#robot\"\u003Erobot\u003C\/a\u003E or anything else you can think of!\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: center;\"\u003E\u003Ciframe allowfullscreen=\"\" class=\"YOUTUBE-iframe-video\" data-thumbnail-src=\"https:\/\/i.ytimg.com\/vi\/eW9oEPySF58\/0.jpg\" frameborder=\"0\" height=\"266\" src=\"https:\/\/www.youtube.com\/embed\/eW9oEPySF58?feature=player_embedded\" width=\"320\"\u003E\u003C\/iframe\u003E\u003C\/div\u003E\u003Cbr \/\u003ESee the \u003Ca href=\"http:\/\/bluedot.readthedocs.io\/en\/latest\/gettingstarted.html\"\u003Egetting started guide\u003C\/a\u003E for more info on 'getting started', or follow the tutorial below.\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cb\u003EInstallation \u0026amp; Use\u003C\/b\u003E\u003Cbr \/\u003EThese instructions assume your Raspberry Pi is running the latest version of \u003Ca href=\"https:\/\/www.raspberrypi.org\/downloads\/raspbian\/\"\u003ERaspbian with Pixel\u003C\/a\u003E.\u003Cbr \/\u003E\u003Cbr \/\u003EYou will need a Raspberry Pi with built-in Bluetooth (such as the Pi 3 or Pi Zero W) or a Raspberry Pi and a USB Bluetooth dongle.\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cb\u003EGet the app\u003C\/b\u003E\u003Cbr \/\u003EDownload and install the \u003Ca href=\"https:\/\/play.google.com\/store\/apps\/details?id=com.stuffaboutcode.bluedot\"\u003EBlue Dot app\u003C\/a\u003E from the google play store.\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: center;\"\u003E\u003Ca href=\"https:\/\/1.bp.blogspot.com\/-gtXe25GACiY\/WP26p2QkB6I\/AAAAAAAAWK0\/59d98Tijgsc5GfNI-_nvebVwUxU9-ZDAACLcB\/s1600\/bluedotandroid.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"\u003E\u003Cimg border=\"0\" height=\"320\" src=\"https:\/\/1.bp.blogspot.com\/-gtXe25GACiY\/WP26p2QkB6I\/AAAAAAAAWK0\/59d98Tijgsc5GfNI-_nvebVwUxU9-ZDAACLcB\/s320\/bluedotandroid.png\" width=\"186\" \/\u003E\u003C\/a\u003E\u003C\/div\u003E\u003Cbr \/\u003EIf you are wondering why there is no iOS app? Its because iOS doesn't support Bluetooth serial comms; you can only really talk to 'standard devices' (cars, speakers, fitness trackers, etc).\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cb\u003EPython library\u003C\/b\u003E\u003Cbr \/\u003EOpen a terminal (Menu \u0026gt; Accessories \u0026gt; Terminal) and type:\u003Cbr \/\u003E\u003Cpre class=\"prettyprint\"\u003Esudo apt-get install python3-dbus\u003Cbr \/\u003Esudo pip3 install bluedot\u003C\/pre\u003EOr if you need to use Python 2 (please dont tho!):\u003Cbr \/\u003E\u003Cpre class=\"prettyprint\"\u003Esudo apt-get install python-dbus\u003Cbr \/\u003Esudo pip install bluedot\u003C\/pre\u003E\u003Cbr \/\u003E\u003Cb\u003EPairing\u003C\/b\u003E\u003Cbr \/\u003EIn order to communicate over Bluetooth securely you need to pair your phone to your Raspberry Pi.\u003Cbr \/\u003E\u003Cbr \/\u003EOn your Android phone:\u003Cbr \/\u003E\u003Col\u003E\u003Cli\u003EOpen Settings\u003C\/li\u003E\u003Cli\u003ESelect Bluetooth\u003C\/li\u003E\u003Cli\u003EThis will make your phone Discoverable\u003C\/li\u003E\u003C\/ol\u003EUsing your Raspberry Pi\u003Cbr \/\u003E\u003Col\u003E\u003Cli\u003EClick the bluetooth icon on the taskbar\u003C\/li\u003E\u003Cli\u003ETurn on Bluetooth (if its off)\u003C\/li\u003E\u003Cli\u003EClick Make Discoverable\u003C\/li\u003E\u003Cli\u003EClick Add Device\u003C\/li\u003E\u003Cli\u003EYour phone will appear in the list, select it and click Pair\u003C\/li\u003E\u003Cli\u003EEnter a PIN code\u003C\/li\u003E\u003C\/ol\u003EOn your Android phone\u003Cbr \/\u003E\u003Col\u003E\u003Cli\u003EEnter the same PIN code when prompted\u003C\/li\u003E\u003Cli\u003EClick Ok\u003C\/li\u003E\u003C\/ol\u003E\u003Cb\u003ECode\u003C\/b\u003E\u003Cbr \/\u003EThe simplest way to use the Blue Dot is as a button:\u003Cbr \/\u003E\u003Col\u003E\u003Cli\u003EOpen Python 3 (Menu \u0026gt; Programming \u0026gt; Python 3)\u003C\/li\u003E\u003Cli\u003ECreate a new file (File \u0026gt; New File)\u003C\/li\u003E\u003Cli\u003EThe following code, will start up the Blue Dot, and wait for it to be pressed:\u003C\/li\u003E\u003Cdiv\u003E\u003Cpre class=\"prettyprint\"\u003Efrom bluedot import BlueDot\u003Cbr \/\u003Ebd = BlueDot()\u003Cbr \/\u003Ebd.wait_for_press()\u003Cbr \/\u003Eprint(\"You pressed the blue dot!\")\u003C\/pre\u003E\u003C\/div\u003E\u003Cli\u003ESave your program (File \u0026gt; Save) as mydot.py\u003C\/li\u003E\u003Cli\u003ERun your program (Run \u0026gt; Run Module)\u003C\/li\u003E\u003Cli\u003EOpen the Blue Dot app\u003C\/li\u003E\u003Cli\u003EConnect to your Raspberry Pi\u003C\/li\u003E\u003Cli\u003EPress the Blue Dot\u003C\/li\u003E\u003C\/ol\u003EAs well as waiting for something to happen you can also call functions when the button is pressed, released or the position its pressed moves.\u003Cbr \/\u003E\u003Cpre class=\"prettyprint\"\u003Efrom bluedot import BlueDot\u003Cbr \/\u003Efrom signal import pause\u003Cbr \/\u003E\u003Cbr \/\u003Edef say_hello():\u003Cbr \/\u003E    print(\"Hello World\")\u003Cbr \/\u003E\u003Cbr \/\u003Edef say_goodbye():\u003Cbr \/\u003E    print(\"goodbye\")\u003Cbr \/\u003E\u003Cbr \/\u003Ebd = BlueDot()\u003Cbr \/\u003Ebd.when_pressed = say_hello\u003Cbr \/\u003Ebd.when_released = say_goodbye\u003Cbr \/\u003E\u003Cbr \/\u003Epause()\u003C\/pre\u003EBy using the position of where the button is pressed you can use the Blue Dot like a joystick:\u003Cbr \/\u003E\u003Cpre class=\"prettyprint\"\u003Efrom bluedot import BlueDot\u003Cbr \/\u003Efrom signal import pause\u003Cbr \/\u003E\u003Cbr \/\u003Edef dpad(pos):\u003Cbr \/\u003E    if pos.top:\u003Cbr \/\u003E        print(\"up\")\u003Cbr \/\u003E    elif pos.bottom:\u003Cbr \/\u003E        print(\"down\")\u003Cbr \/\u003E    elif pos.left:\u003Cbr \/\u003E        print(\"left\")\u003Cbr \/\u003E    elif pos.right:\u003Cbr \/\u003E        print(\"right\")\u003Cbr \/\u003E    elif pos.middle:\u003Cbr \/\u003E        print(\"fire\")\u003Cbr \/\u003E\u003Cbr \/\u003Ebd = BlueDot()\u003Cbr \/\u003Ebd.when_pressed = dpad\u003Cbr \/\u003E\u003Cbr \/\u003Epause()\u003C\/pre\u003EAdd to this \u003Ca href=\"http:\/\/gpiozero.readthedocs.io\/en\/stable\/api_boards.html#robot\"\u003Egpiozero's Robot\u003C\/a\u003E\u0026nbsp;functions, you can create a Bluetooth\u0026nbsp;controlled robot with very little code.\u003Cbr \/\u003E\u003Cpre class=\"prettyprint\"\u003Efrom bluedot import BlueDot\u003Cbr \/\u003Efrom gpiozero import Robot\u003Cbr \/\u003Efrom signal import pause\u003Cbr \/\u003E\u003Cbr \/\u003Ebd = BlueDot()\u003Cbr \/\u003Erobot = Robot(left=(lfpin, lbpin), right=(rfpin, rbpin))\u003Cbr \/\u003E\u003Cbr \/\u003Edef move(pos):\u003Cbr \/\u003E    if pos.top:\u003Cbr \/\u003E        robot.forward()\u003Cbr \/\u003E    elif pos.bottom:\u003Cbr \/\u003E        robot.backward()\u003Cbr \/\u003E    elif pos.left:\u003Cbr \/\u003E        robot.left()\u003Cbr \/\u003E    elif pos.right:\u003Cbr \/\u003E        robot.right()\u003Cbr \/\u003E\u003Cbr \/\u003Edef stop():\u003Cbr \/\u003E    robot.stop()\u003Cbr \/\u003E\u003Cbr \/\u003Ebd.when_pressed = move\u003Cbr \/\u003Ebd.when_moved = move\u003Cbr \/\u003Ebd.when_released = stop\u003Cbr \/\u003E\u003Cbr \/\u003Epause()\u003C\/pre\u003ECheck out the\u0026nbsp;\u003Ca href=\"http:\/\/bluedot.readthedocs.io\/\"\u003EBlue Dot documentation\u003C\/a\u003E\u0026nbsp;for more information and ideas\u0026nbsp;- you really can do a lot with a simple circle :)"},"link":[{"rel":"replies","type":"application/atom+xml","href":"http:\/\/www.stuffaboutcode.com\/feeds\/6467936860477264703\/comments\/default","title":"Post Comments"},{"rel":"replies","type":"text/html","href":"http:\/\/www.stuffaboutcode.com\/2017\/04\/bluedot-bluetooth-remote-for-raspberry.html#comment-form","title":"18 Comments"},{"rel":"edit","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/9007601562606157016\/posts\/default\/6467936860477264703"},{"rel":"self","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/9007601562606157016\/posts\/default\/6467936860477264703"},{"rel":"alternate","type":"text/html","href":"http:\/\/www.stuffaboutcode.com\/2017\/04\/bluedot-bluetooth-remote-for-raspberry.html","title":"Blue Dot - a bluetooth remote for Raspberry Pi"}],"author":[{"name":{"$t":"Martin O'Hanlon"},"uri":{"$t":"https:\/\/plus.google.com\/117449463512606889592"},"email":{"$t":"noreply@blogger.com"},"gd$image":{"rel":"http://schemas.google.com/g/2005#thumbnail","width":"32","height":"32","src":"\/\/lh6.googleusercontent.com\/-mXyYt17u23k\/AAAAAAAAAAI\/AAAAAAAAME4\/UO0fIz3K4Xg\/s512-c\/photo.jpg"}}],"media$thumbnail":{"xmlns$media":"http://search.yahoo.com/mrss/","url":"https:\/\/2.bp.blogspot.com\/-5fuLlNxOhuI\/WP25p5nYGWI\/AAAAAAAAWKo\/kksw5EvrxYw3Cqh6k8l0jyO02Yx5TK2-ACLcB\/s72-c\/blue_dot_feature.png","height":"72","width":"72"},"thr$total":{"$t":"18"}},{"id":{"$t":"tag:blogger.com,1999:blog-9007601562606157016.post-7088190184008843036"},"published":{"$t":"2017-01-05T21:44:00.000+00:00"},"updated":{"$t":"2017-03-07T10:41:29.967+00:00"},"category":[{"scheme":"http://www.blogger.com/atom/ns#","term":"gpio"},{"scheme":"http://www.blogger.com/atom/ns#","term":"raspberry pi"}],"title":{"type":"text","$t":"Raspberry Pi - 4 digit 7 Segment display, gpiozero"},"content":{"type":"html","$t":"I recently picked up some '\u003Ca href=\"https:\/\/shop.pimoroni.com\/products\/retro-4-digit-led-display\"\u003Eretro 4 digit LED displays\u003C\/a\u003E' from \u003Ca href=\"https:\/\/www.pimoroni.com\/\"\u003Epimoroni\u003C\/a\u003E, noticing there was no support in \u003Ca href=\"http:\/\/gpiozero.readthedocs.io\/\"\u003Egpiozero\u003C\/a\u003E for 7 segment displays (either \u003Ca href=\"http:\/\/www.stuffaboutcode.com\/2016\/10\/raspberry-pi-7-segment-display-gpiozero.html\"\u003Esingle\u003C\/a\u003E or multi digit) I decided to add them and create a \u003Ca href=\"https:\/\/github.com\/RPi-Distro\/python-gpiozero\/pull\/488\"\u003Epull request\u003C\/a\u003E. \u003Cbr \/\u003E\u003Cbr \/\u003EThis builds on the code I created for driving \u003Ca href=\"http:\/\/www.stuffaboutcode.com\/2016\/10\/raspberry-pi-7-segment-display-gpiozero.html\"\u003Esingle 7 segment displays\u003C\/a\u003E.\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: center;\"\u003E\u003Ca href=\"https:\/\/2.bp.blogspot.com\/-xqiy-pxPhBw\/WG66IFcY3TI\/AAAAAAAAVCk\/ll4Bx41jekQ3--PiGSmydUtYHPWDpdjrgCLcB\/s1600\/7seg_leds.PNG\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"\u003E\u003Cimg border=\"0\" height=\"162\" src=\"https:\/\/2.bp.blogspot.com\/-xqiy-pxPhBw\/WG66IFcY3TI\/AAAAAAAAVCk\/ll4Bx41jekQ3--PiGSmydUtYHPWDpdjrgCLcB\/s320\/7seg_leds.PNG\" width=\"320\" \/\u003E\u003C\/a\u003E\u003C\/div\u003E\u003Cbr \/\u003EHopefully the PR will get added into a gpiozero release soon, but until then add this\u0026nbsp;\u003Ca href=\"https:\/\/gist.github.com\/martinohanlon\/23a8a67bc3c68988fbb492b3d5d42ca5\"\u003Ecode\u003C\/a\u003E\u0026nbsp;to your project and use the following to drive your display.\u003Cbr \/\u003E\u003Cpre class=\"prettyprint\"\u003E#setup the pins\u003Cbr \/\u003E\u003Cbr \/\u003E#these are the pins the LED are connected too\u003Cbr \/\u003E# (in the order A, B, C, D, E, F, G, decimal point)\u003Cbr \/\u003ELED_PINS = (7, 22, 25, 17, 8, 27, 4, 24)\u003Cbr \/\u003E#these are the pins the digits are connected too\u003Cbr \/\u003EDIGIT_PINS = (23, 18, 15, 14)\u003Cbr \/\u003E\u003Cbr \/\u003E#create the multi seven segment display\u003Cbr \/\u003E# use active_high=True when digit pins are cathode (ground)\u003Cbr \/\u003Emulti_sev = MultiSevenSegmentDisplay(LED_PINS, DIGIT_PINS,\u003Cbr \/\u003E                                     active_high=True)\u003Cbr \/\u003E\u003Cbr \/\u003E#display your message\u003Cbr \/\u003Emulti_sev.display(\"LEDS\")\u003Cbr \/\u003E\u003Cbr \/\u003E#turn off the display using\u003Cbr \/\u003Emulti_sev.off()\u003C\/pre\u003EThe display function works by plexing the display, turning the LEDs on one at a time, so quickly it tricks the eye into thinking the display is showing 1 message.\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: center;\"\u003E\u003Ciframe allowfullscreen=\"\" class=\"YOUTUBE-iframe-video\" data-thumbnail-src=\"https:\/\/i.ytimg.com\/vi\/jeg5sjdHCYM\/0.jpg\" frameborder=\"0\" height=\"266\" src=\"https:\/\/www.youtube.com\/embed\/jeg5sjdHCYM?feature=player_embedded\" width=\"320\"\u003E\u003C\/iframe\u003E\u003C\/div\u003E\u003Cbr \/\u003E\u003Cbr \/\u003E"},"link":[{"rel":"replies","type":"application/atom+xml","href":"http:\/\/www.stuffaboutcode.com\/feeds\/7088190184008843036\/comments\/default","title":"Post Comments"},{"rel":"replies","type":"text/html","href":"http:\/\/www.stuffaboutcode.com\/2017\/01\/raspberry-pi-4-digit-7-segment-display.html#comment-form","title":"0 Comments"},{"rel":"edit","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/9007601562606157016\/posts\/default\/7088190184008843036"},{"rel":"self","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/9007601562606157016\/posts\/default\/7088190184008843036"},{"rel":"alternate","type":"text/html","href":"http:\/\/www.stuffaboutcode.com\/2017\/01\/raspberry-pi-4-digit-7-segment-display.html","title":"Raspberry Pi - 4 digit 7 Segment display, gpiozero"}],"author":[{"name":{"$t":"Martin O'Hanlon"},"uri":{"$t":"https:\/\/plus.google.com\/117449463512606889592"},"email":{"$t":"noreply@blogger.com"},"gd$image":{"rel":"http://schemas.google.com/g/2005#thumbnail","width":"32","height":"32","src":"\/\/lh6.googleusercontent.com\/-mXyYt17u23k\/AAAAAAAAAAI\/AAAAAAAAME4\/UO0fIz3K4Xg\/s512-c\/photo.jpg"}}],"media$thumbnail":{"xmlns$media":"http://search.yahoo.com/mrss/","url":"https:\/\/2.bp.blogspot.com\/-xqiy-pxPhBw\/WG66IFcY3TI\/AAAAAAAAVCk\/ll4Bx41jekQ3--PiGSmydUtYHPWDpdjrgCLcB\/s72-c\/7seg_leds.PNG","height":"72","width":"72"},"thr$total":{"$t":"0"}},{"id":{"$t":"tag:blogger.com,1999:blog-9007601562606157016.post-934532202965093203"},"published":{"$t":"2016-12-08T22:43:00.001+00:00"},"updated":{"$t":"2017-01-10T16:11:46.712+00:00"},"category":[{"scheme":"http://www.blogger.com/atom/ns#","term":"raspberry pi"}],"title":{"type":"text","$t":"Raspberry Pi - bash memory split check"},"content":{"type":"html","$t":"I needed a bash script which would only launch a program on a Raspberry Pi if there was enough memory dedicated to the GPU.\u003Cbr \/\u003E\u003Cbr \/\u003EI pulled this script together which checks to see if there is at least 128 MB dedicated to the GPU before starting the program.\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cpre class=\"prettyprint\"\u003E#!\/bin\/bash\u003Cbr \/\u003E\u003Cbr \/\u003E#check there is enough gpu memory to start\u003Cbr \/\u003E#get the gpu memory and output to a file called gpu_mem\u003Cbr \/\u003Evcgencmd get_mem gpu \u0026gt; gpu_mem\u003Cbr \/\u003Esource gpu_mem\u003Cbr \/\u003E#strip last char from the output (i.e. 64M)\u003Cbr \/\u003Egpu=${gpu%?}\u003Cbr \/\u003Eif (( $gpu \u0026gt;= 128 )); then\u003Cbr \/\u003E    .\/launch_program\u003Cbr \/\u003Eelse\u003Cbr \/\u003E    echo \"The program needs at least 128MB of memory allocated to the GPU\"\u003Cbr \/\u003E    echo \"Use sudo raspi-config (Advanced Options \u0026gt; Memory Split) to change\"\u003Cbr \/\u003Efi\u003Cbr \/\u003E#remove the gpu_mem file\u003Cbr \/\u003Erm gpu_mem\u003C\/pre\u003E\u003Cbr \/\u003E"},"link":[{"rel":"replies","type":"application/atom+xml","href":"http:\/\/www.stuffaboutcode.com\/feeds\/934532202965093203\/comments\/default","title":"Post Comments"},{"rel":"replies","type":"text/html","href":"http:\/\/www.stuffaboutcode.com\/2016\/12\/raspberry-pi-bash-memory-split-check.html#comment-form","title":"1 Comments"},{"rel":"edit","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/9007601562606157016\/posts\/default\/934532202965093203"},{"rel":"self","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/9007601562606157016\/posts\/default\/934532202965093203"},{"rel":"alternate","type":"text/html","href":"http:\/\/www.stuffaboutcode.com\/2016\/12\/raspberry-pi-bash-memory-split-check.html","title":"Raspberry Pi - bash memory split check"}],"author":[{"name":{"$t":"Martin O'Hanlon"},"uri":{"$t":"https:\/\/plus.google.com\/117449463512606889592"},"email":{"$t":"noreply@blogger.com"},"gd$image":{"rel":"http://schemas.google.com/g/2005#thumbnail","width":"32","height":"32","src":"\/\/lh6.googleusercontent.com\/-mXyYt17u23k\/AAAAAAAAAAI\/AAAAAAAAME4\/UO0fIz3K4Xg\/s512-c\/photo.jpg"}}],"thr$total":{"$t":"1"}},{"id":{"$t":"tag:blogger.com,1999:blog-9007601562606157016.post-7197400687200821627"},"published":{"$t":"2016-11-29T18:12:00.000+00:00"},"updated":{"$t":"2017-01-10T16:15:32.604+00:00"},"category":[{"scheme":"http://www.blogger.com/atom/ns#","term":"games"},{"scheme":"http://www.blogger.com/atom/ns#","term":"raspberry pi"}],"title":{"type":"text","$t":"Compile Allegro 5.x for Raspberry Pi"},"content":{"type":"html","$t":"I am in the process of porting \u003Ca href=\"http:\/\/www.stuffaboutcode.com\/2016\/06\/mayhem-2-open-source-cave-shooter.html\"\u003EMayhem 2\u003C\/a\u003E to Allegro 5 (with the help of \u003Ca href=\"https:\/\/github.com\/karjonas\"\u003EJonas Karlsson\u003C\/a\u003E), and wanted to compile the latest version of Allegro on the Pi, as only an older version is available through apt.\u003Cbr \/\u003E\u003Cb\u003E\u003Cbr \/\u003E\u003C\/b\u003E\u003Cb\u003EInstall the dependencies\u003C\/b\u003E\u003Cbr \/\u003E\u003Cpre class=\"prettyprint\"\u003Esudo apt-get install build-essential git cmake cmake-curses-gui xorg-dev libgl1-mesa-dev libglu-dev libpng-dev libcurl4-nss-dev libfreetype6-dev libjpeg-dev libvorbis-dev libopenal-dev libphysfs-dev libgtk2.0-dev libpulse-dev libflac-dev libdumb1-dev\u003C\/pre\u003E\u003Cb\u003EGet the Code\u003C\/b\u003E\u003Cbr \/\u003E\u003Cpre class=\"prettyprint\"\u003Egit clone https:\/\/github.com\/liballeg\/allegro5.git\u003Cbr \/\u003Ecd allegro5\u003C\/pre\u003E\u003Cb\u003ECheck out the version you want\u003C\/b\u003E - see \u003Ca href=\"https:\/\/github.com\/liballeg\/allegro5\/branches\/all\"\u003Ehere\u003C\/a\u003E for a list of versions\u003Cbr \/\u003E\u003Cpre class=\"prettyprint\"\u003Egit checkout 5.2.1\u003C\/pre\u003E\u003Cb\u003EBuild it \u003C\/b\u003E\u003Cbr \/\u003E\u003Cpre class=\"prettyprint\"\u003E\u003Cbr \/\u003Emkdir build\u003Cbr \/\u003Ecd build\u003Cbr \/\u003Ecmake .. -DCMAKE_TOOLCHAIN_FILE=..\/cmake\/Toolchain-raspberrypi.cmake\u003Cbr \/\u003Emake\u003C\/pre\u003E\u003Cb\u003EInstall it \u003C\/b\u003E\u003Cbr \/\u003E\u003Cpre class=\"prettyprint\"\u003Esudo make install\u003Cbr \/\u003Eexport PKG_CONFIG_PATH=\/home\/pi\/allegro5\/build\/lib\/pkgconfig\u003Cbr \/\u003Esudo ldconfig\u003C\/pre\u003E"},"link":[{"rel":"replies","type":"application/atom+xml","href":"http:\/\/www.stuffaboutcode.com\/feeds\/7197400687200821627\/comments\/default","title":"Post Comments"},{"rel":"replies","type":"text/html","href":"http:\/\/www.stuffaboutcode.com\/2016\/11\/compile-allegro-5x-for-raspberry-pi.html#comment-form","title":"0 Comments"},{"rel":"edit","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/9007601562606157016\/posts\/default\/7197400687200821627"},{"rel":"self","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/9007601562606157016\/posts\/default\/7197400687200821627"},{"rel":"alternate","type":"text/html","href":"http:\/\/www.stuffaboutcode.com\/2016\/11\/compile-allegro-5x-for-raspberry-pi.html","title":"Compile Allegro 5.x for Raspberry Pi"}],"author":[{"name":{"$t":"Martin O'Hanlon"},"uri":{"$t":"https:\/\/plus.google.com\/117449463512606889592"},"email":{"$t":"noreply@blogger.com"},"gd$image":{"rel":"http://schemas.google.com/g/2005#thumbnail","width":"32","height":"32","src":"\/\/lh6.googleusercontent.com\/-mXyYt17u23k\/AAAAAAAAAAI\/AAAAAAAAME4\/UO0fIz3K4Xg\/s512-c\/photo.jpg"}}],"thr$total":{"$t":"0"}},{"id":{"$t":"tag:blogger.com,1999:blog-9007601562606157016.post-1426184457101715442"},"published":{"$t":"2016-10-24T22:13:00.000+01:00"},"updated":{"$t":"2017-03-07T10:40:56.703+00:00"},"category":[{"scheme":"http://www.blogger.com/atom/ns#","term":"gpio"},{"scheme":"http://www.blogger.com/atom/ns#","term":"raspberry pi"}],"title":{"type":"text","$t":"Raspberry Pi, 7 Segment Display, gpiozero"},"content":{"type":"html","$t":"I've been working on an \u003Ca href=\"https:\/\/github.com\/RPi-Distro\/python-gpiozero\/pull\/488\"\u003Eupdate\u003C\/a\u003E to \u003Ca href=\"http:\/\/gpiozero.readthedocs.io\/en\/v1.3.1\/\"\u003Egpiozero\u003C\/a\u003E to add a 7 segment display - hopefully this will make it into gpiozero soon, but until then if you want to use a 7 segment display with your Raspberry Pi you can follow the details below.\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Ci\u003EUpdate - I have updated this to support single and \u003Ca href=\"http:\/\/www.stuffaboutcode.com\/2017\/01\/raspberry-pi-4-digit-7-segment-display.html\"\u003Emultiple digit 7 segment displays\u003C\/a\u003E.\u003C\/i\u003E\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: center;\"\u003E\u003Ca href=\"https:\/\/3.bp.blogspot.com\/-l4o5WvjlXIE\/WAzGoY3wSsI\/AAAAAAAAT5w\/7zS6pw_7gNcCOaIcAteAMg3o6GjnsLjKACLcB\/s1600\/7segment.jpg\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"\u003E\u003Cimg border=\"0\" height=\"320\" src=\"https:\/\/3.bp.blogspot.com\/-l4o5WvjlXIE\/WAzGoY3wSsI\/AAAAAAAAT5w\/7zS6pw_7gNcCOaIcAteAMg3o6GjnsLjKACLcB\/s320\/7segment.jpg\" width=\"320\" \/\u003E\u003C\/a\u003E\u003C\/div\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: left;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: left;\"\u003E\u003Cb\u003EWire it up\u003C\/b\u003E\u003C\/div\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: left;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: left;\"\u003EThe seven segment display will have 7 pins to connect the digit's LEDs, 1 pin to connect the decimal point LED and 1 pin which is the common pin.\u003C\/div\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: left;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: left;\"\u003EThe LED pins should connect to 8 GPIO pins depending on whether your 7 segment display is a common-anode or a common-cathode the common pin should connect to either a 3.3v pin or the ground. Your also going to need a suitable resistor (probably a 330) between your GPIO and LED pins.\u003C\/div\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: left;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Ctable align=\"center\" cellpadding=\"0\" cellspacing=\"0\" class=\"tr-caption-container\" style=\"margin-left: auto; margin-right: auto; text-align: center;\"\u003E\u003Ctbody\u003E\u003Ctr\u003E\u003Ctd style=\"text-align: center;\"\u003E\u003Ca href=\"https:\/\/2.bp.blogspot.com\/-ImvkAWeqcic\/WA51BA5ZOTI\/AAAAAAAAT7c\/i_7pdgcO5vsw1pe90eMciv8sOsWugv0eACLcB\/s1600\/7segment_bb.png\" imageanchor=\"1\" style=\"margin-left: auto; margin-right: auto;\"\u003E\u003Cimg border=\"0\" height=\"320\" src=\"https:\/\/2.bp.blogspot.com\/-ImvkAWeqcic\/WA51BA5ZOTI\/AAAAAAAAT7c\/i_7pdgcO5vsw1pe90eMciv8sOsWugv0eACLcB\/s320\/7segment_bb.png\" width=\"229\" \/\u003E\u003C\/a\u003E\u003C\/td\u003E\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd class=\"tr-caption\" style=\"text-align: center;\"\u003EWired up as a common-anode\u003C\/td\u003E\u003C\/tr\u003E\u003C\/tbody\u003E\u003C\/table\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: left;\"\u003E\u003Cb\u003ECode\u003C\/b\u003E\u003C\/div\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: left;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: left;\"\u003ECreate a new program and add the following to the top of the your program (this is the class which will allow you to control the display).\u003C\/div\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: left;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cpre class=\"prettyprint\"\u003Efrom gpiozero import LEDBoard, OutputDeviceError, LEDCollection\u003Cbr \/\u003E\u003Cbr \/\u003Eclass SevenSegmentDisplay(LEDBoard):\u003Cbr \/\u003E    \"\"\"\u003Cbr \/\u003E    Extends :class:`LEDBoard` for a 7 segment LED display \u003Cbr \/\u003E\u003Cbr \/\u003E    7 segment displays have either 7 or 8 pins, 7 pins for the digit display \u003Cbr \/\u003E    and an optional 8th pin for a decimal point. 7 segment displays \u003Cbr \/\u003E    typically have either a common anode or common cathode pin, when\u003Cbr \/\u003E    using a common anode display 'active_high' should be set to False.\u003Cbr \/\u003E    Instances of this class can be used to display characters or control \u003Cbr \/\u003E    individual leds on the display. For example::\u003Cbr \/\u003E\u003Cbr \/\u003E        from gpiozero import SevenSegmentDisplay\u003Cbr \/\u003E\u003Cbr \/\u003E        seven = SevenSegmentDisplay(1,2,3,4,5,6,7,8,active_high=False)\u003Cbr \/\u003E        seven.display(\"7\")\u003Cbr \/\u003E    \u003Cbr \/\u003E    :param int \\*pins:\u003Cbr \/\u003E        Specify the GPIO pins that the 7 segment display is attached to.\u003Cbr \/\u003E        Pins should be in the LED segment order A,B,C,D,E,F,G,decimal_point \u003Cbr \/\u003E        (the decimal_point is optional).\u003Cbr \/\u003E\u003Cbr \/\u003E    :param bool pwm:\u003Cbr \/\u003E        If ``True``, construct :class:`PWMLED` instances for each pin. If\u003Cbr \/\u003E        ``False`` (the default), construct regular :class:`LED` instances. This\u003Cbr \/\u003E        parameter can only be specified as a keyword parameter.\u003Cbr \/\u003E\u003Cbr \/\u003E    :param bool active_high:\u003Cbr \/\u003E        If ``True`` (the default), the :meth:`on` method will set all the\u003Cbr \/\u003E        associated pins to HIGH. If ``False``, the :meth:`on` method will set\u003Cbr \/\u003E        all pins to LOW (the :meth:`off` method always does the opposite). This\u003Cbr \/\u003E        parameter can only be specified as a keyword parameter.\u003Cbr \/\u003E\u003Cbr \/\u003E    :param bool initial_value:\u003Cbr \/\u003E        If ``False`` (the default), all LEDs will be off initially. If\u003Cbr \/\u003E        ``None``, each device will be left in whatever state the pin is found\u003Cbr \/\u003E        in when configured for output (warning: this can be on). If ``True``,\u003Cbr \/\u003E        the device will be switched on initially. This parameter can only be\u003Cbr \/\u003E        specified as a keyword parameter.    \u003Cbr \/\u003E    \u003Cbr \/\u003E    \"\"\"\u003Cbr \/\u003E    def __init__(self, *pins, **kwargs):\u003Cbr \/\u003E        # 7 segment displays must have 7 or 8 pins\u003Cbr \/\u003E        if len(pins) \u0026lt; 7 or len(pins) \u0026gt; 8:\u003Cbr \/\u003E            raise ValueError('SevenSegmentDisplay must have 7 or 8 pins')\u003Cbr \/\u003E        # Don't allow 7 segments to contain collections\u003Cbr \/\u003E        for pin in pins:\u003Cbr \/\u003E            assert not isinstance(pin, LEDCollection)\u003Cbr \/\u003E        pwm = kwargs.pop('pwm', False)\u003Cbr \/\u003E        active_high = kwargs.pop('active_high', True)\u003Cbr \/\u003E        initial_value = kwargs.pop('initial_value', False)\u003Cbr \/\u003E        if kwargs:\u003Cbr \/\u003E            raise TypeError('unexpected keyword argument: %s' % kwargs.popitem()[0])\u003Cbr \/\u003E            \u003Cbr \/\u003E        self._layouts = {\u003Cbr \/\u003E            '1': (False, True, True, False, False, False, False),\u003Cbr \/\u003E            '2': (True, True, False, True, True, False, True),\u003Cbr \/\u003E            '3': (True, True, True, True, False, False, True),\u003Cbr \/\u003E            '4': (False, True, True, False, False, True, True),\u003Cbr \/\u003E            '5': (True, False, True, True, False, True, True),\u003Cbr \/\u003E            '6': (True, False, True, True, True, True, True),\u003Cbr \/\u003E            '7': (True, True, True, False, False, False, False),\u003Cbr \/\u003E            '8': (True, True, True, True, True, True, True),\u003Cbr \/\u003E            '9': (True, True, True, True, False, True, True),\u003Cbr \/\u003E            '0': (True, True, True, True, True, True, False),\u003Cbr \/\u003E            'A': (True, True, True, False, True, True, True),\u003Cbr \/\u003E            'B': (False, False, True, True, True, True, True),\u003Cbr \/\u003E            'C': (True, False, False, True, True, True, False),\u003Cbr \/\u003E            'D': (False, True, True, True, True, False, True),\u003Cbr \/\u003E            'E': (True, False, False, True, True, True, True),\u003Cbr \/\u003E            'F': (True, False, False, False, True, True, True),\u003Cbr \/\u003E            'G': (True, False, True, True, True, True, False),\u003Cbr \/\u003E            'H': (False, True, True, False, True, True, True),\u003Cbr \/\u003E            'I': (False, False, False, False, True, True, False),\u003Cbr \/\u003E            'J': (False, True, True, True, True, False, False),\u003Cbr \/\u003E            'K': (True, False, True, False, True, True, True),\u003Cbr \/\u003E            'L': (False, False, False, True, True, True, False),\u003Cbr \/\u003E            'M': (True, False, True, False, True, False, False),\u003Cbr \/\u003E            'N': (True, True, True, False, True, True, False),\u003Cbr \/\u003E            'O': (True, True, True, True, True, True, False),\u003Cbr \/\u003E            'P': (True, True, False, False, True, True, True),\u003Cbr \/\u003E            'Q': (True, True, False, True, False, True, True),\u003Cbr \/\u003E            'R': (True, True, False, False, True, True, False),\u003Cbr \/\u003E            'S': (True, False, True, True, False, True, True),\u003Cbr \/\u003E            'T': (False, False, False, True, True, True, True),\u003Cbr \/\u003E            'U': (False, False, True, True, True, False, False),\u003Cbr \/\u003E            'V': (False, True, True, True, True, True, False),\u003Cbr \/\u003E            'W': (False, True, False, True, False, True, False),\u003Cbr \/\u003E            'X': (False, True, True, False, True, True, True),\u003Cbr \/\u003E            'Y': (False, True, True, True, False, True, True),\u003Cbr \/\u003E            'Z': (True, True, False, True, True, False, True),\u003Cbr \/\u003E            '-': (False, False, False, False, False, False, True),\u003Cbr \/\u003E            ' ': (False, False, False, False, False, False, False),\u003Cbr \/\u003E            '=': (False, False, False, True, False, False, True)\u003Cbr \/\u003E        }\u003Cbr \/\u003E        \u003Cbr \/\u003E        super(SevenSegmentDisplay, self).__init__(*pins, pwm=pwm, active_high=active_high, initial_value=initial_value)\u003Cbr \/\u003E    \u003Cbr \/\u003E    def display(self, char):\u003Cbr \/\u003E        \"\"\"\u003Cbr \/\u003E        Display a character on the 7 segment display\u003Cbr \/\u003E\u003Cbr \/\u003E        :param string char:\u003Cbr \/\u003E            A single character to be displayed \u003Cbr \/\u003E        \"\"\"\u003Cbr \/\u003E        char = str(char).upper()\u003Cbr \/\u003E        if len(char) \u0026gt; 1:\u003Cbr \/\u003E            raise ValueError('only a single character can be displayed')\u003Cbr \/\u003E        if char not in self._layouts:\u003Cbr \/\u003E            raise ValueError('there is no layout for character - %s' % char)\u003Cbr \/\u003E        layout = self._layouts[char]\u003Cbr \/\u003E        for led in range(7):\u003Cbr \/\u003E            self[led].value = layout[led]\u003Cbr \/\u003E            \u003Cbr \/\u003E    def display_hex(self, hexnumber):\u003Cbr \/\u003E        \"\"\"\u003Cbr \/\u003E        Display a hex number (0-F) on the 7 segment display\u003Cbr \/\u003E\u003Cbr \/\u003E        :param int hexnumber:\u003Cbr \/\u003E            The number to be displayed in hex \u003Cbr \/\u003E        \"\"\"\u003Cbr \/\u003E        self.display(hex(hexnumber)[2:])\u003Cbr \/\u003E\u003Cbr \/\u003E    @property\u003Cbr \/\u003E    def decimal_point(self):\u003Cbr \/\u003E        \"\"\"\u003Cbr \/\u003E        Represents the status of the decimal point led\u003Cbr \/\u003E        \"\"\"\u003Cbr \/\u003E        # does the 7seg display have a decimal point (i.e pin 8)\u003Cbr \/\u003E        if len(self) \u0026gt; 7:\u003Cbr \/\u003E            return self[7].value \u003Cbr \/\u003E        else:\u003Cbr \/\u003E            raise OutputDeviceError('there is no 8th pin for the decimal point')\u003Cbr \/\u003E    \u003Cbr \/\u003E    @decimal_point.setter\u003Cbr \/\u003E    def decimal_point(self, value):\u003Cbr \/\u003E        \"\"\"\u003Cbr \/\u003E        Sets the status of the decimal point led\u003Cbr \/\u003E        \"\"\"\u003Cbr \/\u003E        if len(self) \u0026gt; 7:\u003Cbr \/\u003E            self[7].value = value\u003Cbr \/\u003E        else:\u003Cbr \/\u003E            raise OutputDeviceError('there is no 8th pin for the decimal point')    \u003Cbr \/\u003E    \u003Cbr \/\u003E    def set_char_layout(self, char, layout):\u003Cbr \/\u003E        \"\"\"\u003Cbr \/\u003E        Create or update a custom character layout, which can be used with the \u003Cbr \/\u003E        `display` method.\u003Cbr \/\u003E\u003Cbr \/\u003E        :param string char:\u003Cbr \/\u003E            A single character to be displayed \u003Cbr \/\u003E            \u003Cbr \/\u003E        :param tuple layout:\u003Cbr \/\u003E            A 7 bool tuple of LED values in the segment order A, B, C, D, E, F, G\u003Cbr \/\u003E        \"\"\"\u003Cbr \/\u003E        char = str(char).upper()\u003Cbr \/\u003E        if len(char) != 1:\u003Cbr \/\u003E            raise ValueError('only a single character can be used in a layout')\u003Cbr \/\u003E        if len(layout) != 7:\u003Cbr \/\u003E            raise ValueError('a character layout must have 7 segments')\u003Cbr \/\u003E        self._layouts[char] = layout\u003C\/pre\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: left;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: left;\"\u003E\u003Cb\u003ECreate the display\u003C\/b\u003E\u003C\/div\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: left;\"\u003ECreate an instance on the 7 segment display object, you need to pass the pins in the order, A,B,C,D,E,F,G,Decimal Point.\u003C\/div\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: center;\"\u003E\u003Ca href=\"https:\/\/3.bp.blogspot.com\/-gJ3oQE1isRE\/WA52VfzvwSI\/AAAAAAAAT7o\/d55nVUMI5oEe0DFG6C_T08XLacIsd9qcACLcB\/s1600\/7seg_pinouts.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"\u003E\u003Cimg border=\"0\" height=\"320\" src=\"https:\/\/3.bp.blogspot.com\/-gJ3oQE1isRE\/WA52VfzvwSI\/AAAAAAAAT7o\/d55nVUMI5oEe0DFG6C_T08XLacIsd9qcACLcB\/s320\/7seg_pinouts.png\" width=\"217\" \/\u003E\u003C\/a\u003E\u003C\/div\u003E\u003Cpre class=\"prettyprint\"\u003Eseven_seg = SevenSegmentDisplay(20, 21, 6, 22, 27, 18, 15, 13)\u003C\/pre\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: left;\"\u003EIf you have a common-anode display you will also need to set the active_high parameter to False:\u003C\/div\u003E\u003Cpre class=\"prettyprint\"\u003Eseven_seg = SevenSegmentDisplay(20, 21, 6, 22, 27, 18, 15, 13, \u003Cbr \/\u003E                                active_high=False)\u003C\/pre\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: left;\"\u003E\u003Cb\u003EDisplay a character\u003C\/b\u003E\u003C\/div\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: left;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: left;\"\u003EYou can show a character on the display using the .display() method.\u003C\/div\u003E\u003Cpre class=\"prettyprint\"\u003Eseven_seg.display(\"8\")\u003C\/pre\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: left;\"\u003E\u003Cb\u003EAdd a new character\u003C\/b\u003E\u003C\/div\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: left;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: left;\"\u003EYou can add your own characters to the display, using the .set_char_layout() method passing the character and a tuple of 7 booleans for each of the LEDs in order A,B,C,D,E,F,G.\u003C\/div\u003E\u003Cpre class=\"prettyprint\"\u003Eseven_seg.set_char_layout(\"_\", (False, False, False, True, False, False, False))\u003Cbr \/\u003Eseven_seg.display(\"_\")\u003C\/pre\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: left;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: left;\"\u003E\u003Cb\u003EDecimal point\u003C\/b\u003E\u003C\/div\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: left;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: left;\"\u003EYou can turn the decimal point on by setting the .decimal_point property.\u003C\/div\u003E\u003Cpre class=\"prettyprint\"\u003Eseven_seg.decimal_point = True\u003C\/pre\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: left;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: left;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: left;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: left;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E"},"link":[{"rel":"replies","type":"application/atom+xml","href":"http:\/\/www.stuffaboutcode.com\/feeds\/1426184457101715442\/comments\/default","title":"Post Comments"},{"rel":"replies","type":"text/html","href":"http:\/\/www.stuffaboutcode.com\/2016\/10\/raspberry-pi-7-segment-display-gpiozero.html#comment-form","title":"0 Comments"},{"rel":"edit","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/9007601562606157016\/posts\/default\/1426184457101715442"},{"rel":"self","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/9007601562606157016\/posts\/default\/1426184457101715442"},{"rel":"alternate","type":"text/html","href":"http:\/\/www.stuffaboutcode.com\/2016\/10\/raspberry-pi-7-segment-display-gpiozero.html","title":"Raspberry Pi, 7 Segment Display, gpiozero"}],"author":[{"name":{"$t":"Martin O'Hanlon"},"uri":{"$t":"https:\/\/plus.google.com\/117449463512606889592"},"email":{"$t":"noreply@blogger.com"},"gd$image":{"rel":"http://schemas.google.com/g/2005#thumbnail","width":"32","height":"32","src":"\/\/lh6.googleusercontent.com\/-mXyYt17u23k\/AAAAAAAAAAI\/AAAAAAAAME4\/UO0fIz3K4Xg\/s512-c\/photo.jpg"}}],"media$thumbnail":{"xmlns$media":"http://search.yahoo.com/mrss/","url":"https:\/\/3.bp.blogspot.com\/-l4o5WvjlXIE\/WAzGoY3wSsI\/AAAAAAAAT5w\/7zS6pw_7gNcCOaIcAteAMg3o6GjnsLjKACLcB\/s72-c\/7segment.jpg","height":"72","width":"72"},"thr$total":{"$t":"0"}},{"id":{"$t":"tag:blogger.com,1999:blog-9007601562606157016.post-7438934064274327565"},"published":{"$t":"2016-09-20T20:03:00.000+01:00"},"updated":{"$t":"2016-09-20T20:33:39.524+01:00"},"category":[{"scheme":"http://www.blogger.com/atom/ns#","term":"microbit"},{"scheme":"http://www.blogger.com/atom/ns#","term":"minecraft"}],"title":{"type":"text","$t":"Microbit making Minecraft Earthquakes"},"content":{"type":"html","$t":"In this tutorial you are going to connect your Microbit up to your Raspberry Pi and program them so that when your Microbit is shaken it creates an earthquake in Minecraft.\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: center;\"\u003E\u003Ca href=\"https:\/\/4.bp.blogspot.com\/-a9W_j-3Dzig\/V-GM0hU5q7I\/AAAAAAAAS3M\/XeH9FklRXHY3p8mHXxGkOgyAlOqypyUOgCLcB\/s1600\/ezgif.com-optimize.gif\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"\u003E\u003Cimg border=\"0\" height=\"222\" src=\"https:\/\/4.bp.blogspot.com\/-a9W_j-3Dzig\/V-GM0hU5q7I\/AAAAAAAAS3M\/XeH9FklRXHY3p8mHXxGkOgyAlOqypyUOgCLcB\/s400\/ezgif.com-optimize.gif\" width=\"400\" \/\u003E\u003C\/a\u003E\u003C\/div\u003E\u003Cbr \/\u003EThis is part of a workshop I delivered at \u003Ca href=\"http:\/\/2016.pyconuk.org\/\"\u003EPyConUK 2016\u003C\/a\u003E\u0026nbsp;-\u0026nbsp;\u003Ca href=\"https:\/\/drive.google.com\/open?id=1VElMfrxKNG5qnwfQ0mx5o8-IeuYRfRatxlRqzInn6GE\"\u003Edownload the complete worksheet\u003C\/a\u003E.\u003Cbr \/\u003E\u003Cbr \/\u003EYou are going to connect your micro:bit’s pins to the Raspberry Pi gpio pins using some cables and crocodile clips; programs on the micro@bit and Raspberry Pi will make Steve shake in Minecraft.\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cb\u003EInstall mu\u003C\/b\u003E\u003Cbr \/\u003ETo put you python program on your Micro:bit you will need the editor \u003Ca href=\"https:\/\/github.com\/mu-editor\/mu\"\u003Emu\u003C\/a\u003E.\u003Cbr \/\u003E\u003Cbr \/\u003EOpen a Terminal (Menu \u0026gt; Accessories \u0026gt; Terminal) and type:\u003Cbr \/\u003E\u003Cpre class=\"prettyprint\"\u003Esudo apt-get update\u003Cbr \/\u003Esudo apt-get install mu\u003Cbr \/\u003E\u003C\/pre\u003E\u003Cb\u003EAngry micro:bit\u003C\/b\u003E\u003Cbr \/\u003EThe first task is to program your micro:bit so it gets angry when it's shaken.\u003Cbr \/\u003E\u003Cul\u003E\u003Cli\u003EConnect your micro:bit to the Raspberry Pi using the USB cable.\u003C\/li\u003E\u003Cli\u003EOpen mu to create a new Python program for your micro:bit by clicking on Menu \u0026gt; Programming \u0026gt; mu.\u003C\/li\u003E\u003Cli\u003EClick New and type the following code into the editor.\u003C\/li\u003E\u003C\/ul\u003E\u003Cpre class=\"prettyprint\"\u003Efrom microbit import *\u003Cbr \/\u003Ewhile True:\u003Cbr \/\u003E    if accelerometer.current_gesture() == \"shake\":\u003Cbr \/\u003E        display.show(Image.ANGRY)\u003Cbr \/\u003E    else:\u003Cbr \/\u003E        display.show(Image.HAPPY)\u003C\/pre\u003E\u003Cul\u003E\u003Cli\u003EClick Flash to put your program on your micro:bit.\u003C\/li\u003E\u003C\/ul\u003EWhen the yellow light on the back of your micro:bit stops flashing your program will run.\u003Cbr \/\u003EYou should see a happy face on your micro:bit - until it’s shaken!\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: center;\"\u003E\u003Ca href=\"https:\/\/3.bp.blogspot.com\/-JKN7pZ0qb0g\/V-D-tj_UvVI\/AAAAAAAAS2o\/SxpXnaUC9gcP1wXXl-L9-TzxdHzsaC1-wCLcB\/s1600\/mbhappy.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"\u003E\u003Cimg border=\"0\" height=\"163\" src=\"https:\/\/3.bp.blogspot.com\/-JKN7pZ0qb0g\/V-D-tj_UvVI\/AAAAAAAAS2o\/SxpXnaUC9gcP1wXXl-L9-TzxdHzsaC1-wCLcB\/s200\/mbhappy.png\" width=\"200\" \/\u003E\u003C\/a\u003E\u003C\/div\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: left;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv class=\"separator\" style=\"clear: both;\"\u003E\u003Cspan style=\"color: red;\"\u003EAny errors will be scrolled on your micro:bit’s leds; if you get an error check your code carefully.\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: left;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: left;\"\u003E\u003Cb\u003EPins\u003C\/b\u003E\u003C\/div\u003ENow you need to finish your micro:bit program so that it turns pin 0 on and off when it's shaken\u003Cbr \/\u003E\u003Cul\u003E\u003Cli\u003EGo back to Mu and modify your program so that it turns pins 0 on (1) and off (0) when shaken.\u003C\/li\u003E\u003C\/ul\u003E\u003Cpre class=\"prettyprint\"\u003Efrom microbit import *\u003Cbr \/\u003Ewhile True:\u003Cbr \/\u003E    if accelerometer.current_gesture() == \"shake\":\u003Cbr \/\u003E        display.show(Image.ANGRY)\u003Cbr \/\u003E        \u003Cb\u003Epin0.write_digital(1)\u003C\/b\u003E\u003Cbr \/\u003E    else:\u003Cbr \/\u003E        display.show(Image.HAPPY)\u003Cbr \/\u003E        \u003Cb\u003Epin0.write_digital(0)\u003C\/b\u003E\u003C\/pre\u003E\u003Cul\u003E\u003Cli\u003EClick Flash to put your program on your micro:bit.\u003C\/li\u003E\u003C\/ul\u003E\u003Cb\u003EConnect it up\u003C\/b\u003E\u003Cbr \/\u003ENext you will use a jumper cable and a crocodile clip to connect your micro:bit to the Raspberry Pi.\u003Cbr \/\u003E\u003Cul\u003E\u003Cli\u003EConnect the jumper cable to GPIO17 on the Raspberry Pi\u003C\/li\u003E\u003Cli\u003EClip the crocodile clip to the end of the jumper cable\u003C\/li\u003E\u003Cli\u003EClip the other end of the crocodile clip to pin0 on the micro:bit\u003C\/li\u003E\u003C\/ul\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: center;\"\u003E\u003Ca href=\"https:\/\/2.bp.blogspot.com\/-ZuzXVU0KuAo\/V-GEqV0YyhI\/AAAAAAAAS24\/NfKl9mmPgpQLIAMEt1F58Ik66mZ7ObDkgCLcB\/s1600\/IMGP6235_crop.JPG\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"\u003E\u003Cimg border=\"0\" height=\"250\" src=\"https:\/\/2.bp.blogspot.com\/-ZuzXVU0KuAo\/V-GEqV0YyhI\/AAAAAAAAS24\/NfKl9mmPgpQLIAMEt1F58Ik66mZ7ObDkgCLcB\/s400\/IMGP6235_crop.JPG\" width=\"400\" \/\u003E\u003C\/a\u003E\u003Ca href=\"https:\/\/3.bp.blogspot.com\/-Qb9qfvsetIw\/V-GFLBiDUtI\/AAAAAAAAS28\/ee5haoVBCVs53ZoUGwwzPNFkvY2h15ycACLcB\/s1600\/Raspberry-Pi-GPIO-Layout-Model-B-Plus-rotated-2700x900.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"\u003E\u003Cimg border=\"0\" height=\"106\" src=\"https:\/\/3.bp.blogspot.com\/-Qb9qfvsetIw\/V-GFLBiDUtI\/AAAAAAAAS28\/ee5haoVBCVs53ZoUGwwzPNFkvY2h15ycACLcB\/s320\/Raspberry-Pi-GPIO-Layout-Model-B-Plus-rotated-2700x900.png\" width=\"320\" \/\u003E\u003C\/a\u003E\u003C\/div\u003E\u003Cdiv\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cb\u003EShake Steve\u003C\/b\u003E\u003Cbr \/\u003EYou now need to create your Minecraft program to shake Steve when the micro:bit is shaken and pin0 is set to 1.\u003Cbr \/\u003E\u003Cul\u003E\u003Cli\u003EClick Menu \u0026gt; Games \u0026gt; Minecraft: Pi Edition to run the game.\u003C\/li\u003E\u003Cli\u003EClick Start Game, then click Create New (or choose an existing one) to enter a world:\u003C\/li\u003E\u003Cli\u003EPress ESC to go back to the Minecraft menu but leave the game playing.\u003C\/li\u003E\u003Cli\u003EOpen Python IDLE by clicking Menu \u0026gt; Programming \u0026gt; Python 3.\u003C\/li\u003E\u003Cli\u003EUse File \u0026gt; New Window to create a new program and save it as ‘mc_micro.py’.\u003C\/li\u003E\u003Cli\u003EType the following code into the program to import the modules you will need\u003C\/li\u003E\u003C\/ul\u003E\u003Cpre class=\"prettyprint\"\u003Efrom mcpi.minecraft import Minecraft\u003Cbr \/\u003Efrom gpiozero import DigitalInputDevice\u003Cbr \/\u003Efrom time import sleep\u003C\/pre\u003E\u003Cul\u003E\u003Cli\u003ECreate a connection to Minecraft using the code.\u003C\/li\u003E\u003C\/ul\u003E\u003Cpre class=\"prettyprint\"\u003Emc = Minecraft.create()\u003C\/pre\u003E\u003Cul\u003E\u003Cli\u003EPost a message to the chat window.\u003C\/li\u003E\u003C\/ul\u003E\u003Cpre class=\"prettyprint\"\u003Emc.postToChat(\"Micromine bitcraft earthquake\")\u003C\/pre\u003E\u003Cul\u003E\u003Cli\u003ERun your program by clicking Run \u0026gt; Run Module.\u003C\/li\u003E\u003C\/ul\u003E\u003Cdiv\u003EYou should see your message appear in the Minecraft chat window.\u003C\/div\u003E\u003Cdiv\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv\u003E\u003Cdiv\u003E\u003Cspan style=\"color: red;\"\u003EAny errors will be displayed in the Python Shell in red.\u003C\/span\u003E\u003C\/div\u003E\u003C\/div\u003E\u003Cdiv\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv\u003E\u003Cdiv\u003EUpdate your program to shake Steve, by adding the following code at the bottom of your program.\u003C\/div\u003E\u003Cdiv\u003E\u003Cul\u003E\u003Cli\u003ECreate a pin which is connected to Pi GPIO 17 and micro:bit pin 0.\u003C\/li\u003E\u003C\/ul\u003E\u003C\/div\u003E\u003Cpre class=\"prettyprint\"\u003Epin0 = DigitalInputDevice(17)\u003C\/pre\u003E\u003Cdiv\u003E\u003Cul\u003E\u003Cli\u003ECreate a loop which constants gets Steve’s position.\u003C\/li\u003E\u003C\/ul\u003E\u003C\/div\u003E\u003Cpre class=\"prettyprint\"\u003Ewhile True:\u003Cbr \/\u003E    sleep(0.1)\u003Cbr \/\u003E    pos = mc.player.getPos()\u003C\/pre\u003E\u003Cdiv\u003E\u003Cul\u003E\u003Cli\u003EIf pin0 is on (1) it adds 0.5 to Steve’s height (y).\u003C\/li\u003E\u003C\/ul\u003E\u003C\/div\u003E\u003Cpre class=\"prettyprint\"\u003E    if pin0.value == 1:\u003Cbr \/\u003E        pos.y = pos.y + 0.5\u003Cbr \/\u003E        mc.player.setPos(pos)\u003C\/pre\u003E\u003Cdiv\u003E\u003Cul\u003E\u003Cli\u003ERun your program by clicking Run \u0026gt; Run Module.\u003C\/li\u003E\u003C\/ul\u003E\u003C\/div\u003E\u003Cdiv\u003EShake your micro:bit and Steve will be shaken in Minecraft.\u003C\/div\u003E\u003C\/div\u003E\u003Cdiv\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv\u003E\u003Cb\u003EChallenges\u003C\/b\u003E\u003C\/div\u003E\u003Cdiv\u003ECan you change the program so that it creates a more realistic earthquake by adding random values to the x, y, z values.\u003C\/div\u003E\u003Cdiv\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv\u003EComplete the\u0026nbsp;\u003Ca href=\"https:\/\/drive.google.com\/open?id=1VElMfrxKNG5qnwfQ0mx5o8-IeuYRfRatxlRqzInn6GE\"\u003Eworksheet\u003C\/a\u003E\u0026nbsp;from \u003Ca href=\"http:\/\/2016.pyconuk.org\/\"\u003EPyConUK 2016\u003C\/a\u003E\u0026nbsp;which includes using the micro:bit buttons to makes blocks disappear and appear.\u003C\/div\u003E\u003Cdiv\u003E\u003Cbr \/\u003E\u003C\/div\u003E"},"link":[{"rel":"replies","type":"application/atom+xml","href":"http:\/\/www.stuffaboutcode.com\/feeds\/7438934064274327565\/comments\/default","title":"Post Comments"},{"rel":"replies","type":"text/html","href":"http:\/\/www.stuffaboutcode.com\/2016\/09\/microbit-making-minecraft-earthquakes.html#comment-form","title":"3 Comments"},{"rel":"edit","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/9007601562606157016\/posts\/default\/7438934064274327565"},{"rel":"self","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/9007601562606157016\/posts\/default\/7438934064274327565"},{"rel":"alternate","type":"text/html","href":"http:\/\/www.stuffaboutcode.com\/2016\/09\/microbit-making-minecraft-earthquakes.html","title":"Microbit making Minecraft Earthquakes"}],"author":[{"name":{"$t":"Martin O'Hanlon"},"uri":{"$t":"https:\/\/plus.google.com\/117449463512606889592"},"email":{"$t":"noreply@blogger.com"},"gd$image":{"rel":"http://schemas.google.com/g/2005#thumbnail","width":"32","height":"32","src":"\/\/lh6.googleusercontent.com\/-mXyYt17u23k\/AAAAAAAAAAI\/AAAAAAAAME4\/UO0fIz3K4Xg\/s512-c\/photo.jpg"}}],"media$thumbnail":{"xmlns$media":"http://search.yahoo.com/mrss/","url":"https:\/\/4.bp.blogspot.com\/-a9W_j-3Dzig\/V-GM0hU5q7I\/AAAAAAAAS3M\/XeH9FklRXHY3p8mHXxGkOgyAlOqypyUOgCLcB\/s72-c\/ezgif.com-optimize.gif","height":"72","width":"72"},"thr$total":{"$t":"3"}},{"id":{"$t":"tag:blogger.com,1999:blog-9007601562606157016.post-7457420126039383438"},"published":{"$t":"2016-06-17T20:00:00.000+01:00"},"updated":{"$t":"2016-06-17T20:00:23.852+01:00"},"category":[{"scheme":"http://www.blogger.com/atom/ns#","term":"games"}],"title":{"type":"text","$t":"Mayhem 2 - an open source cave shooter"},"content":{"type":"html","$t":"I recently \u003Ca href=\"http:\/\/www.stuffaboutcode.com\/2016\/04\/mayhem-classic-amiga-game-ported-to.html\"\u003Eported an abandoned\u0026nbsp;version the classic amiga game, Mayhem, to the Raspberry Pi\u003C\/a\u003E - I did this exclusively so I could play the game with my friend, Lee, using \u003Ca href=\"http:\/\/retropie.org\/\"\u003ERetroPie\u003C\/a\u003E.\u003Cbr \/\u003E\u003Cbr \/\u003ESince then myself and Lee, an artist for sumo digital, have been modding the game, adding new levels, features and controls - it now really is Mayhem \u003Cb\u003E2\u003C\/b\u003E.\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: center;\"\u003E\u003Ca href=\"https:\/\/3.bp.blogspot.com\/-tCZamlHJVZk\/V2O4jkOWvoI\/AAAAAAAARzA\/-CSahDZTSoAWEtuCAhBvsAAGmN1XEuT2gCLcB\/s1600\/Mayhem2pg.jpg\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"\u003E\u003Cimg border=\"0\" height=\"240\" src=\"https:\/\/3.bp.blogspot.com\/-tCZamlHJVZk\/V2O4jkOWvoI\/AAAAAAAARzA\/-CSahDZTSoAWEtuCAhBvsAAGmN1XEuT2gCLcB\/s320\/Mayhem2pg.jpg\" width=\"320\" \/\u003E\u003C\/a\u003E\u003C\/div\u003E\u003Cbr \/\u003EMayhem 2 is available for \u003Ca href=\"https:\/\/github.com\/martinohanlon\/mayhem\"\u003EWindows\u003C\/a\u003E and \u003Ca href=\"https:\/\/github.com\/martinohanlon\/mayhem-pi\"\u003ERaspberry Pi\u003C\/a\u003E.\u003Cbr \/\u003E\u003Cbr \/\u003EI'm hoping there will\u0026nbsp;be lots more features and changes to the game over the coming months, if anyone has any idea's or would like to contribute it would be great to hear from you.\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cb\u003EGameplay\u003C\/b\u003E\u003Cbr \/\u003E\u003Cbr \/\u003EMayhem 2\u0026nbsp;is a multiplayer (2 - 4) flight shooter with a really simple objective - destroy your opponents before they destroy you.\u003Cbr \/\u003E\u003Cbr \/\u003EYour ship has limited fuel which will run down when you boost, if you run out you will be unable to control your ship, to refuel, land on any flat surface.\u003Cbr \/\u003E\u003Cbr \/\u003EYou can protect yourself from attack using your shields which will stop all bullets, be careful though your shields run down quickly and you wont be able to boost while your shields are on. \u003Cbr \/\u003E\u003Cbr \/\u003EPower -ups are dropped (sometimes) when a player is destroyed (by either crashing or being shot) and when collected will give you a temporary boost such as a triple-shot weapon, better shields or more thrust.\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: center;\"\u003E\u003Ciframe allowfullscreen=\"\" class=\"YOUTUBE-iframe-video\" data-thumbnail-src=\"https:\/\/i.ytimg.com\/vi\/oxAzUuwuleM\/0.jpg\" frameborder=\"0\" height=\"266\" src=\"https:\/\/www.youtube.com\/embed\/oxAzUuwuleM?feature=player_embedded\" width=\"320\"\u003E\u003C\/iframe\u003E\u003C\/div\u003E\u003Cbr \/\u003ENew levels have been added including new ones with no edges, where you can seamlessly fly across the edge of the map.\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: center;\"\u003E\u003Ciframe allowfullscreen=\"\" class=\"YOUTUBE-iframe-video\" data-thumbnail-src=\"https:\/\/i.ytimg.com\/vi\/E3mho6J6OG8\/0.jpg\" frameborder=\"0\" height=\"266\" src=\"https:\/\/www.youtube.com\/embed\/E3mho6J6OG8?feature=player_embedded\" width=\"320\"\u003E\u003C\/iframe\u003E\u003C\/div\u003E\u003Cbr \/\u003E\u003Cb\u003EOptions\u003C\/b\u003E\u003Cbr \/\u003E\u003Cbr \/\u003ELevels 1-3 are the original game levels, all other levels are new to Mayhem 2.\u003Cbr \/\u003E\u003Cbr \/\u003EDCA are anti spaceship guns which will fire at the player if they get too close.\u003Cbr \/\u003E\u003Cbr \/\u003EWall collision can be turned off for new players to get used to the controls and playing the game.\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cb\u003EControls\u003C\/b\u003E\u003Cbr \/\u003E\u003Cbr \/\u003EMayhem 2 supports\u0026nbsp; joystick and keyboard control, joystick controls can be\u0026nbsp;configured via the main menu.\u003Cbr \/\u003E\u003Cbr \/\u003EDefault joystick controls, assume an \"xbox \/ ps like\" joystick:\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Ctable\u003E\u003Cthead\u003E\u003Ctr\u003E\u003Cth\u003EControl\u003C\/th\u003E\u003Cth\u003EAction\u003C\/th\u003E\u003C\/tr\u003E\u003C\/thead\u003E\u003Ctbody\u003E\u003Ctr\u003E\u003Ctd\u003EStick 1\u003C\/td\u003E\u003Ctd\u003ELeft \/ Right\u003C\/td\u003E\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd\u003EButton 1 (A)\u003C\/td\u003E\u003Ctd\u003EThrust\u003C\/td\u003E\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd\u003EButton 2 (B)\u003C\/td\u003E\u003Ctd\u003EShield\u003C\/td\u003E\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd\u003EButton 6 (RB)\u003C\/td\u003E\u003Ctd\u003EFire\u003C\/td\u003E\u003C\/tr\u003E\u003C\/tbody\u003E\u003C\/table\u003E\u003Cbr \/\u003EIf joysticks are connected, they are used as the players controls, if there are less than 4 joysticks connected, keys are used for the rest of the players in order:\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Ctable\u003E\u003Cthead\u003E\u003Ctr\u003E\u003Cth\u003EKey\u003C\/th\u003E\u003Cth\u003ELeft\u003C\/th\u003E\u003Cth\u003ERight\u003C\/th\u003E\u003Cth\u003EShield\u003C\/th\u003E\u003Cth\u003EThrust\u003C\/th\u003E\u003Cth\u003EFire\u003C\/th\u003E\u003C\/tr\u003E\u003C\/thead\u003E\u003Ctbody\u003E\u003Ctr\u003E\u003Ctd\u003E1\u003C\/td\u003E\u003Ctd\u003Ez\u003C\/td\u003E\u003Ctd\u003Ex\u003C\/td\u003E\u003Ctd\u003Ec\u003C\/td\u003E\u003Ctd\u003Ev\u003C\/td\u003E\u003Ctd\u003Eg\u003C\/td\u003E\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd\u003E2\u003C\/td\u003E\u003Ctd\u003Eleft\u003C\/td\u003E\u003Ctd\u003Eright\u003C\/td\u003E\u003Ctd\u003Epad del\u003C\/td\u003E\u003Ctd\u003Epad 0\u003C\/td\u003E\u003Ctd\u003Epad enter\u003C\/td\u003E\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd\u003E3\u003C\/td\u003E\u003Ctd\u003Eb\u003C\/td\u003E\u003Ctd\u003En\u003C\/td\u003E\u003Ctd\u003E,\u003C\/td\u003E\u003Ctd\u003Em\u003C\/td\u003E\u003Ctd\u003El\u003C\/td\u003E\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd\u003E4\u003C\/td\u003E\u003Ctd\u003Ey\u003C\/td\u003E\u003Ctd\u003Eu\u003C\/td\u003E\u003Ctd\u003Eo\u003C\/td\u003E\u003Ctd\u003Ei\u003C\/td\u003E\u003Ctd\u003E0\u003C\/td\u003E\u003C\/tr\u003E\u003C\/tbody\u003E\u003C\/table\u003E\u003Cbr \/\u003E\u003Cb\u003EInstall\u003C\/b\u003E\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cb\u003E\u003Ci\u003EFor windows:\u003C\/i\u003E\u003C\/b\u003E\u003Cbr \/\u003E\u003Cbr \/\u003EDownload the zip file from \u003Ca href=\"https:\/\/github.com\/martinohanlon\/mayhem\/archive\/master.zip\"\u003Ehttps:\/\/github.com\/martinohanlon\/mayhem\/archive\/master.zip\u003C\/a\u003E, open and copy mayhem-master to a folder. \u003Cbr \/\u003E\u003Cbr \/\u003EDouble click Mayhem2.exe in the mayhem-master folder. \u003Cbr \/\u003E\u003Cbr \/\u003ENote - You maybe presented with message saying that the application was stopped from starting as it is unrecognised, click 'more info' and and choose 'run anyway'. \u003Cbr \/\u003E\u003Cdiv\u003E\u003Cb\u003E\u003Cbr \/\u003E\u003C\/b\u003E\u003C\/div\u003E\u003Cb\u003E\u003Ci\u003EFor Raspberry Pi:\u003C\/i\u003E\u003C\/b\u003E\u003Cbr \/\u003E\u003Cbr \/\u003EOpen a terminal and type:\u003Cbr \/\u003E\u003Cpre class=\"prettyprint\"\u003Esudo apt-get install liballegro4.4 liballegro4-dev\u003Cbr \/\u003Egit clone https:\/\/github.com\/martinohanlon\/mayhem-pi\u003C\/pre\u003ERun using:\u003Cbr \/\u003E\u003Cpre class=\"prettyprint\"\u003Ecd mayhem-pi\u003Cbr \/\u003E.\/start\u003C\/pre\u003E\u003Cb\u003ECode\u003C\/b\u003E\u003Cbr \/\u003E\u003Cbr \/\u003EThe full source code is available on GitHub for \u003Ca href=\"https:\/\/github.com\/martinohanlon\/mayhem\"\u003EWindows\u003C\/a\u003E and \u003Ca href=\"https:\/\/github.com\/martinohanlon\/mayhem-pi\"\u003ERaspberry Pi\u003C\/a\u003E.\u003Cbr \/\u003E\u003Cbr \/\u003E"},"link":[{"rel":"replies","type":"application/atom+xml","href":"http:\/\/www.stuffaboutcode.com\/feeds\/7457420126039383438\/comments\/default","title":"Post Comments"},{"rel":"replies","type":"text/html","href":"http:\/\/www.stuffaboutcode.com\/2016\/06\/mayhem-2-open-source-cave-shooter.html#comment-form","title":"4 Comments"},{"rel":"edit","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/9007601562606157016\/posts\/default\/7457420126039383438"},{"rel":"self","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/9007601562606157016\/posts\/default\/7457420126039383438"},{"rel":"alternate","type":"text/html","href":"http:\/\/www.stuffaboutcode.com\/2016\/06\/mayhem-2-open-source-cave-shooter.html","title":"Mayhem 2 - an open source cave shooter"}],"author":[{"name":{"$t":"Martin O'Hanlon"},"uri":{"$t":"https:\/\/plus.google.com\/117449463512606889592"},"email":{"$t":"noreply@blogger.com"},"gd$image":{"rel":"http://schemas.google.com/g/2005#thumbnail","width":"32","height":"32","src":"\/\/lh6.googleusercontent.com\/-mXyYt17u23k\/AAAAAAAAAAI\/AAAAAAAAME4\/UO0fIz3K4Xg\/s512-c\/photo.jpg"}}],"media$thumbnail":{"xmlns$media":"http://search.yahoo.com/mrss/","url":"https:\/\/3.bp.blogspot.com\/-tCZamlHJVZk\/V2O4jkOWvoI\/AAAAAAAARzA\/-CSahDZTSoAWEtuCAhBvsAAGmN1XEuT2gCLcB\/s72-c\/Mayhem2pg.jpg","height":"72","width":"72"},"thr$total":{"$t":"4"}},{"id":{"$t":"tag:blogger.com,1999:blog-9007601562606157016.post-9015538987632472401"},"published":{"$t":"2016-05-19T12:40:00.000+01:00"},"updated":{"$t":"2016-05-19T23:05:04.425+01:00"},"category":[{"scheme":"http://www.blogger.com/atom/ns#","term":"raspberry pi"}],"title":{"type":"text","$t":"Raspberry Pi - Playing a Sound File with Python"},"content":{"type":"html","$t":"A question I get asked a lot in Picademy is how to I play a sound file using Python.\u003Cbr \/\u003E\u003Cbr \/\u003EUsing just whats on the standard Raspbian image the easiest way, IMO, is to use Pygame.\u003Cbr \/\u003E\u003Cbr \/\u003EThis small code snippet below shows you how. Just put the wav file in the same place as your program.\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cpre class=\"prettyprint\"\u003Eimport pygame\u003Cbr \/\u003Efrom time import sleep\u003Cbr \/\u003E\u003Cbr \/\u003E#Initialise pygame and the mixer\u003Cbr \/\u003Epygame.init()\u003Cbr \/\u003Epygame.mixer.init()\u003Cbr \/\u003E\u003Cbr \/\u003E#load the sound file\u003Cbr \/\u003Emysound = pygame.mixer.Sound(\"mysound.wav\")\u003Cbr \/\u003E\u003Cbr \/\u003E#play the sound file for 10 seconds and then stop it\u003Cbr \/\u003Emysound.play()\u003Cbr \/\u003Etime.sleep(10)\u003Cbr \/\u003Emysound.stop()\u003C\/pre\u003E\u003Cbr \/\u003EYou will have to use wav files, as opposed to other sounds files such as mp3, ogg, etc - use\u0026nbsp;\u003Ca href=\"http:\/\/media.io\/\"\u003Emedia.io\u003C\/a\u003E\u0026nbsp;to convert them."},"link":[{"rel":"replies","type":"application/atom+xml","href":"http:\/\/www.stuffaboutcode.com\/feeds\/9015538987632472401\/comments\/default","title":"Post Comments"},{"rel":"replies","type":"text/html","href":"http:\/\/www.stuffaboutcode.com\/2016\/05\/raspberry-pi-playing-sound-file-with.html#comment-form","title":"5 Comments"},{"rel":"edit","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/9007601562606157016\/posts\/default\/9015538987632472401"},{"rel":"self","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/9007601562606157016\/posts\/default\/9015538987632472401"},{"rel":"alternate","type":"text/html","href":"http:\/\/www.stuffaboutcode.com\/2016\/05\/raspberry-pi-playing-sound-file-with.html","title":"Raspberry Pi - Playing a Sound File with Python"}],"author":[{"name":{"$t":"Martin O'Hanlon"},"uri":{"$t":"https:\/\/plus.google.com\/117449463512606889592"},"email":{"$t":"noreply@blogger.com"},"gd$image":{"rel":"http://schemas.google.com/g/2005#thumbnail","width":"32","height":"32","src":"\/\/lh6.googleusercontent.com\/-mXyYt17u23k\/AAAAAAAAAAI\/AAAAAAAAME4\/UO0fIz3K4Xg\/s512-c\/photo.jpg"}}],"thr$total":{"$t":"5"}},{"id":{"$t":"tag:blogger.com,1999:blog-9007601562606157016.post-7003510159468627685"},"published":{"$t":"2016-04-12T21:53:00.002+01:00"},"updated":{"$t":"2016-07-12T12:44:06.123+01:00"},"category":[{"scheme":"http://www.blogger.com/atom/ns#","term":"c"},{"scheme":"http://www.blogger.com/atom/ns#","term":"games"},{"scheme":"http://www.blogger.com/atom/ns#","term":"raspberry pi"}],"title":{"type":"text","$t":"Mayhem, Amiga game, ported to Raspberry Pi"},"content":{"type":"html","$t":"\u003Ci\u003EUpdate - I've taken Mayhem forward to create \u003Ca href=\"http:\/\/www.stuffaboutcode.com\/2016\/06\/mayhem-2-open-source-cave-shooter.html\"\u003EMayhem 2\u003C\/a\u003E.\u003C\/i\u003E\u003Cbr \/\u003E\u003Cbr \/\u003EI had a\u0026nbsp;\u003Ca href=\"https:\/\/en.wikipedia.org\/wiki\/Amiga\"\u003ECommodore Amiga\u003C\/a\u003E\u0026nbsp;and a game I played, a lot, was \u003Ca href=\"http:\/\/www.lemonamiga.com\/games\/details.php?id=2972\"\u003EMayhem\u003C\/a\u003E, its a multiplayer (2-4) shooter - imagine multiplayer asteroids, with gravity, fuel and shields!\u003Cbr \/\u003E\u003Cbr \/\u003EIt was ported to the PC in 2002 by\u0026nbsp;\u003Ca href=\"https:\/\/github.com\/devpack\"\u003Edevpack\u003C\/a\u003E\u0026nbsp;who released the code in 2011 on\u0026nbsp;\u003Ca href=\"https:\/\/github.com\/devpack\/mayhem\"\u003Egithub\u003C\/a\u003E\u0026nbsp;and\u0026nbsp;\u003Ca href=\"https:\/\/code.google.com\/archive\/p\/mayhem\/\"\u003Egoogle code\u003C\/a\u003E\u0026nbsp;which is where I picked it up and ported it to the Raspberry Pi.\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: center;\"\u003E\u003Ciframe allowfullscreen=\"\" class=\"YOUTUBE-iframe-video\" data-thumbnail-src=\"https:\/\/i.ytimg.com\/vi\/Vxozz0Ijdr0\/0.jpg\" frameborder=\"0\" height=\"266\" src=\"https:\/\/www.youtube.com\/embed\/Vxozz0Ijdr0?feature=player_embedded\" width=\"320\"\u003E\u003C\/iframe\u003E\u003C\/div\u003E\u003Cdiv style=\"text-align: center;\"\u003EThis is the port, but check out the \u003Ca href=\"https:\/\/www.youtube.com\/watch?v=fs30DLGxqhs\"\u003Eoriginal Amiga game\u003C\/a\u003E.\u003C\/div\u003E\u003Cbr \/\u003EI got some help from the \u003Ca href=\"https:\/\/www.raspberrypi.org\/forums\/viewtopic.php?f=33\u0026amp;t=142284\u0026amp;\"\u003ERaspberry Pi forums in getting it to compile\u003C\/a\u003E\u0026nbsp;then it was case of sorting out a few case sensitive filename bugs (it was original written for Windows!) and tracking down a bug in the original code which was causing a memory access error and segmentation fault.\u003Cbr \/\u003E\u003Cbr \/\u003EThe code is on \u003Ca href=\"http:\/\/github.com\/martinohanlon\/mayhem-pi\"\u003Egithub.com\/martinohanlon\/mayhem-pi\u003C\/a\u003E.\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cb\u003EInstall \u003C\/b\u003E\u003Cbr \/\u003E\u003Cpre class=\"prettyprint\"\u003Esudo apt-get install liballegro4.4 liballegro4-dev\u003Cbr \/\u003Egit clone https:\/\/github.com\/martinohanlon\/mayhem-pi\u003C\/pre\u003E\u003Cbr \/\u003E\u003Cb\u003ERun \u003C\/b\u003E\u003Cbr \/\u003E\u003Cpre class=\"prettyprint\"\u003Ecd mayhem-pi\u003Cbr \/\u003E.\/start\u003C\/pre\u003E\u003Cbr \/\u003E\u003Cb\u003EKeys\u003C\/b\u003E\u003Cbr \/\u003EPlayer 1 - z, x, c, v, g\u003Cbr \/\u003EPlayer 2 - left, right, pad del, pad 0, pad enter\u003Cbr \/\u003EPlayer 3 - b, n, 'comma', m, l\u003Cbr \/\u003EPlayer 4 - y, u, o, i, 0\u003Cbr \/\u003EChange level - 1, 2, 3\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cb\u003ECompile\u003C\/b\u003E\u003Cbr \/\u003EIf you want to modify the game, I've got a couple of things on my \u003Ca href=\"https:\/\/github.com\/martinohanlon\/mayhem-pi\/issues\"\u003Elist\u003C\/a\u003E, you can recompile it with.\u003Cbr \/\u003E\u003Cpre class=\"prettyprint\"\u003Ecd mayhem-pi\u003Cbr \/\u003Emake\u003Cbr \/\u003E\u003C\/pre\u003E\u003Cbr \/\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: center;\"\u003E\u003Ca href=\"https:\/\/2.bp.blogspot.com\/-8mzWgliks38\/Vw1XRa3bW1I\/AAAAAAAAQ6w\/QZi1kLiRPEw2ttU5io_X0DYodfTlScPEQCLcB\/s1600\/mayhem.JPG\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"\u003E\u003Cimg border=\"0\" height=\"243\" src=\"https:\/\/2.bp.blogspot.com\/-8mzWgliks38\/Vw1XRa3bW1I\/AAAAAAAAQ6w\/QZi1kLiRPEw2ttU5io_X0DYodfTlScPEQCLcB\/s320\/mayhem.JPG\" width=\"320\" \/\u003E\u003C\/a\u003E\u003C\/div\u003E\u003Cbr \/\u003E"},"link":[{"rel":"replies","type":"application/atom+xml","href":"http:\/\/www.stuffaboutcode.com\/feeds\/7003510159468627685\/comments\/default","title":"Post Comments"},{"rel":"replies","type":"text/html","href":"http:\/\/www.stuffaboutcode.com\/2016\/04\/mayhem-classic-amiga-game-ported-to.html#comment-form","title":"2 Comments"},{"rel":"edit","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/9007601562606157016\/posts\/default\/7003510159468627685"},{"rel":"self","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/9007601562606157016\/posts\/default\/7003510159468627685"},{"rel":"alternate","type":"text/html","href":"http:\/\/www.stuffaboutcode.com\/2016\/04\/mayhem-classic-amiga-game-ported-to.html","title":"Mayhem, Amiga game, ported to Raspberry Pi"}],"author":[{"name":{"$t":"Martin O'Hanlon"},"uri":{"$t":"https:\/\/plus.google.com\/117449463512606889592"},"email":{"$t":"noreply@blogger.com"},"gd$image":{"rel":"http://schemas.google.com/g/2005#thumbnail","width":"32","height":"32","src":"\/\/lh6.googleusercontent.com\/-mXyYt17u23k\/AAAAAAAAAAI\/AAAAAAAAME4\/UO0fIz3K4Xg\/s512-c\/photo.jpg"}}],"media$thumbnail":{"xmlns$media":"http://search.yahoo.com/mrss/","url":"https:\/\/img.youtube.com\/vi\/Vxozz0Ijdr0\/default.jpg","height":"72","width":"72"},"thr$total":{"$t":"2"}},{"id":{"$t":"tag:blogger.com,1999:blog-9007601562606157016.post-9153734231388865972"},"published":{"$t":"2016-03-27T14:58:00.000+01:00"},"updated":{"$t":"2016-04-04T12:04:44.845+01:00"},"category":[{"scheme":"http://www.blogger.com/atom/ns#","term":"minecraft"},{"scheme":"http://www.blogger.com/atom/ns#","term":"raspberry pi"}],"title":{"type":"text","$t":"Raspberry Pi - Take screenshots of Minecraft"},"content":{"type":"html","$t":"If you going to take a screenshot of Minecraft: Pi edition (or anything else for that matter), I really like a command line utility called \u003Ca href=\"https:\/\/github.com\/AndrewFromMelbourne\/raspi2png\"\u003Eraspi2png\u003C\/a\u003E,\u0026nbsp;its simple and screenshots images which have been created using the GPU (like games) as well.\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: center;\"\u003E\u003Ca href=\"https:\/\/3.bp.blogspot.com\/-w1kF0mppwME\/VvfmLxp9UTI\/AAAAAAAAQqQ\/Dim4wdRiGxoIKDVS7J8gQggK5R2dl7e-Q\/s1600\/myscreenshot.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"\u003E\u003Cimg border=\"0\" height=\"180\" src=\"https:\/\/3.bp.blogspot.com\/-w1kF0mppwME\/VvfmLxp9UTI\/AAAAAAAAQqQ\/Dim4wdRiGxoIKDVS7J8gQggK5R2dl7e-Q\/s320\/myscreenshot.png\" width=\"320\" \/\u003E\u003C\/a\u003E\u003C\/div\u003E\u003Cbr \/\u003E\u003Cb\u003EDownload\u003C\/b\u003E\u003Cbr \/\u003EOpen a terminal and clone the repository from github:\u003Cbr \/\u003E\u003Cpre class=\"prettyprint\"\u003Ecd ~\u003Cbr \/\u003Egit clone https:\/\/github.com\/AndrewFromMelbourne\/raspi2png\u003C\/pre\u003E\u003Cbr \/\u003E\u003Cb\u003EUse\u003C\/b\u003E\u003Cbr \/\u003EChange directory to raspi2png and run the program's help to show all the options: \u003Cbr \/\u003E\u003Cpre class=\"prettyprint\"\u003Ecd ~\/raspi2png\u003Cbr \/\u003E.\/raspi2png --help\u003Cbr \/\u003E\u003C\/pre\u003E\u003Cpre class=\"prettyprint\"\u003E\u003Cbr \/\u003EUsage: raspi2png [--pngname name] [--width \u003Cwidth\u003E] [--height \u003Cheight\u003E] [--compression \u003Clevel\u003E] \u003Cbr \/\u003E[--delay \u003Cdelay\u003E] [--display \u003Cnumber\u003E] [--stdout] [--help]\u003Cbr \/\u003E\u003Cbr \/\u003E    --pngname,-p - name of png file to create (default is snapshot.png)\u003Cbr \/\u003E    --height,-h - image height (default is screen height)\u003Cbr \/\u003E    --width,-w - image width (default is screen width)\u003Cbr \/\u003E    --compression,-c - PNG compression level (0 - 9)\u003Cbr \/\u003E    --delay,-d - delay in seconds (default 0)\u003Cbr \/\u003E    --display,-D - Raspberry Pi display number (default 0)\u003Cbr \/\u003E    --stdout,-s - write file to stdout\u003Cbr \/\u003E    --help,-H - print this usage information\u003C\/number\u003E\u003C\/delay\u003E\u003C\/level\u003E\u003C\/height\u003E\u003C\/width\u003E\u003C\/pre\u003E\u003Cbr \/\u003ETo take screenshot you have to use the -p option and pass an image filename: \u003Cbr \/\u003E\u003Cpre class=\"prettyprint\"\u003E.\/raspi2png -p myscreenshot.png\u003C\/pre\u003EAnother really useful option is -d to delay when to take the picture, this enables you to get the screen ready for a shot - to take a picture delayed by 10 seconds: \u003Cbr \/\u003E\u003Cpre class=\"prettyprint\"\u003E.\/raspi2png -p mydelayedshot.png -d 10\u003C\/pre\u003EThe image files will be created in the ~\/raspi2png directory - if you want them in a different directory use a full path: \u003Cbr \/\u003E\u003Cpre class=\"prettyprint\"\u003E.\/raspi2png -p \/home\/pi\/mydir\/myscreenshot.png\u003C\/pre\u003EIf you use a filename which already exists raspi2png will overwrite the file without warning and the old image will be lost.\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Ci\u003EFyi - I wrote this blog post using a Raspberry Pi 3... \u0026nbsp;First time I've used a Pi to write about a Pi - thats progress!\u003C\/i\u003E"},"link":[{"rel":"replies","type":"application/atom+xml","href":"http:\/\/www.stuffaboutcode.com\/feeds\/9153734231388865972\/comments\/default","title":"Post Comments"},{"rel":"replies","type":"text/html","href":"http:\/\/www.stuffaboutcode.com\/2016\/03\/raspberry-pi-take-screenshot-of.html#comment-form","title":"5 Comments"},{"rel":"edit","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/9007601562606157016\/posts\/default\/9153734231388865972"},{"rel":"self","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/9007601562606157016\/posts\/default\/9153734231388865972"},{"rel":"alternate","type":"text/html","href":"http:\/\/www.stuffaboutcode.com\/2016\/03\/raspberry-pi-take-screenshot-of.html","title":"Raspberry Pi - Take screenshots of Minecraft"}],"author":[{"name":{"$t":"Martin O'Hanlon"},"uri":{"$t":"https:\/\/plus.google.com\/117449463512606889592"},"email":{"$t":"noreply@blogger.com"},"gd$image":{"rel":"http://schemas.google.com/g/2005#thumbnail","width":"32","height":"32","src":"\/\/lh6.googleusercontent.com\/-mXyYt17u23k\/AAAAAAAAAAI\/AAAAAAAAME4\/UO0fIz3K4Xg\/s512-c\/photo.jpg"}}],"media$thumbnail":{"xmlns$media":"http://search.yahoo.com/mrss/","url":"https:\/\/3.bp.blogspot.com\/-w1kF0mppwME\/VvfmLxp9UTI\/AAAAAAAAQqQ\/Dim4wdRiGxoIKDVS7J8gQggK5R2dl7e-Q\/s72-c\/myscreenshot.png","height":"72","width":"72"},"thr$total":{"$t":"5"}},{"id":{"$t":"tag:blogger.com,1999:blog-9007601562606157016.post-8481785880871740046"},"published":{"$t":"2016-03-25T18:15:00.001+00:00"},"updated":{"$t":"2016-04-04T12:53:33.609+01:00"},"category":[{"scheme":"http://www.blogger.com/atom/ns#","term":"microbit"},{"scheme":"http://www.blogger.com/atom/ns#","term":"Python"}],"title":{"type":"text","$t":"Microbit - get data from USB"},"content":{"type":"html","$t":"As part of my \u003Ca href=\"http:\/\/www.stuffaboutcode.com\/2015\/12\/minecraft-microbit-and-x-wing.html\"\u003EMinecraft, a Microbit and an X-Wing\u003C\/a\u003E project, I used the USB to read data from the Microbit's accelerometer and buttons to make the X-Wing move.\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Ca href=\"https:\/\/www.blogger.com\/\"\u003E@NCSComputing\u003C\/a\u003E on twitter has started re-using the code to make other things happen, so thought it would be a good idea to write up how it works, so others can do the same.\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: center;\"\u003E\u003Ca href=\"https:\/\/3.bp.blogspot.com\/-H-LYgnZFcJA\/VvV9bsQnasI\/AAAAAAAAQok\/uNkPidgVxPoTx8dixOlb5nOMg2i7CSdvA\/s1600\/CeLdEExWoAAkUWQ.jpg\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"\u003E\u003Cimg border=\"0\" height=\"178\" src=\"https:\/\/3.bp.blogspot.com\/-H-LYgnZFcJA\/VvV9bsQnasI\/AAAAAAAAQok\/uNkPidgVxPoTx8dixOlb5nOMg2i7CSdvA\/s320\/CeLdEExWoAAkUWQ.jpg\" width=\"320\" \/\u003E\u003C\/a\u003E\u003C\/div\u003E\u003Cbr \/\u003ETo make this work you need one program which runs on the Microbit and prints data and a second runs on your computer (a Raspberry Pi, PC, Mac, anything with a USB port) which reads the data via a serial connection.\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: center;\"\u003E\u003Ca href=\"https:\/\/1.bp.blogspot.com\/-IWvgUUFD0Mk\/VvV87XDq-pI\/AAAAAAAAQoc\/ZgSSIJfJB4E_uwD6nR6g67OL6RD3kbbeA\/s1600\/IMG_20160325_175730786_HDR.jpg\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"\u003E\u003Cimg border=\"0\" height=\"179\" src=\"https:\/\/1.bp.blogspot.com\/-IWvgUUFD0Mk\/VvV87XDq-pI\/AAAAAAAAQoc\/ZgSSIJfJB4E_uwD6nR6g67OL6RD3kbbeA\/s320\/IMG_20160325_175730786_HDR.jpg\" width=\"320\" \/\u003E\u003C\/a\u003E\u003C\/div\u003E\u003Cbr \/\u003ESee \u003Ca href=\"https:\/\/github.com\/martinohanlon\/microbit-serial\"\u003Egithub.com\/martinohanlon\/microbit-serial\u003C\/a\u003E for the code for both of these programs.\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cb\u003EThe Microbit\u003C\/b\u003E\u003Cbr \/\u003EThe \u003Ca href=\"https:\/\/github.com\/martinohanlon\/microbit-serial\/blob\/master\/microbitreaddata.py\"\u003Emicrobitreaddata.py\u003C\/a\u003E python program runs on the Microbit, gets the data and prints it to the output, which in this case is the USB serial connection, and should be flashed to your computer using the \u003Ca href=\"https:\/\/www.microbit.co.uk\/create-code\"\u003EPython editor\u003C\/a\u003E:\u003Cbr \/\u003E\u003Cpre class=\"prettyprint\"\u003Efrom microbit import *\u003Cbr \/\u003E\u003Cbr \/\u003EREFRESH = 500\u003Cbr \/\u003E\u003Cbr \/\u003Edef get_data():\u003Cbr \/\u003E    x, y, z = accelerometer.get_x(), accelerometer.get_y(), accelerometer.get_z()\u003Cbr \/\u003E    a, b = button_a.was_pressed(), button_b.was_pressed()\u003Cbr \/\u003E    print(x, y, z, a, b)\u003Cbr \/\u003E\u003Cbr \/\u003Edef run():\u003Cbr \/\u003E while True:\u003Cbr \/\u003E  sleep(REFRESH)\u003Cbr \/\u003E  get_data()\u003Cbr \/\u003E\u003Cbr \/\u003Edisplay.show('M')\u003Cbr \/\u003Erun()\u003Cbr \/\u003E\u003C\/pre\u003E\u003Cbr \/\u003E\u003Cb\u003EYour Computer\u003C\/b\u003E\u003Cbr \/\u003EThe \u003Ca href=\"https:\/\/github.com\/martinohanlon\/microbit-serial\/blob\/master\/clientreaddata.py\"\u003Eclientreaddata.py\u003C\/a\u003E python program runs on the computer and reads the data using \u003Ca href=\"http:\/\/pyserial.readthedocs.org\/en\/latest\/pyserial.html#installation\"\u003Epyserial\u003C\/a\u003E:\u003Cbr \/\u003E\u003Cpre class=\"prettyprint\"\u003Eimport serial\u003Cbr \/\u003E\u003Cbr \/\u003E#the port will depend on your computer\u003Cbr \/\u003E#for a raspberry pi it will probably be \/dev\/ttyACM0\u003Cbr \/\u003E#PORT = \"\/dev\/ttyACM0\"\u003Cbr \/\u003E#for windows it will be COM(something)\u003Cbr \/\u003EPORT = \"COM3\"\u003Cbr \/\u003E\u003Cbr \/\u003EBAUD = 115200\u003Cbr \/\u003E\u003Cbr \/\u003Es = serial.Serial(PORT)\u003Cbr \/\u003Es.baudrate = BAUD\u003Cbr \/\u003Es.parity   = serial.PARITY_NONE\u003Cbr \/\u003Es.databits = serial.EIGHTBITS\u003Cbr \/\u003Es.stopbits = serial.STOPBITS_ONE\u003Cbr \/\u003E\u003Cbr \/\u003Etry:\u003Cbr \/\u003E    while True:\u003Cbr \/\u003E        #read a line from the microbit, decode it and\u003Cbr \/\u003E        # strip the whitespace at the end\u003Cbr \/\u003E        data = s.readline().rstrip()\u003Cbr \/\u003E\u003Cbr \/\u003E        #split the accelerometer data into x, y, z\u003Cbr \/\u003E        data_s = data.split(\" \")\u003Cbr \/\u003E        x, y, z = data_s[0], data_s[1], data_s[2]\u003Cbr \/\u003E        a, b = data_s[3], data_s[4]\u003Cbr \/\u003E        print(x,y,z)\u003Cbr \/\u003E        print(a,b)\u003Cbr \/\u003E\u003Cbr \/\u003Efinally:\u003Cbr \/\u003E    s.close()\u003Cbr \/\u003E\u003C\/pre\u003EThe values of the accelerometer will be put into the variables x, y, z and the buttons in a \u0026amp; b.\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cb\u003ESetting the PORT\u003C\/b\u003E\u003Cbr \/\u003EYou will have to change the \u003Ca href=\"https:\/\/github.com\/martinohanlon\/microbit-serial\/blob\/master\/clientreaddata.py#L5\"\u003EPORT variable in the clientreaddata.py program\u003C\/a\u003E to the comm port that the Microbit is connected to on your computer.\u003Cbr \/\u003E\u003Cbr \/\u003EFor a Raspberry Pi it is probably\u0026nbsp;\"\/dev\/ttyACM0\", in the event it isn't, unplug the Microbit and run:\u003Cbr \/\u003E\u003Cpre class=\"prettyprint\"\u003Els \/dev\/tty*\u003C\/pre\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: center;\"\u003E\u003Ca href=\"https:\/\/1.bp.blogspot.com\/-RqxGt4uYWoM\/VvV-rozcSRI\/AAAAAAAAQo8\/y9vqZ8M8w_cZiei24xs-4eHVWrIiq61Dg\/s1600\/microbitpiport.JPG\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"\u003E\u003Cimg border=\"0\" height=\"192\" src=\"https:\/\/1.bp.blogspot.com\/-RqxGt4uYWoM\/VvV-rozcSRI\/AAAAAAAAQo8\/y9vqZ8M8w_cZiei24xs-4eHVWrIiq61Dg\/s320\/microbitpiport.JPG\" width=\"320\" \/\u003E\u003C\/a\u003E\u003C\/div\u003E\u003Cbr \/\u003EThen plug the Microbit and run the command again, the new device which appears will be the port of your Microbit.\u003Cbr \/\u003E\u003Cbr \/\u003EFor Windows it will be \"COM#\", the # being a number, the easiest way is to look in \u003Ca href=\"http:\/\/lmgtfy.com\/?q=open+windows+device+manager\"\u003EDevice Manager\u003C\/a\u003E for the \"mBed Serial Port (COM#)\"\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: center;\"\u003E\u003Ca href=\"https:\/\/4.bp.blogspot.com\/-YNrYFYa1H2M\/VvV9ltDzVVI\/AAAAAAAAQos\/czCQXWynpe0mHmZTjkY4bJh1lS0jiA_Tg\/s1600\/microbit-windowscommport.JPG\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"\u003E\u003Cimg border=\"0\" height=\"265\" src=\"https:\/\/4.bp.blogspot.com\/-YNrYFYa1H2M\/VvV9ltDzVVI\/AAAAAAAAQos\/czCQXWynpe0mHmZTjkY4bJh1lS0jiA_Tg\/s320\/microbit-windowscommport.JPG\" width=\"320\" \/\u003E\u003C\/a\u003E\u003C\/div\u003E\u003Cbr \/\u003E"},"link":[{"rel":"replies","type":"application/atom+xml","href":"http:\/\/www.stuffaboutcode.com\/feeds\/8481785880871740046\/comments\/default","title":"Post Comments"},{"rel":"replies","type":"text/html","href":"http:\/\/www.stuffaboutcode.com\/2016\/03\/microbit-get-data-from-usb.html#comment-form","title":"4 Comments"},{"rel":"edit","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/9007601562606157016\/posts\/default\/8481785880871740046"},{"rel":"self","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/9007601562606157016\/posts\/default\/8481785880871740046"},{"rel":"alternate","type":"text/html","href":"http:\/\/www.stuffaboutcode.com\/2016\/03\/microbit-get-data-from-usb.html","title":"Microbit - get data from USB"}],"author":[{"name":{"$t":"Martin O'Hanlon"},"uri":{"$t":"https:\/\/plus.google.com\/117449463512606889592"},"email":{"$t":"noreply@blogger.com"},"gd$image":{"rel":"http://schemas.google.com/g/2005#thumbnail","width":"32","height":"32","src":"\/\/lh6.googleusercontent.com\/-mXyYt17u23k\/AAAAAAAAAAI\/AAAAAAAAME4\/UO0fIz3K4Xg\/s512-c\/photo.jpg"}}],"media$thumbnail":{"xmlns$media":"http://search.yahoo.com/mrss/","url":"https:\/\/3.bp.blogspot.com\/-H-LYgnZFcJA\/VvV9bsQnasI\/AAAAAAAAQok\/uNkPidgVxPoTx8dixOlb5nOMg2i7CSdvA\/s72-c\/CeLdEExWoAAkUWQ.jpg","height":"72","width":"72"},"thr$total":{"$t":"4"}},{"id":{"$t":"tag:blogger.com,1999:blog-9007601562606157016.post-885971677212587197"},"published":{"$t":"2016-03-25T08:03:00.000+00:00"},"updated":{"$t":"2016-03-29T10:25:01.692+01:00"},"category":[{"scheme":"http://www.blogger.com/atom/ns#","term":"gpio"},{"scheme":"http://www.blogger.com/atom/ns#","term":"Python"},{"scheme":"http://www.blogger.com/atom/ns#","term":"raspberry pi"}],"title":{"type":"text","$t":"Raspberry Pi gpiozero holdable button"},"content":{"type":"html","$t":"The current release of \u003Ca href=\"https:\/\/gpiozero.readthedocs.org\/\"\u003Egpiozero\u003C\/a\u003E\u0026nbsp;doesn't have the support to hold a button down e.g. when a button is pressed and then held down for 1 second something happens.\u003Cbr \/\u003E\u003Cbr \/\u003EThis is really useful when building hardware projects and you want 1 button to do 2 things, say turn something on when pressed, and turn off when held down.\u003Cbr \/\u003E\u003Cbr \/\u003EI needed this for a project so I thought I would create a new HoldableButton class using gpiozero. Hopefully this will be \u003Ca href=\"https:\/\/github.com\/RPi-Distro\/python-gpiozero\/issues\/115\"\u003Eincorporated into gpiozero\u003C\/a\u003E, but until then you can use the class below.\u003Cbr \/\u003E\u003Cbr \/\u003EThe code is also available \u003Ca href=\"https:\/\/gist.github.com\/martinohanlon\/20cee570d6ea4ca0b7ad\"\u003Ehere\u003C\/a\u003E as a gist.\u003Cbr \/\u003E\u003Cbr \/\u003EYou will need to add the HoldableButton class to your Python program:\u003Cbr \/\u003E\u003Cpre class=\"prettyprint\"\u003Efrom gpiozero import Button\u003Cbr \/\u003Efrom threading import Timer\u003Cbr \/\u003E\u003Cbr \/\u003Eclass HoldableButton(Button):\u003Cbr \/\u003E    def __init__(self, pin=None, pull_up=True, bounce_time=None, \u003Cbr \/\u003E                 hold_time=1, repeat=False): \u003Cbr \/\u003E\u003Cbr \/\u003E        super(HoldableButton, self).__init__(pin, pull_up, bounce_time)\u003Cbr \/\u003E\u003Cbr \/\u003E        # Set Button when_pressed and when_released to call local functions\u003Cbr \/\u003E        # cant use super() as it doesn't support setters\u003Cbr \/\u003E        Button.when_pressed.fset(self, self._when_button_pressed)\u003Cbr \/\u003E        Button.when_released.fset(self, self._when_button_released)\u003Cbr \/\u003E\u003Cbr \/\u003E        self._when_held = None\u003Cbr \/\u003E        self._when_pressed = None\u003Cbr \/\u003E        self._when_released = None\u003Cbr \/\u003E        self._is_held = False\u003Cbr \/\u003E\u003Cbr \/\u003E        self.hold_time = hold_time\u003Cbr \/\u003E        self.repeat = repeat\u003Cbr \/\u003E        self._held_timer = None\u003Cbr \/\u003E\u003Cbr \/\u003E    #override button when_pressed and when_released\u003Cbr \/\u003E    @property\u003Cbr \/\u003E    def when_pressed(self):\u003Cbr \/\u003E        return self._when_pressed\u003Cbr \/\u003E\u003Cbr \/\u003E    @when_pressed.setter\u003Cbr \/\u003E    def when_pressed(self, value):\u003Cbr \/\u003E        self._when_pressed = value\u003Cbr \/\u003E\u003Cbr \/\u003E    @property\u003Cbr \/\u003E    def when_released(self):\u003Cbr \/\u003E        return self._when_released\u003Cbr \/\u003E\u003Cbr \/\u003E    @when_released.setter\u003Cbr \/\u003E    def when_released(self, value):\u003Cbr \/\u003E        self._when_released = value\u003Cbr \/\u003E\u003Cbr \/\u003E    @property\u003Cbr \/\u003E    def when_held(self):\u003Cbr \/\u003E        return self._when_held\u003Cbr \/\u003E\u003Cbr \/\u003E    @when_held.setter\u003Cbr \/\u003E    def when_held(self, value):\u003Cbr \/\u003E        self._when_held = value\u003Cbr \/\u003E\u003Cbr \/\u003E    @property\u003Cbr \/\u003E    def is_held(self):\u003Cbr \/\u003E        return self._is_held\u003Cbr \/\u003E\u003Cbr \/\u003E    def _when_button_pressed(self):\u003Cbr \/\u003E        self._start_hold()\u003Cbr \/\u003E        if self._when_pressed != None:\u003Cbr \/\u003E            self._when_pressed()\u003Cbr \/\u003E\u003Cbr \/\u003E    def _when_button_released(self):\u003Cbr \/\u003E        self._is_held = False\u003Cbr \/\u003E        self._stop_hold()\u003Cbr \/\u003E        if self._when_released != None:\u003Cbr \/\u003E            self.when_released()\u003Cbr \/\u003E\u003Cbr \/\u003E    def _start_hold(self):\u003Cbr \/\u003E        self._held_timer = Timer(self.hold_time, self._button_held)\u003Cbr \/\u003E        self._held_timer.start()\u003Cbr \/\u003E\u003Cbr \/\u003E    def _stop_hold(self):\u003Cbr \/\u003E        if self._held_timer != None:\u003Cbr \/\u003E            self._held_timer.cancel()\u003Cbr \/\u003E\u003Cbr \/\u003E    def _button_held(self):\u003Cbr \/\u003E        self._is_held = True\u003Cbr \/\u003E        if self._when_held != None:\u003Cbr \/\u003E            if self.repeat and self.is_pressed:\u003Cbr \/\u003E                self._start_hold()\u003Cbr \/\u003E            self._when_held()\u003C\/pre\u003EUsing the HoldableButton class is pretty simple, similar to the gpiozero \u003Ca href=\"https:\/\/gpiozero.readthedocs.org\/en\/v1.1.0\/api_input.html#button\"\u003EButton\u003C\/a\u003E class and can be swapped for the Button class with no other changes.\u003Cbr \/\u003E\u003Cpre class=\"prettyprint\"\u003Eholdbutton = HoldableButton(pin, hold_time = 1, repeat = False)\u003C\/pre\u003EYou have to pass a \u003Cb\u003Epin\u003C\/b\u003E number and optional hold_time and repeat values:\u003Cbr \/\u003E\u003Cul\u003E\u003Cli\u003Ehold_time - is the number of seconds after the button is pressed before the button is consider 'held'\u003C\/li\u003E\u003Cli\u003Erepeat - is a boolean and if set to True will occur 'button held' events to be repeated after each hold_time\u003C\/li\u003E\u003C\/ul\u003EYou can use all the same methods and properties of the \u003Ca href=\"https:\/\/gpiozero.readthedocs.org\/en\/v1.1.0\/api_input.html#button\"\u003EButton\u003C\/a\u003E class, when_pressed, when_released, is_pressed, etc.\u003Cbr \/\u003E\u003Cbr \/\u003EThere are 2 additional properties \u003Cb\u003Eis_held\u003C\/b\u003E, which will return a boolean stating whether the button has been held down for the 'hold_time' and\u0026nbsp;\u003Cb\u003Ewhen_held\u003C\/b\u003E\u0026nbsp;which when assigned a function will cause the function to be called when the button is held down.\u003Cbr \/\u003E\u003Cpre class=\"prettyprint\"\u003Edef myheldfunction():\u003Cbr \/\u003E    print(\"button held\")\u003Cbr \/\u003E\u003Cbr \/\u003Eholdbutton.when_held = myheldfunction\u003C\/pre\u003ENow when a button is held down, the function will be called and \"button held\" printed."},"link":[{"rel":"replies","type":"application/atom+xml","href":"http:\/\/www.stuffaboutcode.com\/feeds\/885971677212587197\/comments\/default","title":"Post Comments"},{"rel":"replies","type":"text/html","href":"http:\/\/www.stuffaboutcode.com\/2016\/03\/raspberry-pi-gpiozero-holdable-button.html#comment-form","title":"0 Comments"},{"rel":"edit","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/9007601562606157016\/posts\/default\/885971677212587197"},{"rel":"self","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/9007601562606157016\/posts\/default\/885971677212587197"},{"rel":"alternate","type":"text/html","href":"http:\/\/www.stuffaboutcode.com\/2016\/03\/raspberry-pi-gpiozero-holdable-button.html","title":"Raspberry Pi gpiozero holdable button"}],"author":[{"name":{"$t":"Martin O'Hanlon"},"uri":{"$t":"https:\/\/plus.google.com\/117449463512606889592"},"email":{"$t":"noreply@blogger.com"},"gd$image":{"rel":"http://schemas.google.com/g/2005#thumbnail","width":"32","height":"32","src":"\/\/lh6.googleusercontent.com\/-mXyYt17u23k\/AAAAAAAAAAI\/AAAAAAAAME4\/UO0fIz3K4Xg\/s512-c\/photo.jpg"}}],"thr$total":{"$t":"0"}},{"id":{"$t":"tag:blogger.com,1999:blog-9007601562606157016.post-3038311526989947612"},"published":{"$t":"2016-02-02T21:08:00.000+00:00"},"updated":{"$t":"2016-08-14T22:04:14.686+01:00"},"category":[{"scheme":"http://www.blogger.com/atom/ns#","term":"microbit"},{"scheme":"http://www.blogger.com/atom/ns#","term":"Python"}],"title":{"type":"text","$t":"Microbit - a Bop-it game in Python"},"content":{"type":"html","$t":"I wanted to create a simple game for the Microbit and after bring brought an \u003Ca href=\"http:\/\/amzn.to\/1PPYkzw\"\u003ER2D2 Bop-it game\u003C\/a\u003E\u0026nbsp;I thought I would make one whereby you have to press the A and B buttons in time.\u003Cbr \/\u003E\u003Cdiv\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv\u003ELets start by importing the microbit and random libraries:\u003C\/div\u003E\u003Cpre class=\"prettyprint\"\u003Efrom microbit import *\u003Cbr \/\u003Eimport random\u003C\/pre\u003E\u003Cdiv\u003ECreate some constants, one for the SPEED which is the amount of time in between each bop for each level, and one for the LEVELUP's which is the amount of points at each level:\u003C\/div\u003E\u003Cpre class=\"prettyprint\"\u003ESPEED = {0: 1000, 1: 750, 2: 650, 3: 600, 4: 550, 5: 500}\u003Cbr \/\u003ELEVELUP = (5, 10, 15, 20, 25, 30)\u003C\/pre\u003E\u003Cdiv\u003ECreate 4 functions which when caused will show A, B, a tick and a cross:\u003C\/div\u003E\u003Cpre class=\"prettyprint\"\u003Edef show_a():\u003Cbr \/\u003E    display.clear()\u003Cbr \/\u003E    display.show(\"A\")\u003Cbr \/\u003E\u003Cbr \/\u003Edef show_b():\u003Cbr \/\u003E    display.clear()\u003Cbr \/\u003E    display.show(\"B\")\u003Cbr \/\u003E\u003Cbr \/\u003Edef show_tick():\u003Cbr \/\u003E    display.clear()\u003Cbr \/\u003E    display.set_pixel(0, 3, 9)\u003Cbr \/\u003E    display.set_pixel(1, 4, 9)\u003Cbr \/\u003E    display.set_pixel(2, 3, 9)\u003Cbr \/\u003E    display.set_pixel(3, 2, 9)\u003Cbr \/\u003E    display.set_pixel(4, 1, 9)\u003Cbr \/\u003E    \u003Cbr \/\u003Edef show_cross():\u003Cbr \/\u003E    display.clear()\u003Cbr \/\u003E    display.show(\"X\")\u003C\/pre\u003E\u003Cdiv\u003ECreate a function which will wait for the button to be pressed, returning True if it is and False if it isn't:\u003C\/div\u003E\u003Cpre class=\"prettyprint\"\u003Edef wait_for_button(rightbutton, wrongbutton):\u003Cbr \/\u003E    rightpressed = False\u003Cbr \/\u003E    wrongpressed = False\u003Cbr \/\u003E    \u003Cbr \/\u003E    started = running_time()\u003Cbr \/\u003E    now = running_time()\u003Cbr \/\u003E    \u003Cbr \/\u003E    while now - started \u0026lt; SPEED[level]:\u003Cbr \/\u003E        if rightbutton.is_pressed():\u003Cbr \/\u003E            rightpressed = True\u003Cbr \/\u003E        if wrongbutton.is_pressed():\u003Cbr \/\u003E            wrongpressed = True\u003Cbr \/\u003E        now = running_time()\u003Cbr \/\u003E        \u003Cbr \/\u003E    if rightpressed == True and wrongpressed == False:\u003Cbr \/\u003E        return True\u003Cbr \/\u003E    else:\u003Cbr \/\u003E        return False\u003C\/pre\u003E\u003Cdiv\u003ESet 3 variables for the level, the score and one which will be set to True when the game is over:\u003C\/div\u003E\u003Cpre class=\"prettyprint\"\u003Elevel = 0\u003Cbr \/\u003Escore = 0\u003Cbr \/\u003Egameover = False\u003C\/pre\u003E\u003Cdiv\u003EScroll \"BopBit\" on the screen to show its the start of the game:\u003C\/div\u003E\u003Cpre class=\"prettyprint\"\u003Edisplay.scroll(\"BopBit\")\u003C\/pre\u003E\u003Cdiv\u003ELoop until the game is over:\u003C\/div\u003E\u003Cpre class=\"prettyprint\"\u003Ewhile gameover == False:\u003C\/pre\u003E\u003Cdiv\u003ERandomly pick an action (either A or B), show it on the screen and wait for a button to be pressed:\u003C\/div\u003E\u003Cpre class=\"prettyprint\"\u003E    success = False\u003Cbr \/\u003E    \u003Cbr \/\u003E    #randomly pick an A or B button\u003Cbr \/\u003E    action = random.randint(0, 1)\u003Cbr \/\u003E    \u003Cbr \/\u003E    #wait for the button to be pressed\u003Cbr \/\u003E    if action == 0:\u003Cbr \/\u003E        show_a()\u003Cbr \/\u003E        success = wait_for_button(button_a, button_b)\u003Cbr \/\u003E    elif action == 1:\u003Cbr \/\u003E        show_b()\u003Cbr \/\u003E        success = wait_for_button(button_b, button_a)\u003Cbr \/\u003E\u003C\/pre\u003E\u003Cdiv\u003EIf the player pressed the right button in time show a tick and increase the score or show a cross:\u003C\/div\u003E\u003Cpre class=\"prettyprint\"\u003E    if success:\u003Cbr \/\u003E        show_tick()\u003Cbr \/\u003E        score = score + 1\u003Cbr \/\u003E        #if the score is a levelup score increase the level \u003Cbr \/\u003E        if score in LEVELUP:\u003Cbr \/\u003E            level = level + 1\u003Cbr \/\u003E    else:\u003Cbr \/\u003E        show_cross()\u003Cbr \/\u003E        gameover = True\u003C\/pre\u003E\u003Cdiv\u003EWait for a small amount of time (half the current speed):\u003C\/div\u003E\u003Cpre class=\"prettyprint\"\u003E    sleep(int(SPEED[level] \/ 2))\u003C\/pre\u003E\u003Cdiv\u003EAfter the game is over, sleep for 1 second, and display the players score on a loop:\u003C\/div\u003E\u003Cpre class=\"prettyprint\"\u003Esleep(1000)\u003Cbr \/\u003Ewhile True:\u003Cbr \/\u003E    display.scroll(\"{} points\".format(score))\u003C\/pre\u003E\u003Cdiv\u003EYou can view the \u003Ca href=\"https:\/\/github.com\/martinohanlon\/microbit-micropython\/blob\/master\/examples\/bopbit.py\"\u003Ecomplete code\u003C\/a\u003E in my \u003Ca href=\"https:\/\/github.com\/martinohanlon\/microbit-micropython\"\u003EMicrobit MicroPython examples repository\u003C\/a\u003E on github.\u003C\/div\u003E\u003Cdiv\u003E\u003Cbr \/\u003EHow about taking it further by adding new actions such as shaking or a connecting up a speaker and adding a sound track,\u003Cbr \/\u003E\u003Cbr \/\u003E\u003C\/div\u003E"},"link":[{"rel":"replies","type":"application/atom+xml","href":"http:\/\/www.stuffaboutcode.com\/feeds\/3038311526989947612\/comments\/default","title":"Post Comments"},{"rel":"replies","type":"text/html","href":"http:\/\/www.stuffaboutcode.com\/2016\/02\/microbit-bop-it-game-in-python.html#comment-form","title":"3 Comments"},{"rel":"edit","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/9007601562606157016\/posts\/default\/3038311526989947612"},{"rel":"self","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/9007601562606157016\/posts\/default\/3038311526989947612"},{"rel":"alternate","type":"text/html","href":"http:\/\/www.stuffaboutcode.com\/2016\/02\/microbit-bop-it-game-in-python.html","title":"Microbit - a Bop-it game in Python"}],"author":[{"name":{"$t":"Martin O'Hanlon"},"uri":{"$t":"https:\/\/plus.google.com\/117449463512606889592"},"email":{"$t":"noreply@blogger.com"},"gd$image":{"rel":"http://schemas.google.com/g/2005#thumbnail","width":"32","height":"32","src":"\/\/lh6.googleusercontent.com\/-mXyYt17u23k\/AAAAAAAAAAI\/AAAAAAAAME4\/UO0fIz3K4Xg\/s512-c\/photo.jpg"}}],"thr$total":{"$t":"3"}},{"id":{"$t":"tag:blogger.com,1999:blog-9007601562606157016.post-961458907318401267"},"published":{"$t":"2016-01-18T00:19:00.000+00:00"},"updated":{"$t":"2016-12-05T13:32:32.796+00:00"},"category":[{"scheme":"http://www.blogger.com/atom/ns#","term":"c"},{"scheme":"http://www.blogger.com/atom/ns#","term":"raspberry pi"}],"title":{"type":"text","$t":"Pocket PiGRRL - Battery Monitor"},"content":{"type":"html","$t":"I recently made myself an \u003Ca href=\"https:\/\/learn.adafruit.com\/pocket-pigrrl\/overview\"\u003EAdafruit Pocket PiGRRL\u003C\/a\u003E\u0026nbsp;and I wanted to modify it so it would warn me when the battery was running low - there is a\u0026nbsp;small red LED but its hidden inside the case!\u003Cbr \/\u003E\u003Cdiv\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: center;\"\u003E\u003Ca href=\"http:\/\/4.bp.blogspot.com\/-zxmeapplwwg\/VpKHvJXWiWI\/AAAAAAAAP2o\/kBv1esu-FUE\/s1600\/IMG_20160106_213746797.jpg\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"\u003E\u003Cimg border=\"0\" height=\"320\" src=\"https:\/\/4.bp.blogspot.com\/-zxmeapplwwg\/VpKHvJXWiWI\/AAAAAAAAP2o\/kBv1esu-FUE\/s320\/IMG_20160106_213746797.jpg\" width=\"227\" \/\u003E\u003C\/a\u003E\u003C\/div\u003E\u003Cdiv\u003E\u003Cdiv\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv\u003EThe plan was to create a program which would sense the battery getting low and put a warning icon on the top left of screen giving me time to shutdown the Pi properly or plug it in.\u003C\/div\u003E\u003Cdiv\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: center;\"\u003E\u003Ca href=\"http:\/\/3.bp.blogspot.com\/-UEa808dRUck\/VpwZiPbDxTI\/AAAAAAAAP6Y\/u0A27x9-R7o\/s1600\/IMGP4581.JPG\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"\u003E\u003Cimg border=\"0\" height=\"236\" src=\"https:\/\/3.bp.blogspot.com\/-UEa808dRUck\/VpwZiPbDxTI\/AAAAAAAAP6Y\/u0A27x9-R7o\/s320\/IMGP4581.JPG\" width=\"320\" \/\u003E\u003C\/a\u003E\u003C\/div\u003E\u003Cdiv\u003E\u003Cbr \/\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: center;\"\u003E\u003Ca href=\"http:\/\/4.bp.blogspot.com\/-BkGyZwmfoHc\/VpwrXvIHn6I\/AAAAAAAAP74\/oX4mioAtMQI\/s1600\/lowbatticon.jpg\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"\u003E\u003Cimg border=\"0\" src=\"https:\/\/4.bp.blogspot.com\/-BkGyZwmfoHc\/VpwrXvIHn6I\/AAAAAAAAP74\/oX4mioAtMQI\/s1600\/lowbatticon.jpg\" \/\u003E\u003C\/a\u003E\u003C\/div\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv\u003ETLDR - just scroll down to install Grrl Battery Monitor.\u003C\/div\u003E\u003Cdiv\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv\u003EI started with the software as I, foolishly, thought this would be the hardest part, the problem with creating an icon is that is has to go over the top of everything regardless of what is on the screen (command prompt, emulators, emulation station, everything) or what hardware was rendering it.\u003C\/div\u003E\u003Cdiv\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv\u003EMy first plan was that I could use \u003Ca href=\"http:\/\/picamera.readthedocs.org\/en\/release-1.10\/\"\u003EPicamera\u003C\/a\u003E's overlay function which I knew used the GPU to output directly to the screen, and with a bit of help from \u003Ca href=\"https:\/\/twitter.com\/waveform80\"\u003EDave Jones\u003C\/a\u003E\u0026nbsp;who put together a \u003Ca href=\"https:\/\/gist.github.com\/waveform80\/b13f7d78e6671c133984\"\u003Eprototype\u003C\/a\u003E, it was looking good, but while the icon appeared on top of emulators and the command prompt, it didnt write over emulation station.\u003C\/div\u003E\u003Cdiv\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv\u003EI came across \u003Ca href=\"http:\/\/raspberrycompote.blogspot.co.uk\/2012\/12\/low-level-graphics-on-raspberry-pi-part_9509.html\"\u003ELow Level Graphics on Raspberry Pi\u003C\/a\u003E\u0026nbsp;which walks you through writing graphics directly to the \u003Ca href=\"https:\/\/en.wikipedia.org\/wiki\/Linux_framebuffer\"\u003ELinux framebuffer\u003C\/a\u003E\u0026nbsp;using C, this was a lot lower level than I hoped to get into but it would definitely write my icon over anything that was on the screen - using this I wrote a \u003Ca href=\"https:\/\/github.com\/martinohanlon\/grrl-bat-monitor\/blob\/master\/grrl_bat_mon.c\"\u003Eprogram\u003C\/a\u003E to create an icon on the screen when a GPIO pin was triggered.\u003C\/div\u003E\u003Cdiv\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv\u003ENext I needed to be able to read from the \u003Ca href=\"https:\/\/learn.adafruit.com\/adafruit-powerboost-1000c-load-share-usb-charge-boost\/overview\"\u003Epower booster\u003C\/a\u003E when the battery was running low, my original plan was to use the LBO (low battery output) pin, but this proved to be way more difficult than I expected, read this\u0026nbsp;\u003Ca href=\"http:\/\/forums.adafruit.com\/viewtopic.php?f=19\u0026amp;t=87713\"\u003Epost on Adafruit's forum\u003C\/a\u003E if your really interested.\u003C\/div\u003E\u003Cdiv\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv\u003EI ended up connecting a wire to the low battery warning led (red) on the power booster and using this to switch a transistor which connected a GPIO to ground.\u003C\/div\u003E\u003Cdiv\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: center;\"\u003E\u003Ca href=\"http:\/\/3.bp.blogspot.com\/-d-QIEnZth0o\/VpwhhIrOAYI\/AAAAAAAAP6o\/GI0uM5f3eVk\/s1600\/IMGP4584.JPG\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"\u003E\u003Cimg border=\"0\" height=\"313\" src=\"https:\/\/3.bp.blogspot.com\/-d-QIEnZth0o\/VpwhhIrOAYI\/AAAAAAAAP6o\/GI0uM5f3eVk\/s320\/IMGP4584.JPG\" width=\"320\" \/\u003E\u003C\/a\u003E\u003C\/div\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: center;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv\u003EIts been frustrating but I am really pleased with how it worked out - if you want to add the batter monitor to your own Pocket PiGRRL follow the instructions below.\u003C\/div\u003E\u003Cdiv\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv\u003E\u003Cb\u003EInstall Grrl Battery Monitor\u003C\/b\u003E\u003C\/div\u003E\u003Cdiv\u003E\u003Cb\u003E\u003Cbr \/\u003E\u003C\/b\u003E\u003C\/div\u003E\u003Cdiv\u003EYou will need a few parts:\u003C\/div\u003E\u003Cdiv\u003E\u003Cul\u003E\u003Cli\u003ESome wire\u003C\/li\u003E\u003Cli\u003E2N3904 NPN transistor\u003C\/li\u003E\u003Cli\u003E47k resistor\u003C\/li\u003E\u003Cli\u003EStrip board\u003C\/li\u003E\u003C\/ul\u003E\u003Cdiv\u003E\u003Ci\u003ENote - if you are doing this on a PiGRRL 2 with a Pi 3, be sure to check out Christian's comments about the \u003Ca href=\"http:\/\/www.stuffaboutcode.com\/2016\/01\/pocket-pigrrl-battery-monitor.html?showComment=1473048626905#c1441985850678463142\"\u003Epin to use\u003C\/a\u003E and \u003Ca href=\"http:\/\/www.stuffaboutcode.com\/2016\/01\/pocket-pigrrl-battery-monitor.html?showComment=1472960188243#c2350592785972375454\"\u003Ewiring-pi install\u003C\/a\u003E before starting.\u003C\/i\u003E\u003C\/div\u003E\u003C\/div\u003E\u003Cdiv\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv\u003E1. Open up your Pi GRRL and connect a small length of wire to the red (low power) led on the power booster.\u003C\/div\u003E\u003Cdiv\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: center;\"\u003E\u003Ca href=\"http:\/\/2.bp.blogspot.com\/-M47krZP3lF0\/VpwiVu7rfkI\/AAAAAAAAP6w\/6_GdKkjh8O8\/s1600\/redledsolderpoint.jpg\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"\u003E\u003Cimg border=\"0\" height=\"290\" src=\"https:\/\/2.bp.blogspot.com\/-M47krZP3lF0\/VpwiVu7rfkI\/AAAAAAAAP6w\/6_GdKkjh8O8\/s320\/redledsolderpoint.jpg\" width=\"320\" \/\u003E\u003C\/a\u003E\u003C\/div\u003E\u003Cdiv\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: center;\"\u003E\u003Ca href=\"http:\/\/1.bp.blogspot.com\/-dfHx2XJzdcU\/Vpwj8vF2WvI\/AAAAAAAAP64\/a_QSP4-jbzw\/s1600\/redledwire.jpg\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"\u003E\u003Cimg border=\"0\" height=\"258\" src=\"https:\/\/1.bp.blogspot.com\/-dfHx2XJzdcU\/Vpwj8vF2WvI\/AAAAAAAAP64\/a_QSP4-jbzw\/s320\/redledwire.jpg\" width=\"320\" \/\u003E\u003C\/a\u003E\u003C\/div\u003E\u003Cdiv\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv\u003E2. Solder the components to the strip board. including 2 lengths of wire which will connect to GPIO 19 and GND.\u003C\/div\u003E\u003Cdiv\u003E\u003Cbr \/\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: center;\"\u003E\u003Ca href=\"http:\/\/1.bp.blogspot.com\/-yaIJxnwoXgQ\/VpwlEeEaePI\/AAAAAAAAP7M\/TeF2ZHSIFdo\/s1600\/stripboard2.jpg\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"\u003E\u003Cimg border=\"0\" height=\"293\" src=\"https:\/\/1.bp.blogspot.com\/-yaIJxnwoXgQ\/VpwlEeEaePI\/AAAAAAAAP7M\/TeF2ZHSIFdo\/s320\/stripboard2.jpg\" width=\"320\" \/\u003E\u003C\/a\u003E\u003C\/div\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: center;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: center;\"\u003E\u003Ca href=\"http:\/\/2.bp.blogspot.com\/-fPs_qnGAOpk\/VpwlFq3SdLI\/AAAAAAAAP7U\/k1Ad__aSfqs\/s1600\/stripboard.JPG\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"\u003E\u003Cimg border=\"0\" height=\"274\" src=\"https:\/\/2.bp.blogspot.com\/-fPs_qnGAOpk\/VpwlFq3SdLI\/AAAAAAAAP7U\/k1Ad__aSfqs\/s320\/stripboard.JPG\" width=\"320\" \/\u003E\u003C\/a\u003E\u003C\/div\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: center;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003C\/div\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: center;\"\u003E\u003Ca href=\"http:\/\/1.bp.blogspot.com\/-rIUu9hRJqIg\/VpwlEUoBIBI\/AAAAAAAAP7A\/43hnYoXLS9g\/s1600\/stripboard3.JPG\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"\u003E\u003Cimg border=\"0\" height=\"143\" src=\"https:\/\/1.bp.blogspot.com\/-rIUu9hRJqIg\/VpwlEUoBIBI\/AAAAAAAAP7A\/43hnYoXLS9g\/s320\/stripboard3.JPG\" width=\"320\" \/\u003E\u003C\/a\u003E\u003C\/div\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: left;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv\u003E3. Flip over your Pi and solder the GPIO and GND wires to the underside of the Pi's GPIO header.\u003C\/div\u003E\u003Cdiv\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: center;\"\u003E\u003Ca href=\"http:\/\/2.bp.blogspot.com\/-qulqX1_dJoA\/Vpwm5tOYIyI\/AAAAAAAAP7c\/K_ja4QJGZiI\/s1600\/soldertopi.JPG\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"\u003E\u003Cimg border=\"0\" height=\"299\" src=\"https:\/\/2.bp.blogspot.com\/-qulqX1_dJoA\/Vpwm5tOYIyI\/AAAAAAAAP7c\/K_ja4QJGZiI\/s320\/soldertopi.JPG\" width=\"320\" \/\u003E\u003C\/a\u003E\u003C\/div\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: center;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: center;\"\u003E\u003Ca href=\"http:\/\/2.bp.blogspot.com\/-Q7e8akZzEME\/VpwnXD5Kf8I\/AAAAAAAAP7k\/iGVhavqxge0\/s1600\/soldertopi2.JPG\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"\u003E\u003Cimg border=\"0\" height=\"288\" src=\"https:\/\/2.bp.blogspot.com\/-Q7e8akZzEME\/VpwnXD5Kf8I\/AAAAAAAAP7k\/iGVhavqxge0\/s320\/soldertopi2.JPG\" width=\"320\" \/\u003E\u003C\/a\u003E\u003C\/div\u003E\u003Cdiv style=\"text-align: center;\"\u003E\u003Ci\u003EThe yellow wire is for my \u003Ca href=\"http:\/\/www.stuffaboutcode.com\/2016\/01\/pocket-pigrrl-adding-mute.html\"\u003Emute \/ un-mute amp function\u003C\/a\u003E.\u003C\/i\u003E\u003C\/div\u003E\u003Cdiv\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv\u003E4, Solder the wire from the low power (red) led to the strip board.\u003C\/div\u003E\u003Cdiv\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: center;\"\u003E\u003Ca href=\"http:\/\/4.bp.blogspot.com\/-EDu5UbAwJrM\/VpwoZphBLQI\/AAAAAAAAP7s\/F11qMgj_cL8\/s1600\/redledsolder.jpg\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"\u003E\u003Cimg border=\"0\" height=\"245\" src=\"https:\/\/4.bp.blogspot.com\/-EDu5UbAwJrM\/VpwoZphBLQI\/AAAAAAAAP7s\/F11qMgj_cL8\/s320\/redledsolder.jpg\" width=\"320\" \/\u003E\u003C\/a\u003E\u003C\/div\u003E\u003Cdiv\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv\u003E5. Stick the strip board to the case in-between the power booster and the amp with a bit of glue and put your PiGRRL back together.\u003C\/div\u003E\u003C\/div\u003E\u003Cdiv\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv\u003E6. Download the program from \u003Ca href=\"https:\/\/github.com\/martinohanlon\/grrl-bat-monitor\"\u003Egithub.com\/martinohanlon\/grrl-bat-monitor\u003C\/a\u003E\u003C\/div\u003E\u003Cpre class=\"prettyprint\"\u003Ecd ~\u003Cbr \/\u003Egit clone https:\/\/github.com\/martinohanlon\/grrl-bat-monitor\u003C\/pre\u003E\u003Cdiv\u003E7. Make the program run at boot by editing \/etc\/rc.local\u003C\/div\u003E\u003Cpre class=\"prettyprint\"\u003Esudo nano \/etc\/rc.local\u003C\/pre\u003E\u003Cdiv\u003EScroll down and add the command under '\/usr\/local\/bin\/retrogame \u0026amp;' but before 'exit 0':\u003C\/div\u003E\u003Cpre class=\"prettyprint\"\u003E\/home\/pi\/grrl-bat-monitor\/grrl_bat_mon \u0026amp;\u003C\/pre\u003E\u003Cdiv\u003E8. Reboot and test!\u003C\/div\u003E\u003Cdiv\u003E\u003Cbr \/\u003E\u003C\/div\u003E"},"link":[{"rel":"replies","type":"application/atom+xml","href":"http:\/\/www.stuffaboutcode.com\/feeds\/961458907318401267\/comments\/default","title":"Post Comments"},{"rel":"replies","type":"text/html","href":"http:\/\/www.stuffaboutcode.com\/2016\/01\/pocket-pigrrl-battery-monitor.html#comment-form","title":"14 Comments"},{"rel":"edit","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/9007601562606157016\/posts\/default\/961458907318401267"},{"rel":"self","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/9007601562606157016\/posts\/default\/961458907318401267"},{"rel":"alternate","type":"text/html","href":"http:\/\/www.stuffaboutcode.com\/2016\/01\/pocket-pigrrl-battery-monitor.html","title":"Pocket PiGRRL - Battery Monitor"}],"author":[{"name":{"$t":"Martin O'Hanlon"},"uri":{"$t":"https:\/\/plus.google.com\/117449463512606889592"},"email":{"$t":"noreply@blogger.com"},"gd$image":{"rel":"http://schemas.google.com/g/2005#thumbnail","width":"32","height":"32","src":"\/\/lh6.googleusercontent.com\/-mXyYt17u23k\/AAAAAAAAAAI\/AAAAAAAAME4\/UO0fIz3K4Xg\/s512-c\/photo.jpg"}}],"media$thumbnail":{"xmlns$media":"http://search.yahoo.com/mrss/","url":"https:\/\/4.bp.blogspot.com\/-zxmeapplwwg\/VpKHvJXWiWI\/AAAAAAAAP2o\/kBv1esu-FUE\/s72-c\/IMG_20160106_213746797.jpg","height":"72","width":"72"},"thr$total":{"$t":"14"}},{"id":{"$t":"tag:blogger.com,1999:blog-9007601562606157016.post-6539045085930367286"},"published":{"$t":"2016-01-10T16:47:00.001+00:00"},"updated":{"$t":"2017-04-24T09:11:24.656+01:00"},"category":[{"scheme":"http://www.blogger.com/atom/ns#","term":"games"},{"scheme":"http://www.blogger.com/atom/ns#","term":"raspberry pi"}],"title":{"type":"text","$t":"Pocket PiGRRL - adding a mute"},"content":{"type":"html","$t":"I recently made myself a \u003Ca href=\"https:\/\/learn.adafruit.com\/pocket-pigrrl\/overview\"\u003EPocket PiGRRL\u003C\/a\u003E based on Adafruit's tutorial - it really is a great machine and a brilliant learning experience.\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: center;\"\u003E\u003Ca href=\"http:\/\/1.bp.blogspot.com\/-l5Gu7NkfOD4\/VpKHv8ZIYjI\/AAAAAAAAP2g\/8M82qR3jH6E\/s1600\/IMG_20160106_213808996.jpg\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"\u003E\u003Cimg border=\"0\" height=\"320\" src=\"https:\/\/1.bp.blogspot.com\/-l5Gu7NkfOD4\/VpKHv8ZIYjI\/AAAAAAAAP2g\/8M82qR3jH6E\/s320\/IMG_20160106_213808996.jpg\" width=\"222\" \/\u003E\u003C\/a\u003E\u003C\/div\u003E\u003Cbr \/\u003EThere was one aspect though that I didn't like, the speaker hisses, not particularly loud and when your playing a game its not that noticeable but if you have got the volume down it is really annoying. Its all down the Raspberry Pi's noisy analogue audio out so there isn't a great deal you can do to clean it up.\u003Cbr \/\u003E\u003Cbr \/\u003EMy solution was to add the ability to shutdown the amp, effectively muting it when I didn't want any sound.\u003Cbr \/\u003E\u003Cbr \/\u003EThe PAM8302A amp breakout board has a shutdown (SD) pin which when a ground (logic zero) is connected it puts the amp into idle mode, muting the amp and reducing power consumption.\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: center;\"\u003E\u003Ca href=\"http:\/\/4.bp.blogspot.com\/-44qFwNoKRiw\/VpKHw5CA7RI\/AAAAAAAAP28\/yG0-p-Fvf94\/s1600\/gaming_secure_pam8302.jpg\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"\u003E\u003Cimg border=\"0\" height=\"262\" src=\"https:\/\/4.bp.blogspot.com\/-44qFwNoKRiw\/VpKHw5CA7RI\/AAAAAAAAP28\/yG0-p-Fvf94\/s320\/gaming_secure_pam8302.jpg\" width=\"320\" \/\u003E\u003C\/a\u003E\u003C\/div\u003E\u003Cbr \/\u003EI soldered a piece of wire between GPIO 26 on the bottom of the A+ and the shutdown pin on the PAM8302A ampl.\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Ci\u003ENote - a few people have noted in the comments that on other models of PiGrrl (such as the Pi Grrl 2) GPIO 26 is already used and have suggested changing this to GPIO 7.\u003C\/i\u003E\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: center;\"\u003E\u003Ca href=\"http:\/\/4.bp.blogspot.com\/-DNheNa8EVh8\/VpKHv0XKvOI\/AAAAAAAAP24\/B1Rririrz9A\/s1600\/IMG_20160108_204432090.jpg\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"\u003E\u003Cimg border=\"0\" height=\"194\" src=\"https:\/\/4.bp.blogspot.com\/-DNheNa8EVh8\/VpKHv0XKvOI\/AAAAAAAAP24\/B1Rririrz9A\/s320\/IMG_20160108_204432090.jpg\" width=\"320\" \/\u003E\u003C\/a\u003E\u003C\/div\u003E\u003Cbr \/\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: center;\"\u003E\u003Ca href=\"http:\/\/3.bp.blogspot.com\/-v_B4NjgG9GY\/VpKHw6y1HuI\/AAAAAAAAP3A\/xAkKnoM4l70\/s1600\/IMG_20160108_204531426.jpg\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"\u003E\u003Cimg border=\"0\" height=\"183\" src=\"https:\/\/3.bp.blogspot.com\/-v_B4NjgG9GY\/VpKHw6y1HuI\/AAAAAAAAP3A\/xAkKnoM4l70\/s320\/IMG_20160108_204531426.jpg\" width=\"320\" \/\u003E\u003C\/a\u003E\u003C\/div\u003E\u003Cbr \/\u003EThis gave me a way of triggering the shutdown pin next I needed some software and a way of running it.\u003Cbr \/\u003E\u003Cbr \/\u003EUsing this \u003Ca href=\"https:\/\/weekendengineer.wordpress.com\/2014\/09\/15\/adding-an-apps-tab-in-emulationstation\/\"\u003Etutorial\u003C\/a\u003E as the basis I added an 'Apps' tab to emulation station where I could run 2 scripts to mute and unmute the amp.\u003Cbr \/\u003E\u003Cbr \/\u003EIf you want to configure your Pocket PiGRRL to do the same, you can follow the instructions below.\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cb\u003EDownload and install wiring pi\u003C\/b\u003E\u003Cbr \/\u003EThe software uses wiringpi's gpio command line utility, so \u003Ca href=\"http:\/\/wiringpi.com\/download-and-install\/\"\u003Edownload and install\u003C\/a\u003E it.\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cb\u003EConfigure emulation station\u003C\/b\u003E\u003Cbr \/\u003ECopy the emulation station default settings file to the pi user's emulation station configuration:\u003Cbr \/\u003E\u003Cpre class=\"prettyprint\"\u003Ecp \/etc\/emulationstation\/es_systems.cfg ~\/.emulationstation\/\u003C\/pre\u003EAdd the 'apps' tab to the settings file:\u003Cbr \/\u003E\u003Cpre class=\"prettyprint\"\u003Enano ~\/.emulationstation\/es_systems.cfg\u003C\/pre\u003EScroll down to the bottom and add the following before the \u0026lt;\/systemList\u0026gt; text:\u003Cbr \/\u003E\u003Cpre class=\"prettyprint\"\u003E  \u0026lt;system\u0026gt;\u003Cbr \/\u003E    \u0026lt;fullname\u0026gt;Applications\u0026lt;\/fullname\u0026gt;\u003Cbr \/\u003E    \u0026lt;name\u0026gt;Apps\u0026lt;\/name\u0026gt;\u003Cbr \/\u003E    \u0026lt;path\u0026gt;~\/RetroPie\/roms\/apps\u0026lt;\/path\u0026gt;\u003Cbr \/\u003E    \u0026lt;extension\u0026gt;.sh .SH .py .PY\u0026lt;\/extension\u0026gt;\u003Cbr \/\u003E    \u0026lt;command\u0026gt;%ROM%\u0026lt;\/command\u0026gt;\u003Cbr \/\u003E    \u0026lt;platform\u0026gt;apps\u0026lt;\/platform\u0026gt;\u003Cbr \/\u003E    \u0026lt;theme\u0026gt;esconfig\u0026lt;\/theme\u0026gt;\u003Cbr \/\u003E  \u0026lt;\/system\u0026gt;\u003C\/pre\u003ESave and exit using Ctrl X.\u003Cbr \/\u003E\u003Cbr \/\u003EMake a directory in roms to hold the scripts:\u003Cbr \/\u003E\u003Cpre class=\"prettyprint\"\u003Emkdir ~\/RetroPie\/roms\/apps\u003C\/pre\u003ECreate a script to mute the amp by setting GPIO 26 to low (0):\u003Cbr \/\u003E\u003Cpre class=\"prettyprint\"\u003Enano ~\/RetroPie\/roms\/apps\/mute_amp.sh\u003Cbr \/\u003E\u003Cbr \/\u003Egpio -g mode 26 out\u003Cbr \/\u003Egpio -g write 26 0\u003C\/pre\u003EAnd an unmute script:\u003Cbr \/\u003E\u003Cpre class=\"prettyprint\"\u003Enano ~\/RetroPie\/roms\/apps\/unmute_amp.sh\u003Cbr \/\u003E\u003Cbr \/\u003Egpio -g mode 26 out\u003Cbr \/\u003Egpio -g write 26 1\u003C\/pre\u003EMake the scripts executable:\u003Cbr \/\u003E\u003Cpre class=\"prettyprint\"\u003Echmod +x ~\/RetroPie\/roms\/apps\/mute_amp.sh\u003Cbr \/\u003Echmod +x ~\/RetroPie\/roms\/apps\/unmute_amp.sh\u003C\/pre\u003EYou can now test the scripts by running them:\u003Cbr \/\u003E\u003Cpre class=\"prettyprint\"\u003E~\/RetroPie\/roms\/apps\/mute_amp.sh\u003Cbr \/\u003E~\/RetroPie\/roms\/apps\/unmute_amp.sh\u003C\/pre\u003EReboot and the Apps tab will appear in emulation station with 2 options to mute and unmute the amp.\u003Cbr \/\u003E\u003Cbr \/\u003EI wanted the amp to be muted by default, so I added the script to be run at boot by editing \/etc\/rc.local:\u003Cbr \/\u003E\u003Cpre class=\"prettyprint\"\u003Esudo nano \/etc\/rc.local\u003C\/pre\u003EScroll down and add the unmute command under '\/usr\/local\/bin\/retrogame \u0026amp;' but before 'exit 0':\u003Cbr \/\u003E\u003Cpre class=\"prettyprint\"\u003E\/home\/pi\/RetroPie\/roms\/apps\/mute_amp.sh \u0026amp;\u003C\/pre\u003E\u003Cbr \/\u003E"},"link":[{"rel":"replies","type":"application/atom+xml","href":"http:\/\/www.stuffaboutcode.com\/feeds\/6539045085930367286\/comments\/default","title":"Post Comments"},{"rel":"replies","type":"text/html","href":"http:\/\/www.stuffaboutcode.com\/2016\/01\/pocket-pigrrl-adding-mute.html#comment-form","title":"21 Comments"},{"rel":"edit","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/9007601562606157016\/posts\/default\/6539045085930367286"},{"rel":"self","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/9007601562606157016\/posts\/default\/6539045085930367286"},{"rel":"alternate","type":"text/html","href":"http:\/\/www.stuffaboutcode.com\/2016\/01\/pocket-pigrrl-adding-mute.html","title":"Pocket PiGRRL - adding a mute"}],"author":[{"name":{"$t":"Martin O'Hanlon"},"uri":{"$t":"https:\/\/plus.google.com\/117449463512606889592"},"email":{"$t":"noreply@blogger.com"},"gd$image":{"rel":"http://schemas.google.com/g/2005#thumbnail","width":"32","height":"32","src":"\/\/lh6.googleusercontent.com\/-mXyYt17u23k\/AAAAAAAAAAI\/AAAAAAAAME4\/UO0fIz3K4Xg\/s512-c\/photo.jpg"}}],"media$thumbnail":{"xmlns$media":"http://search.yahoo.com/mrss/","url":"https:\/\/1.bp.blogspot.com\/-l5Gu7NkfOD4\/VpKHv8ZIYjI\/AAAAAAAAP2g\/8M82qR3jH6E\/s72-c\/IMG_20160106_213808996.jpg","height":"72","width":"72"},"thr$total":{"$t":"21"}},{"id":{"$t":"tag:blogger.com,1999:blog-9007601562606157016.post-2401981052522948903"},"published":{"$t":"2015-12-18T13:52:00.000+00:00"},"updated":{"$t":"2016-02-02T21:09:13.207+00:00"},"category":[{"scheme":"http://www.blogger.com/atom/ns#","term":"Adventures in Minecraft"},{"scheme":"http://www.blogger.com/atom/ns#","term":"microbit"},{"scheme":"http://www.blogger.com/atom/ns#","term":"minecraft"},{"scheme":"http://www.blogger.com/atom/ns#","term":"Python"}],"title":{"type":"text","$t":"Minecraft, a Microbit and an X-Wing"},"content":{"type":"html","$t":"I was having a chat with \u003Ca href=\"https:\/\/twitter.com\/whaleygeek\"\u003EDavid Whale\u003C\/a\u003E, my co-author of \u003Ca href=\"http:\/\/eu.wiley.com\/WileyCDA\/WileyTitle\/productCd-111894691X.html\"\u003EAdventures in Minecraft\u003C\/a\u003E\u0026nbsp;and he remarked that wouldn't it be cool if you could control something in Minecraft using the Microbit. (Btw - you should definitely check out David's virtual\u0026nbsp;\u003Ca href=\"https:\/\/github.com\/whaleygeek\/mc_microbit\"\u003EMinecraft Microbit\u003C\/a\u003E.)\u003Cbr \/\u003E\u003Cbr \/\u003EI settled on the idea of using the Microbit's accelerometer to control an object flying through Minecraft. What object, well it had to be the X-Wing, from my previous \u003Ca href=\"http:\/\/www.stuffaboutcode.com\/2015\/03\/minecraft-star-wars.html\"\u003EMinecraft - Star Wars\u003C\/a\u003E project.\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: center;\"\u003E\u003Ca href=\"http:\/\/3.bp.blogspot.com\/-aJZ3PfkNHG8\/VnQL9UGdCFI\/AAAAAAAAPjw\/lIWoTrM2R80\/s1600\/minecraft_microbit.JPG\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"\u003E\u003Cimg border=\"0\" height=\"180\" src=\"http:\/\/3.bp.blogspot.com\/-aJZ3PfkNHG8\/VnQL9UGdCFI\/AAAAAAAAPjw\/lIWoTrM2R80\/s320\/minecraft_microbit.JPG\" width=\"320\" \/\u003E\u003C\/a\u003E\u003C\/div\u003E\u003Cbr \/\u003EThe A button starts and stops the X-Wing, by tilting the Microbit left and right you can turn and the B button drops blocks of TNT which create craters where they land.\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: center;\"\u003E\u003Ciframe allowfullscreen=\"\" class=\"YOUTUBE-iframe-video\" data-thumbnail-src=\"https:\/\/i.ytimg.com\/vi\/59KqWVwj_Cc\/0.jpg\" frameborder=\"0\" height=\"266\" src=\"https:\/\/www.youtube.com\/embed\/59KqWVwj_Cc?feature=player_embedded\" width=\"320\"\u003E\u003C\/iframe\u003E\u003C\/div\u003E\u003Cbr \/\u003EThere are 2 python programs:\u003Cbr \/\u003E\u003Col\u003E\u003Cli\u003E\u003Ca href=\"https:\/\/github.com\/martinohanlon\/microbit-micropython\/blob\/master\/examples\/mcfly\/microbitreaddata.py\"\u003Emicrobitreaddata.py\u003C\/a\u003E - this runs on the Microbit and reads the status of the buttons and accelerometer\u0026nbsp;\u003C\/li\u003E\u003Cli\u003E\u003Ca href=\"https:\/\/github.com\/martinohanlon\/microbit-micropython\/blob\/master\/examples\/mcfly\/mcfly.py\"\u003Emcfly.py\u003C\/a\u003E - this runs on your computer (I used a Windows PC running Raspberry Juice and full Minecraft, but it would work on a Raspberry Pi as well) which reads the data from the Microbit and makes all the calls to move the X-Wing in Minecraft.\u003C\/li\u003E\u003C\/ol\u003EYou will find the full code and my other Microbit MicroPython examples at \u003Ca href=\"https:\/\/github.com\/martinohanlon\/microbit-micropython\"\u003Egithub.com\/martinohanlon\/microbit-micropython\u003C\/a\u003E.\u003Cbr \/\u003E\u003Cbr \/\u003E"},"link":[{"rel":"replies","type":"application/atom+xml","href":"http:\/\/www.stuffaboutcode.com\/feeds\/2401981052522948903\/comments\/default","title":"Post Comments"},{"rel":"replies","type":"text/html","href":"http:\/\/www.stuffaboutcode.com\/2015\/12\/minecraft-microbit-and-x-wing.html#comment-form","title":"6 Comments"},{"rel":"edit","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/9007601562606157016\/posts\/default\/2401981052522948903"},{"rel":"self","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/9007601562606157016\/posts\/default\/2401981052522948903"},{"rel":"alternate","type":"text/html","href":"http:\/\/www.stuffaboutcode.com\/2015\/12\/minecraft-microbit-and-x-wing.html","title":"Minecraft, a Microbit and an X-Wing"}],"author":[{"name":{"$t":"Martin O'Hanlon"},"uri":{"$t":"https:\/\/plus.google.com\/117449463512606889592"},"email":{"$t":"noreply@blogger.com"},"gd$image":{"rel":"http://schemas.google.com/g/2005#thumbnail","width":"32","height":"32","src":"\/\/lh6.googleusercontent.com\/-mXyYt17u23k\/AAAAAAAAAAI\/AAAAAAAAME4\/UO0fIz3K4Xg\/s512-c\/photo.jpg"}}],"media$thumbnail":{"xmlns$media":"http://search.yahoo.com/mrss/","url":"http:\/\/3.bp.blogspot.com\/-aJZ3PfkNHG8\/VnQL9UGdCFI\/AAAAAAAAPjw\/lIWoTrM2R80\/s72-c\/minecraft_microbit.JPG","height":"72","width":"72"},"thr$total":{"$t":"6"}},{"id":{"$t":"tag:blogger.com,1999:blog-9007601562606157016.post-4484906708426493818"},"published":{"$t":"2015-11-30T18:41:00.001+00:00"},"updated":{"$t":"2016-02-02T21:09:13.215+00:00"},"category":[{"scheme":"http://www.blogger.com/atom/ns#","term":"microbit"},{"scheme":"http://www.blogger.com/atom/ns#","term":"Python"}],"title":{"type":"text","$t":"MicroBit Magic 8 Ball with MicroPython"},"content":{"type":"html","$t":"I wanted to create something with the MicroBit which used the on-board accelerometer and I settled on a \u003Ca href=\"https:\/\/en.wikipedia.org\/wiki\/Magic_8-Ball\"\u003EMagic 8 Ball\u003C\/a\u003E, the fortune-telling pool ball which when shaken and asked a question it provides, a, often cryptic, response.\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: center;\"\u003E\u003Ciframe allowfullscreen=\"\" class=\"YOUTUBE-iframe-video\" data-thumbnail-src=\"https:\/\/i.ytimg.com\/vi\/b-8cRJiEKbo\/0.jpg\" frameborder=\"0\" height=\"266\" src=\"https:\/\/www.youtube.com\/embed\/b-8cRJiEKbo?feature=player_embedded\" width=\"320\"\u003E\u003C\/iframe\u003E\u003C\/div\u003E\u003Cdiv\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv\u003EThe program works out whether the MicroBit has been shaken by:\u003C\/div\u003E\u003Cdiv\u003E\u003Cul\u003E\u003Cli\u003EReading the x, y, z values from the accelerometer in a loop and adding them together to get a total force exposed\u003C\/li\u003E\u003Cli\u003EGetting the difference between the last reading and the current reading\u003C\/li\u003E\u003Cli\u003EIf the difference is greater than a threshold, you assume the MicroBit has been shaken\u003C\/li\u003E\u003C\/ul\u003E\u003Cdiv\u003EI wrapped this into a function wait_for_shake, which perhaps not unsurprisingly blocks until the MicroBit is shaken!\u003C\/div\u003E\u003Cpre class=\"prettyprint\"\u003Eimport microbit\u003Cbr \/\u003E\u003Cbr \/\u003ETOLERANCE = 3000\u003Cbr \/\u003E\u003Cbr \/\u003Edef get_accel_total():\u003Cbr \/\u003E    x = microbit.accelerometer.get_x()\u003Cbr \/\u003E    y = microbit.accelerometer.get_y()\u003Cbr \/\u003E    z = microbit.accelerometer.get_z()\u003Cbr \/\u003E    return x + y + z\u003Cbr \/\u003E\u003Cbr \/\u003Edef wait_for_shake():\u003Cbr \/\u003E    shaken = False\u003Cbr \/\u003E    last = get_accel_total()\u003Cbr \/\u003E    while not shaken:\u003Cbr \/\u003E        this = get_accel_total()\u003Cbr \/\u003E        diff = last - this\u003Cbr \/\u003E        if diff \u0026lt; 0: diff = diff * -1\u003Cbr \/\u003E        if diff \u0026gt; TOLERANCE:\u003Cbr \/\u003E            shaken = True\u003Cbr \/\u003E        last = this\u003Cbr \/\u003E        microbit.sleep(50)\u003C\/pre\u003E\u003Cdiv\u003EIts not 'very' sophisticated but it works.\u003Cbr \/\u003E\u003Cbr \/\u003EOnce I had this working it pretty simple to add a loop which waited for the MicroBit to be shaken and scrolled a random message on the LED screen.\u003Cbr \/\u003E\u003Cpre class=\"prettyprint\"\u003EMESSAGES = [\"It is certain\", \"Dont count on it\", \"Ask again\"]\u003Cbr \/\u003Ewhile True:\u003Cbr \/\u003E    microbit.display.print(\"8\")\u003Cbr \/\u003E    wait_for_shake()\u003Cbr \/\u003E    microbit.display.clear()\u003Cbr \/\u003E    microbit.sleep(2000)\u003Cbr \/\u003E    message = microbit.random(len(MESSAGES))\u003Cbr \/\u003E    microbit.display.scroll(MESSAGES[message])\u003C\/pre\u003EIf you want to add your own messages, just add them to the MESSAGES list.\u003Cbr \/\u003E\u003Cbr \/\u003EYou can find the code \u003Ca href=\"https:\/\/github.com\/martinohanlon\/microbit-micropython\/blob\/master\/examples\/8ball.py\"\u003Ehere\u003C\/a\u003E and other examples in my \u003Ca href=\"https:\/\/github.com\/martinohanlon\/microbit-micropython\"\u003Emicrobit-micropython GitHub repository\u003C\/a\u003E.\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: center;\"\u003E\u003Ca href=\"http:\/\/4.bp.blogspot.com\/-sC1swRCSexw\/VlyXwJmMJKI\/AAAAAAAAPYA\/E0WDddsrhts\/s1600\/8ballmicrobit.JPG\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"\u003E\u003Cimg border=\"0\" height=\"242\" src=\"http:\/\/4.bp.blogspot.com\/-sC1swRCSexw\/VlyXwJmMJKI\/AAAAAAAAPYA\/E0WDddsrhts\/s320\/8ballmicrobit.JPG\" width=\"320\" \/\u003E\u003C\/a\u003E\u003C\/div\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003C\/div\u003E"},"link":[{"rel":"replies","type":"application/atom+xml","href":"http:\/\/www.stuffaboutcode.com\/feeds\/4484906708426493818\/comments\/default","title":"Post Comments"},{"rel":"replies","type":"text/html","href":"http:\/\/www.stuffaboutcode.com\/2015\/11\/microbit-magic-8-ball-with-micropython.html#comment-form","title":"0 Comments"},{"rel":"edit","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/9007601562606157016\/posts\/default\/4484906708426493818"},{"rel":"self","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/9007601562606157016\/posts\/default\/4484906708426493818"},{"rel":"alternate","type":"text/html","href":"http:\/\/www.stuffaboutcode.com\/2015\/11\/microbit-magic-8-ball-with-micropython.html","title":"MicroBit Magic 8 Ball with MicroPython"}],"author":[{"name":{"$t":"Martin O'Hanlon"},"uri":{"$t":"https:\/\/plus.google.com\/117449463512606889592"},"email":{"$t":"noreply@blogger.com"},"gd$image":{"rel":"http://schemas.google.com/g/2005#thumbnail","width":"32","height":"32","src":"\/\/lh6.googleusercontent.com\/-mXyYt17u23k\/AAAAAAAAAAI\/AAAAAAAAME4\/UO0fIz3K4Xg\/s512-c\/photo.jpg"}}],"media$thumbnail":{"xmlns$media":"http://search.yahoo.com/mrss/","url":"https:\/\/img.youtube.com\/vi\/b-8cRJiEKbo\/default.jpg","height":"72","width":"72"},"thr$total":{"$t":"0"}},{"id":{"$t":"tag:blogger.com,1999:blog-9007601562606157016.post-150515400361692457"},"published":{"$t":"2015-11-26T22:01:00.000+00:00"},"updated":{"$t":"2016-05-19T10:24:50.013+01:00"},"category":[{"scheme":"http://www.blogger.com/atom/ns#","term":"microbit"},{"scheme":"http://www.blogger.com/atom/ns#","term":"Python"}],"title":{"type":"text","$t":"Snake on MicroBit using MicroPython"},"content":{"type":"html","$t":"\u003Ca href=\"http:\/\/1.bp.blogspot.com\/-PD5qqkqJLJM\/VleA4VOtOCI\/AAAAAAAAPUk\/u-Oamn8RozA\/s1600\/IMG_20151126_215812991.jpg\" imageanchor=\"1\" style=\"clear: right; float: right; margin-bottom: 1em; margin-left: 1em;\"\u003E\u003Cimg border=\"0\" height=\"179\" src=\"https:\/\/1.bp.blogspot.com\/-PD5qqkqJLJM\/VleA4VOtOCI\/AAAAAAAAPUk\/u-Oamn8RozA\/s320\/IMG_20151126_215812991.jpg\" width=\"320\" \/\u003E\u003C\/a\u003EI got my hands on one of the BBC's Microbit's as part of \u003Ca href=\"https:\/\/twitter.com\/ntoll\"\u003Entoll\u003C\/a\u003E's \u003Ca href=\"http:\/\/microworldtour.github.io\/\"\u003EMicro World Tour\u003C\/a\u003E.\u003Cbr \/\u003E\u003Cbr \/\u003EI used ntoll's \u003Ca href=\"https:\/\/github.com\/ntoll\/upyed\"\u003Eupyed\u003C\/a\u003E website to create my code and download the .hex file which I uploaded to the Microbit.\u003Cbr \/\u003E\u003Cbr \/\u003EAfter a few tests to see if everything was working I decided to see if I could port the code I wrote to make \u003Ca href=\"http:\/\/www.stuffaboutcode.com\/2013\/03\/raspberry-pi-minecraft-snake.html\"\u003ESnake for Minecraft\u003C\/a\u003E and \u003Ca href=\"http:\/\/www.stuffaboutcode.com\/2015\/06\/astro-pi-snake-game.html\"\u003ERaspberry Pi Sense Hat\u003C\/a\u003E.\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: center;\"\u003E\u003Ciframe allowfullscreen=\"\" class=\"YOUTUBE-iframe-video\" data-thumbnail-src=\"https:\/\/i.ytimg.com\/vi\/R1DOIxkGSwg\/0.jpg\" frameborder=\"0\" height=\"266\" src=\"https:\/\/www.youtube.com\/embed\/R1DOIxkGSwg?feature=player_embedded\" width=\"320\"\u003E\u003C\/iframe\u003E\u003C\/div\u003E\u003Cbr \/\u003EI was pretty pleased. If you want to have a go yourself you will find the code \u003Ca href=\"https:\/\/github.com\/martinohanlon\/microbit-micropython\/blob\/master\/examples\/snakebit.py\"\u003Ehere\u003C\/a\u003E.\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cb\u003EThe code\u003C\/b\u003E\u003Cbr \/\u003E\u003Cpre class=\"prettyprint\"\u003Eimport microbit\u003Cbr \/\u003E\u003Cbr \/\u003Eimport random\u003Cbr \/\u003E\u003Cbr \/\u003Eclass SnakeBit():\u003Cbr \/\u003E    UP = 0\u003Cbr \/\u003E    DOWN = 1\u003Cbr \/\u003E    RIGHT = 2\u003Cbr \/\u003E    LEFT = 3\u003Cbr \/\u003E    \u003Cbr \/\u003E    SNAKEBRIGHTNESS = 9\u003Cbr \/\u003E    APPLEBRIGHTNESS = 5\u003Cbr \/\u003E    SAMPLETIME = 50\u003Cbr \/\u003E    SAMPLESPERMOVE = 10\u003Cbr \/\u003E    \u003Cbr \/\u003E    def __init__(self):\u003Cbr \/\u003E        pass\u003Cbr \/\u003E    \u003Cbr \/\u003E    def startGame(self):\u003Cbr \/\u003E        microbit.display.clear()\u003Cbr \/\u003E        self.direction = self.UP\u003Cbr \/\u003E        self.length = 2\u003Cbr \/\u003E        self.tail = []\u003Cbr \/\u003E        self.tail.insert(0, [2, 4])\u003Cbr \/\u003E        self.createApple()\u003Cbr \/\u003E        self.score = 0\u003Cbr \/\u003E        \u003Cbr \/\u003E        playing = True\u003Cbr \/\u003E        \u003Cbr \/\u003E        samples = 0\u003Cbr \/\u003E        while(playing):\u003Cbr \/\u003E            #keep looping around, if the button is pressed, move the snake immediately, \u003Cbr \/\u003E            #otherwise move it when the sample time is reached\u003Cbr \/\u003E            microbit.sleep(self.SAMPLETIME)\u003Cbr \/\u003E            buttonPressed = self._handle_buttons()\u003Cbr \/\u003E            samples = samples + 1\u003Cbr \/\u003E            if buttonPressed or samples == self.SAMPLESPERMOVE:\u003Cbr \/\u003E                playing = self.move()\u003Cbr \/\u003E                samples = 0\u003Cbr \/\u003E                \u003Cbr \/\u003E        microbit.display.scroll(\"Score = \" + str(self.score), 100)\u003Cbr \/\u003E        microbit.display.clear()\u003Cbr \/\u003E\u003Cbr \/\u003E    def _handle_buttons(self):\u003Cbr \/\u003E        buttonPressed = False\u003Cbr \/\u003E        \u003Cbr \/\u003E        #has a button been pressed\u003Cbr \/\u003E        if microbit.button_a.is_pressed():\u003Cbr \/\u003E            #wait for the button to be released\u003Cbr \/\u003E            while microbit.button_a.is_pressed():\u003Cbr \/\u003E                microbit.sleep(self.SAMPLETIME)\u003Cbr \/\u003E            self.left()\u003Cbr \/\u003E            buttonPressed = True\u003Cbr \/\u003E        \u003Cbr \/\u003E        if microbit.button_b.is_pressed():\u003Cbr \/\u003E            while microbit.button_b.is_pressed():\u003Cbr \/\u003E                microbit.sleep(self.SAMPLETIME)\u003Cbr \/\u003E            self.right()\u003Cbr \/\u003E            buttonPressed = True\u003Cbr \/\u003E            \u003Cbr \/\u003E        return buttonPressed\u003Cbr \/\u003E\u003Cbr \/\u003E    def createApple(self):\u003Cbr \/\u003E        badApple = True\u003Cbr \/\u003E        #try and fnd a location for the apple\u003Cbr \/\u003E        while(badApple):\u003Cbr \/\u003E            x = random.randint(0,4)\u003Cbr \/\u003E            y = random.randint(0,4)\u003Cbr \/\u003E            badApple = self.checkCollision(x, y)\u003Cbr \/\u003E        self.apple = [x, y]\u003Cbr \/\u003E        microbit.display.set_pixel(x, y, self.APPLEBRIGHTNESS)\u003Cbr \/\u003E\u003Cbr \/\u003E    def checkCollision(self, x, y):\u003Cbr \/\u003E        #is this outside the screen\u003Cbr \/\u003E        if x \u003E 4 or x \u003C 0 or y \u003E 4 or y \u003C 0:\u003Cbr \/\u003E            return True\u003Cbr \/\u003E        else:\u003Cbr \/\u003E            #or in the snakes tail\u003Cbr \/\u003E            for segment in self.tail:\u003Cbr \/\u003E                if segment[0] == x and segment[1] == y:\u003Cbr \/\u003E                    return True\u003Cbr \/\u003E            else:\u003Cbr \/\u003E                return False\u003Cbr \/\u003E\u003Cbr \/\u003E    def addSegment(self, x, y):\u003Cbr \/\u003E        #create the new segment of the snake\u003Cbr \/\u003E        microbit.display.set_pixel(x, y, self.SNAKEBRIGHTNESS)\u003Cbr \/\u003E        self.tail.insert(0, [x, y])\u003Cbr \/\u003E        \u003Cbr \/\u003E        #do I need to clear a segment\u003Cbr \/\u003E        if len(self.tail) \u003E self.length:\u003Cbr \/\u003E            lastSegment = self.tail[-1]\u003Cbr \/\u003E            microbit.display.set_pixel(lastSegment[0], lastSegment[1], 0)\u003Cbr \/\u003E            self.tail.pop()\u003Cbr \/\u003E\u003Cbr \/\u003E    def move(self):\u003Cbr \/\u003E        #work out where the new segment of the snake will be\u003Cbr \/\u003E        newSegment = [self.tail[0][0], self.tail[0][1]]\u003Cbr \/\u003E        if self.direction == self.UP:\u003Cbr \/\u003E            newSegment[1] -= 1\u003Cbr \/\u003E        elif self.direction == self.DOWN:\u003Cbr \/\u003E            newSegment[1] += 1\u003Cbr \/\u003E        elif self.direction == self.LEFT:\u003Cbr \/\u003E            newSegment[0] -= 1\u003Cbr \/\u003E        elif self.direction == self.RIGHT:\u003Cbr \/\u003E            newSegment[0] += 1\u003Cbr \/\u003E\u003Cbr \/\u003E        if self.checkCollision(newSegment[0], newSegment[1]):\u003Cbr \/\u003E            #game over\u003Cbr \/\u003E            snakehead = self.tail[0]\u003Cbr \/\u003E            for flashHead in range(0,5):\u003Cbr \/\u003E                microbit.display.set_pixel(snakehead[0], snakehead[1], self.SNAKEBRIGHTNESS)\u003Cbr \/\u003E                microbit.sleep(200)\u003Cbr \/\u003E                microbit.display.set_pixel(snakehead[0], snakehead[1], 0)\u003Cbr \/\u003E                microbit.sleep(200)\u003Cbr \/\u003E            \u003Cbr \/\u003E            return False\u003Cbr \/\u003E            \u003Cbr \/\u003E        else:\u003Cbr \/\u003E            self.addSegment(newSegment[0], newSegment[1])\u003Cbr \/\u003E\u003Cbr \/\u003E            #has the snake eaten the apple?\u003Cbr \/\u003E            if newSegment[0] == self.apple[0] and newSegment[1] == self.apple[1]:\u003Cbr \/\u003E                self.length += 1\u003Cbr \/\u003E                self.score += 10\u003Cbr \/\u003E                self.createApple()\u003Cbr \/\u003E\u003Cbr \/\u003E            return True\u003Cbr \/\u003E\u003Cbr \/\u003E    def left(self):\u003Cbr \/\u003E        if self.direction == self.RIGHT:\u003Cbr \/\u003E            self.direction = self.UP\u003Cbr \/\u003E        elif self.direction == self.UP:\u003Cbr \/\u003E            self.direction = self.LEFT\u003Cbr \/\u003E        elif self.direction == self.LEFT:\u003Cbr \/\u003E            self.direction = self.DOWN\u003Cbr \/\u003E        elif self.direction == self.DOWN:\u003Cbr \/\u003E            self.direction = self.RIGHT\u003Cbr \/\u003E\u003Cbr \/\u003E    def right(self):\u003Cbr \/\u003E        if self.direction == self.RIGHT:\u003Cbr \/\u003E            self.direction = self.DOWN\u003Cbr \/\u003E        elif self.direction == self.DOWN:\u003Cbr \/\u003E            self.direction = self.LEFT\u003Cbr \/\u003E        elif self.direction == self.LEFT:\u003Cbr \/\u003E            self.direction = self.UP\u003Cbr \/\u003E        elif self.direction == self.UP:\u003Cbr \/\u003E            self.direction = self.RIGHT\u003Cbr \/\u003E\u003Cbr \/\u003Esnake = SnakeBit()\u003Cbr \/\u003Esnake.startGame()\u003Cbr \/\u003E\u003C\/pre\u003E\u003Cbr \/\u003E"},"link":[{"rel":"replies","type":"application/atom+xml","href":"http:\/\/www.stuffaboutcode.com\/feeds\/150515400361692457\/comments\/default","title":"Post Comments"},{"rel":"replies","type":"text/html","href":"http:\/\/www.stuffaboutcode.com\/2015\/11\/snake-on-microbit-using-micropython.html#comment-form","title":"2 Comments"},{"rel":"edit","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/9007601562606157016\/posts\/default\/150515400361692457"},{"rel":"self","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/9007601562606157016\/posts\/default\/150515400361692457"},{"rel":"alternate","type":"text/html","href":"http:\/\/www.stuffaboutcode.com\/2015\/11\/snake-on-microbit-using-micropython.html","title":"Snake on MicroBit using MicroPython"}],"author":[{"name":{"$t":"Martin O'Hanlon"},"uri":{"$t":"https:\/\/plus.google.com\/117449463512606889592"},"email":{"$t":"noreply@blogger.com"},"gd$image":{"rel":"http://schemas.google.com/g/2005#thumbnail","width":"32","height":"32","src":"\/\/lh6.googleusercontent.com\/-mXyYt17u23k\/AAAAAAAAAAI\/AAAAAAAAME4\/UO0fIz3K4Xg\/s512-c\/photo.jpg"}}],"media$thumbnail":{"xmlns$media":"http://search.yahoo.com/mrss/","url":"https:\/\/1.bp.blogspot.com\/-PD5qqkqJLJM\/VleA4VOtOCI\/AAAAAAAAPUk\/u-Oamn8RozA\/s72-c\/IMG_20151126_215812991.jpg","height":"72","width":"72"},"thr$total":{"$t":"2"}},{"id":{"$t":"tag:blogger.com,1999:blog-9007601562606157016.post-7791850541259226909"},"published":{"$t":"2015-11-10T21:26:00.001+00:00"},"updated":{"$t":"2015-11-11T08:51:38.437+00:00"},"category":[{"scheme":"http://www.blogger.com/atom/ns#","term":"gps"},{"scheme":"http://www.blogger.com/atom/ns#","term":"Python"},{"scheme":"http://www.blogger.com/atom/ns#","term":"raspberry pi"}],"title":{"type":"text","$t":"Raspberry Pi PiAware Aircraft Radar"},"content":{"type":"html","$t":"After creating the \u003Ca href=\"http:\/\/www.stuffaboutcode.com\/2015\/10\/piaware-aircraft-overhead-led.html\"\u003EPiAware Flight Indicator LED\u003C\/a\u003E I was keen to see what else I could do with the aircraft data my\u0026nbsp;\u003Ca href=\"https:\/\/uk.flightaware.com\/adsb\/piaware\/\"\u003EPiAware\u003C\/a\u003E setup was retrieving for me.\u003Cbr \/\u003E\u003Cbr \/\u003EI thought I would see if I could make an 'old fashioned' radar to show what aircraft were being picked up so I could have my own desk based radar.\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: center;\"\u003E\u003Ca href=\"http:\/\/4.bp.blogspot.com\/-SQP5BI9XdQQ\/VkMAl1JPV8I\/AAAAAAAAPJo\/KquMoTpAX2Q\/s1600\/IMG_20151111_072831560.jpg\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"\u003E\u003Cimg border=\"0\" height=\"179\" src=\"http:\/\/4.bp.blogspot.com\/-SQP5BI9XdQQ\/VkMAl1JPV8I\/AAAAAAAAPJo\/KquMoTpAX2Q\/s320\/IMG_20151111_072831560.jpg\" width=\"320\" \/\u003E\u003C\/a\u003E\u003C\/div\u003E\u003Cbr \/\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: center;\"\u003E\u003Ciframe allowfullscreen=\"\" class=\"YOUTUBE-iframe-video\" data-thumbnail-src=\"https:\/\/i.ytimg.com\/vi\/riIjfNKr-SM\/0.jpg\" frameborder=\"0\" height=\"266\" src=\"https:\/\/www.youtube.com\/embed\/riIjfNKr-SM?feature=player_embedded\" width=\"320\"\u003E\u003C\/iframe\u003E\u003C\/div\u003E\u003Cbr \/\u003EI found an example of a \u003Ca href=\"http:\/\/simpson.edu\/computer-science\/\"\u003Eradar written in pygame\u003C\/a\u003E, which became the basis of my code (although I am pretty sure the original author wouldn't recognise it now) and created a \u003Ca href=\"https:\/\/github.com\/martinohanlon\/PiAwareRadar\/blob\/master\/piawareradar\/radar.py\"\u003Eradar class\u003C\/a\u003E.\u003Cbr \/\u003E\u003Cbr \/\u003EI plugged in the GPS coordinates of the aircraft using the \u003Ca href=\"http:\/\/www.stuffaboutcode.com\/2015\/09\/read-piaware-flight-data-with-python.html\"\u003EPiAware flight data class\u003C\/a\u003E I created to produce a pretty swanky, even if I say so myself, radar of all the aircraft I am picking up signals from.\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cb\u003ESetup PiAware\u003C\/b\u003E\u003Cbr \/\u003EIf you want to have a go, first you need to setup a\u0026nbsp;\u003Ca href=\"https:\/\/uk.flightaware.com\/adsb\/piaware\/\"\u003EPiAware\u003C\/a\u003E server to receive data - you don't need a lot of equipment and its really easy to do.\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cb\u003EDownload my project\u003C\/b\u003E\u003Cbr \/\u003EThe code is on \u003Ca href=\"https:\/\/github.com\/martinohanlon\/PiAwareRadar\"\u003Egithub \u003C\/a\u003Eat \u003Ca href=\"https:\/\/github.com\/martinohanlon\/PiAwareRadar\"\u003Egithub.com\/martinohanlon\/PiAwareRadar\u003C\/a\u003E.\u003Cbr \/\u003E\u003Cpre class=\"prettyprint\"\u003Egit clone https:\/\/github.com\/martinohanlon\/PiAwareRadar\u003C\/pre\u003E\u003Cb\u003ERun the program\u003C\/b\u003E\u003Cbr \/\u003EThe program expects a number of command line parameters, the mandatory being the latitude and longitude of your PiAware server, which will be the centre of the radar.\u003Cbr \/\u003E\u003Cpre class=\"prettyprint\"\u003Ecd PiAwareRadar\/piawareradar\u003Cbr \/\u003Epython3 piawareradar.py mylat mylon\u003C\/pre\u003EYou can set other parameters for the IP address of the PiAware server, if your radar is running on a different machine, whether you want it to run full screen and the layout of your screen (normal or touch).\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cb\u003EUsage\u003C\/b\u003E\u003Cbr \/\u003E\u003Cpre class=\"prettyprint\"\u003E    usage: piawareradar.py [-h] [--piawareip PIAWAREIP] [--screen SCREEN] [--fullscreen] lat lon\u003Cbr \/\u003E    \u003Cbr \/\u003E    PiAware Flight Radar\u003Cbr \/\u003E    \u003Cbr \/\u003E    positional arguments:\u003Cbr \/\u003E      lat                   The latitude of the receiver\u003Cbr \/\u003E      lon                   The longitude of the receiver\u003Cbr \/\u003E\u003Cbr \/\u003E    optional arguments:\u003Cbr \/\u003E      -h, --help            show this help message and exit\u003Cbr \/\u003E      --piawareip PIAWAREIP The ip address of the piaware server\u003Cbr \/\u003E      --screen SCREEN       The screen config to use [normal \/ touch]\u003Cbr \/\u003E      --fullscreen          Fullscreen radar\u003C\/pre\u003E\u003Cdiv\u003EThe plus and minus buttons in the top right allow you to zoom in and out, if you click on a dot, the data about that flight will be display in the bottom right hand corner.\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: center;\"\u003E\u003Ca href=\"http:\/\/1.bp.blogspot.com\/-GSzjNYqjD4Y\/VkJevs7daGI\/AAAAAAAAPI8\/1qWX0dmkh9Y\/s1600\/radar.jpg\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"\u003E\u003Cimg border=\"0\" height=\"240\" src=\"http:\/\/1.bp.blogspot.com\/-GSzjNYqjD4Y\/VkJevs7daGI\/AAAAAAAAPI8\/1qWX0dmkh9Y\/s320\/radar.jpg\" width=\"320\" \/\u003E\u003C\/a\u003E\u003C\/div\u003E\u003Cbr \/\u003E\u003C\/div\u003E"},"link":[{"rel":"replies","type":"application/atom+xml","href":"http:\/\/www.stuffaboutcode.com\/feeds\/7791850541259226909\/comments\/default","title":"Post Comments"},{"rel":"replies","type":"text/html","href":"http:\/\/www.stuffaboutcode.com\/2015\/11\/raspberry-pi-piaware-aircraft-radar.html#comment-form","title":"14 Comments"},{"rel":"edit","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/9007601562606157016\/posts\/default\/7791850541259226909"},{"rel":"self","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/9007601562606157016\/posts\/default\/7791850541259226909"},{"rel":"alternate","type":"text/html","href":"http:\/\/www.stuffaboutcode.com\/2015\/11\/raspberry-pi-piaware-aircraft-radar.html","title":"Raspberry Pi PiAware Aircraft Radar"}],"author":[{"name":{"$t":"Martin O'Hanlon"},"uri":{"$t":"https:\/\/plus.google.com\/117449463512606889592"},"email":{"$t":"noreply@blogger.com"},"gd$image":{"rel":"http://schemas.google.com/g/2005#thumbnail","width":"32","height":"32","src":"\/\/lh6.googleusercontent.com\/-mXyYt17u23k\/AAAAAAAAAAI\/AAAAAAAAME4\/UO0fIz3K4Xg\/s512-c\/photo.jpg"}}],"media$thumbnail":{"xmlns$media":"http://search.yahoo.com/mrss/","url":"http:\/\/4.bp.blogspot.com\/-SQP5BI9XdQQ\/VkMAl1JPV8I\/AAAAAAAAPJo\/KquMoTpAX2Q\/s72-c\/IMG_20151111_072831560.jpg","height":"72","width":"72"},"thr$total":{"$t":"14"}},{"id":{"$t":"tag:blogger.com,1999:blog-9007601562606157016.post-4124023970387902174"},"published":{"$t":"2015-10-04T09:34:00.002+01:00"},"updated":{"$t":"2015-10-16T10:50:16.073+01:00"},"category":[{"scheme":"http://www.blogger.com/atom/ns#","term":"gps"},{"scheme":"http://www.blogger.com/atom/ns#","term":"Python"},{"scheme":"http://www.blogger.com/atom/ns#","term":"raspberry pi"}],"title":{"type":"text","$t":"PiAware - Aircraft Overhead Indicator LED"},"content":{"type":"html","$t":"I've been using the \u003Ca href=\"http:\/\/flightaware.com\/adsb\/piaware\/\"\u003EPiAware\u003C\/a\u003E software to track aircraft flying near me and I liked the idea of turning an LED on when a plane was overhead (or at least near by!).\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: center;\"\u003E\u003Ca href=\"http:\/\/1.bp.blogspot.com\/-kTKcpQ00FWg\/Vgf1IlXizNI\/AAAAAAAAOf4\/BVBGC_IrCbQ\/s1600\/12039693_10205647410799461_8669976234796368359_n.jpg\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"\u003E\u003Cimg border=\"0\" height=\"179\" src=\"http:\/\/1.bp.blogspot.com\/-kTKcpQ00FWg\/Vgf1IlXizNI\/AAAAAAAAOf4\/BVBGC_IrCbQ\/s320\/12039693_10205647410799461_8669976234796368359_n.jpg\" width=\"320\" \/\u003E\u003C\/a\u003E\u003C\/div\u003E\u003Cbr \/\u003EThe first step was creating a way of \u003Ca href=\"http:\/\/www.stuffaboutcode.com\/2015\/09\/read-piaware-flight-data-with-python.html\"\u003Ereading data from PiAware using Python 3\u003C\/a\u003E, so I created a module called \u003Ca href=\"http:\/\/www.stuffaboutcode.com\/2015\/09\/read-piaware-flight-data-with-python.html\"\u003Eflightdata.py\u003C\/a\u003E.\u003Cbr \/\u003E\u003Cbr \/\u003EOnce I had the data it was simply a case of looping through each of the aircraft signals found, calculating the distance between my gps co-ordinates and the gps position of the aircraft. If the distance was less than 10km I turned the led on!\u003Cbr \/\u003E\u003Cbr \/\u003EI 'reused' the code to calculate the distance between 2 GPS co-ords from \u003Ca href=\"http:\/\/www.codecodex.com\/wiki\/Calculate_distance_between_two_points_on_a_globe#Python\"\u003Ecodecodex\u003C\/a\u003E.\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cb\u003ESetting up\u003C\/b\u003E\u003Cbr \/\u003E\u003Cbr \/\u003EYou'll need \u003Ca href=\"http:\/\/flightaware.com\/adsb\/piaware\"\u003EPiAware\u003C\/a\u003E\u0026nbsp;installed on your Raspberry Pi, up and running and tracking aircraft.\u003Cbr \/\u003E\u003Cbr \/\u003EYou'll need an LED, appropriate resistor, breadboard and a couple of Male\/Female jumper cables to connect it togther.\u003Cbr \/\u003E\u003Cbr \/\u003EThe LED is connected to ground and pin 17 with the resistor in between.\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: center;\"\u003E\u003Ca href=\"http:\/\/4.bp.blogspot.com\/-C98CCuzRyYk\/VhDjHLB6AUI\/AAAAAAAAOno\/bFz2-K07khA\/s1600\/flightlight_bb.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"\u003E\u003Cimg border=\"0\" height=\"246\" src=\"http:\/\/4.bp.blogspot.com\/-C98CCuzRyYk\/VhDjHLB6AUI\/AAAAAAAAOno\/bFz2-K07khA\/s320\/flightlight_bb.png\" width=\"320\" \/\u003E\u003C\/a\u003E\u003C\/div\u003E\u003Cb\u003EInstall\u003C\/b\u003E\u003Cbr \/\u003E\u003Cpre class=\"prettyprint\"\u003Ecd ~\u003Cbr \/\u003Egit clone https:\/\/github.com\/martinohanlon\/flightlight\u003C\/pre\u003E\u003Cb\u003EUsage\u003C\/b\u003E\u003Cbr \/\u003ELaunch the flightlight program passing the latitude (lat) and longitude (lon) of your PiAware station (use \u003Ca href=\"http:\/\/www.whatsmygps.com\/\"\u003Ewww.whatsmygps.com\u003C\/a\u003E to find your gps location) and the range that should be used to detect if an aircraft is overhead.\u003Cbr \/\u003E\u003Cpre class=\"prettyprint\"\u003Eusage: flightlight.py [-h] lat lon range\u003C\/pre\u003Ee.g. using GPS coords of 52.4539, -1.7481 (Birmingham, UK Airport) with a range of 10km\u003Cbr \/\u003E\u003Cpre class=\"prettyprint\"\u003Ecd ~\/flightlight\/flightlight\u003Cbr \/\u003Esudo python3 flightlight.py 52.4539 -1.7481 10\u003C\/pre\u003E\u003Cb\u003ECode\u003C\/b\u003E\u003Cbr \/\u003E\u003Cpre class=\"prettyprint\"\u003Eimport RPi.GPIO as GPIO\u003Cbr \/\u003Eimport argparse\u003Cbr \/\u003E\u003Cbr \/\u003Efrom flightdata import FlightData\u003Cbr \/\u003Efrom haversine import points2distance\u003Cbr \/\u003Efrom time import sleep\u003Cbr \/\u003E\u003Cbr \/\u003E#pin of the LED to light\u003Cbr \/\u003ELEDPIN = 17\u003Cbr \/\u003E\u003Cbr \/\u003Eclass LED():\u003Cbr \/\u003E    def __init__(self, ledPin):\u003Cbr \/\u003E        self.ledPin = ledPin\u003Cbr \/\u003E        GPIO.setup(ledPin, GPIO.OUT)\u003Cbr \/\u003E\u003Cbr \/\u003E    def on(self):\u003Cbr \/\u003E        GPIO.output(self.ledPin, True)\u003Cbr \/\u003E\u003Cbr \/\u003E    def off(self):\u003Cbr \/\u003E        GPIO.output(self.ledPin, False)\u003Cbr \/\u003E\u003Cbr \/\u003E#read command line options\u003Cbr \/\u003Eparser = argparse.ArgumentParser(description=\"PiAware Flight Light\")\u003Cbr \/\u003Eparser.add_argument(\"lat\", type=float, help=\"The latitude of the receiver\")\u003Cbr \/\u003Eparser.add_argument(\"lon\", type=float, help=\"The longitude of the receiver\")\u003Cbr \/\u003Eparser.add_argument(\"range\", type=int, help=\"The range in km for how close an aircraft should be to turn on the led\")\u003Cbr \/\u003Eargs = parser.parse_args()\u003Cbr \/\u003E\u003Cbr \/\u003E#get the flight data\u003Cbr \/\u003Emyflights = FlightData()\u003Cbr \/\u003E\u003Cbr \/\u003E#set GPIO mode\u003Cbr \/\u003EGPIO.setmode(GPIO.BCM)\u003Cbr \/\u003E\u003Cbr \/\u003Etry:\u003Cbr \/\u003E\u003Cbr \/\u003E    #create LED\u003Cbr \/\u003E    led = LED(LEDPIN)\u003Cbr \/\u003E\u003Cbr \/\u003E    #loop forever\u003Cbr \/\u003E    while True:\u003Cbr \/\u003E        \u003Cbr \/\u003E        plane_in_range = False\u003Cbr \/\u003E\u003Cbr \/\u003E        #loop through the aircraft and see if one is in range\u003Cbr \/\u003E        for aircraft in myflights.aircraft:\u003Cbr \/\u003E            if aircraft.validposition == 1:\u003Cbr \/\u003E                startpos = ((args.lat, 0, 0), (args.lon, 0, 0))\u003Cbr \/\u003E                endpos = ((aircraft.lat, 0, 0), (aircraft.lon, 0, 0))\u003Cbr \/\u003E                distance = points2distance(startpos, endpos)\u003Cbr \/\u003E                #debug\u003Cbr \/\u003E                #print(distance)\u003Cbr \/\u003E                if distance \u0026lt;= args.range:\u003Cbr \/\u003E                    plane_in_range = True\u003Cbr \/\u003E\u003Cbr \/\u003E        #turn the led on \/ off\u003Cbr \/\u003E        if plane_in_range:\u003Cbr \/\u003E            led.on()\u003Cbr \/\u003E            #print(\"on\")\u003Cbr \/\u003E        else:\u003Cbr \/\u003E            led.off()\u003Cbr \/\u003E            #print(\"off\")\u003Cbr \/\u003E            \u003Cbr \/\u003E        sleep(1)\u003Cbr \/\u003E\u003Cbr \/\u003E        #refresh the data\u003Cbr \/\u003E        myflights.refresh()\u003Cbr \/\u003E\u003Cbr \/\u003Efinally:\u003Cbr \/\u003E    #tidy up GPIO\u003Cbr \/\u003E    GPIO.cleanup()\u003Cbr \/\u003E\u003C\/pre\u003E\u003Cbr \/\u003E"},"link":[{"rel":"replies","type":"application/atom+xml","href":"http:\/\/www.stuffaboutcode.com\/feeds\/4124023970387902174\/comments\/default","title":"Post Comments"},{"rel":"replies","type":"text/html","href":"http:\/\/www.stuffaboutcode.com\/2015\/10\/piaware-aircraft-overhead-led.html#comment-form","title":"6 Comments"},{"rel":"edit","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/9007601562606157016\/posts\/default\/4124023970387902174"},{"rel":"self","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/9007601562606157016\/posts\/default\/4124023970387902174"},{"rel":"alternate","type":"text/html","href":"http:\/\/www.stuffaboutcode.com\/2015\/10\/piaware-aircraft-overhead-led.html","title":"PiAware - Aircraft Overhead Indicator LED"}],"author":[{"name":{"$t":"Martin O'Hanlon"},"uri":{"$t":"https:\/\/plus.google.com\/117449463512606889592"},"email":{"$t":"noreply@blogger.com"},"gd$image":{"rel":"http://schemas.google.com/g/2005#thumbnail","width":"32","height":"32","src":"\/\/lh6.googleusercontent.com\/-mXyYt17u23k\/AAAAAAAAAAI\/AAAAAAAAME4\/UO0fIz3K4Xg\/s512-c\/photo.jpg"}}],"media$thumbnail":{"xmlns$media":"http://search.yahoo.com/mrss/","url":"http:\/\/1.bp.blogspot.com\/-kTKcpQ00FWg\/Vgf1IlXizNI\/AAAAAAAAOf4\/BVBGC_IrCbQ\/s72-c\/12039693_10205647410799461_8669976234796368359_n.jpg","height":"72","width":"72"},"thr$total":{"$t":"6"}},{"id":{"$t":"tag:blogger.com,1999:blog-9007601562606157016.post-7682667565476226114"},"published":{"$t":"2015-09-27T14:59:00.000+01:00"},"updated":{"$t":"2015-09-27T15:02:37.397+01:00"},"category":[{"scheme":"http://www.blogger.com/atom/ns#","term":"Python"},{"scheme":"http://www.blogger.com/atom/ns#","term":"raspberry pi"}],"title":{"type":"text","$t":"Read PiAware Flight Data with Python"},"content":{"type":"html","$t":"I have been using \u003Ca href=\"http:\/\/flightaware.com\/adsb\/piaware\/\"\u003EPiaware\u003C\/a\u003E for a couple of weeks and I like the idea of being able to read the signals from aircraft just using simple equipment.\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: center;\"\u003E\u003Ca href=\"http:\/\/2.bp.blogspot.com\/-kTKcpQ00FWg\/Vgf1IlXizNI\/AAAAAAAAOf0\/rbIR-VjKENo\/s1600\/12039693_10205647410799461_8669976234796368359_n.jpg\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"\u003E\u003Cimg border=\"0\" height=\"179\" src=\"http:\/\/2.bp.blogspot.com\/-kTKcpQ00FWg\/Vgf1IlXizNI\/AAAAAAAAOf0\/rbIR-VjKENo\/s320\/12039693_10205647410799461_8669976234796368359_n.jpg\" width=\"320\" \/\u003E\u003C\/a\u003E\u003C\/div\u003E\u003Cbr \/\u003EI wanted to use this information to do interesting 'stuff', I'm imagining home built radars and led's which flash, but before I could do anything cool I needed to find a way of getting to this data using Python.\u003Cbr \/\u003E\u003Cbr \/\u003EIts possible to read data directly from the \u003Ca href=\"https:\/\/github.com\/antirez\/dump1090\"\u003Edump1090\u003C\/a\u003E\u0026nbsp;program using tcp sockets, but the data is a raw stream and it seemed like too much work (I'm all for simplicity)!\u003Cbr \/\u003E\u003Cbr \/\u003EThe Piaware install also comes with a web front end so you can see the data you are receiving [\u003Ca href=\"http:\/\/localhost:8080\/\"\u003Ehttp:\/\/localhost:8080\u003C\/a\u003E], you can also get to the json data [\u003Ca href=\"http:\/\/localhost:8080\/data.json\"\u003Ehttp:\/\/localhost:8080\/data.json\u003C\/a\u003E] which is feeding this web page and\u0026nbsp;this looked like a much easier way of getting the data out.\u003Cbr \/\u003E\u003Cbr \/\u003EI create a small Python 3 class called \u003Ca href=\"https:\/\/github.com\/martinohanlon\/flightdata\/blob\/master\/flightdata.py#L7\"\u003EFlightData\u003C\/a\u003E [link to github flightdata.py] which reads the data from the web page and parses it into an object.\u003Cbr \/\u003E\u003Cbr \/\u003EYou can install it by cloning the \u003Ca href=\"https:\/\/github.com\/martinohanlon\/flightdata\"\u003Eflightdata github repository\u003C\/a\u003E\u0026nbsp;and copying the flightdata.py file to your project (if there is sufficient interest I'll make it into an 'installable' module):\u003Cbr \/\u003E\u003Cpre class=\"prettyprint\"\u003Egit clone https:\/\/github.com\/martinohanlon\/flightdata\u003Cbr \/\u003Ecp .\/flightdata\/fightdata.py .\/myprojectpath\u003C\/pre\u003EYou can test it by running the flightdata.py program file:\u003Cbr \/\u003E\u003Cpre class=\"prettyprint\"\u003Epython3 flightdata.py\u003C\/pre\u003EBelow is a sample program which shows how to use it:\u003Cbr \/\u003E\u003Cpre class=\"prettyprint\"\u003Efrom flightdata import FlightData\u003Cbr \/\u003Efrom time import sleep\u003Cbr \/\u003E\u003Cbr \/\u003Emyflights = FlightData()\u003Cbr \/\u003Ewhile True:\u003Cbr \/\u003E    #loop through each aircraft found\u003Cbr \/\u003E    for aircraft in myflights.aircraft:\u003Cbr \/\u003E   \u003Cbr \/\u003E        #read the aircraft data\u003Cbr \/\u003E        print(aircraft.hex)\u003Cbr \/\u003E        print(aircraft.squawk)\u003Cbr \/\u003E        print(aircraft.flight)\u003Cbr \/\u003E        print(aircraft.lat)\u003Cbr \/\u003E        print(aircraft.lon)\u003Cbr \/\u003E        print(aircraft.validposition)\u003Cbr \/\u003E        print(aircraft.altitude)\u003Cbr \/\u003E        print(aircraft.vert_rate)\u003Cbr \/\u003E        print(aircraft.track)\u003Cbr \/\u003E        print(aircraft.validtrack)\u003Cbr \/\u003E        print(aircraft.speed)\u003Cbr \/\u003E        print(aircraft.messages)\u003Cbr \/\u003E        print(aircraft.seen)\u003Cbr \/\u003E        print(aircraft.mlat)\u003Cbr \/\u003E   \u003Cbr \/\u003E   sleep(1)\u003Cbr \/\u003E\u003Cbr \/\u003E   #refresh the flight data\u003Cbr \/\u003E   myflights.refresh()\u003Cbr \/\u003E\u003C\/pre\u003E\u003Cbr \/\u003E"},"link":[{"rel":"replies","type":"application/atom+xml","href":"http:\/\/www.stuffaboutcode.com\/feeds\/7682667565476226114\/comments\/default","title":"Post Comments"},{"rel":"replies","type":"text/html","href":"http:\/\/www.stuffaboutcode.com\/2015\/09\/read-piaware-flight-data-with-python.html#comment-form","title":"11 Comments"},{"rel":"edit","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/9007601562606157016\/posts\/default\/7682667565476226114"},{"rel":"self","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/9007601562606157016\/posts\/default\/7682667565476226114"},{"rel":"alternate","type":"text/html","href":"http:\/\/www.stuffaboutcode.com\/2015\/09\/read-piaware-flight-data-with-python.html","title":"Read PiAware Flight Data with Python"}],"author":[{"name":{"$t":"Martin O'Hanlon"},"uri":{"$t":"https:\/\/plus.google.com\/117449463512606889592"},"email":{"$t":"noreply@blogger.com"},"gd$image":{"rel":"http://schemas.google.com/g/2005#thumbnail","width":"32","height":"32","src":"\/\/lh6.googleusercontent.com\/-mXyYt17u23k\/AAAAAAAAAAI\/AAAAAAAAME4\/UO0fIz3K4Xg\/s512-c\/photo.jpg"}}],"media$thumbnail":{"xmlns$media":"http://search.yahoo.com/mrss/","url":"http:\/\/2.bp.blogspot.com\/-kTKcpQ00FWg\/Vgf1IlXizNI\/AAAAAAAAOf0\/rbIR-VjKENo\/s72-c\/12039693_10205647410799461_8669976234796368359_n.jpg","height":"72","width":"72"},"thr$total":{"$t":"11"}},{"id":{"$t":"tag:blogger.com,1999:blog-9007601562606157016.post-3577042240961446396"},"published":{"$t":"2015-09-22T20:22:00.000+01:00"},"updated":{"$t":"2015-09-22T20:23:23.123+01:00"},"category":[{"scheme":"http://www.blogger.com/atom/ns#","term":"games"},{"scheme":"http://www.blogger.com/atom/ns#","term":"minecraft"},{"scheme":"http://www.blogger.com/atom/ns#","term":"Python"}],"title":{"type":"text","$t":"Minecraft Game Tutorial - LavaTrap - Pycon 2015"},"content":{"type":"html","$t":"At Pycon UK 2015, I did a couple of workshop at its Education Track Kids day.\u003Cbr \/\u003E\u003Cbr \/\u003EIt was great fun and to make sure there was something fresh for the children to get their teeth into I came up with a new exercise called \"LavaTrap\" so I thought I would share it!\u003Cbr \/\u003E\u003Cbr \/\u003EYou can \u003Ca href=\"https:\/\/drive.google.com\/open?id=19YVesJJFS6cg4Ndep7F-TS02CpS0qpN1hlSlv6mgISQ\"\u003Edownload the worksheet\u003C\/a\u003E which is great printed as an A5 booklet on a single piece of A4 or you can follow the exercise below.\u003Cbr \/\u003E\u003Ch1 dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 10pt;\"\u003E\u003Cspan style=\"background-color: transparent; color: #990000; font-family: 'Trebuchet MS'; font-size: 18.666666666666664px; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\"\u003EThe Lava Trap\u003C\/span\u003E\u003C\/h1\u003E\u003Cdiv dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"\u003E\u003Cspan style=\"background-color: transparent; color: black; font-family: Arial; font-size: 14.666666666666666px; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\"\u003EUsing Python and Minecraft: Pi edition we can change the game to do amazing things.\u003C\/span\u003E\u003C\/div\u003E\u003Cb id=\"docs-internal-guid-12a0872f-f679-9cae-059c-31a4dd2e03c6\" style=\"font-weight: normal;\"\u003E\u003Cbr \/\u003E\u003C\/b\u003E\u003Cbr \/\u003E\u003Cdiv dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"\u003E\u003Cspan style=\"background-color: transparent; color: black; font-family: Arial; font-size: 14.666666666666666px; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\"\u003EYou are going to create mini game - a Lava Pit will instantly appear and Steve will be put at the centre of it, soon through the block he is standing on will disappear so he will have to move, but hang on all the blocks keep disappearing! \u003C\/span\u003E\u003C\/div\u003E\u003Cb style=\"font-weight: normal;\"\u003E\u003Cbr \/\u003E\u003C\/b\u003E\u003Cbr \/\u003E\u003Cdiv dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt; text-align: center;\"\u003E\u003Cspan style=\"background-color: transparent; color: black; font-family: Arial; font-size: 14.666666666666666px; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\"\u003E\u003Cimg alt=\"2015-09-13_22.22.00.png\" height=\"328px;\" src=\"https:\/\/lh3.googleusercontent.com\/P3h-MGzOpC2i8nq5LqeTBDReHobckYkyHznAZ9iWSWXHS3TYeoHZ7cDrPkbP6CzaapWoOtsG3m7mwqkQvnpehU9G0yZby5klfYZwOdbpstFgtLMRl5kc3VqmHdPlpxYBRjZH261Q\" style=\"-webkit-transform: rotate(0.00rad); border: none; transform: rotate(0.00rad);\" width=\"581px;\" \/\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Ch1 dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 10pt;\"\u003E\u003Cspan style=\"background-color: transparent; color: #990000; font-family: 'Trebuchet MS'; font-size: 18.666666666666664px; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\"\u003EWelcome\u003C\/span\u003E\u003C\/h1\u003E\u003Cdiv dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"\u003E\u003Cspan style=\"background-color: transparent; color: black; font-family: Arial; font-size: 14.666666666666666px; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\"\u003EThe first task is to start your program and get “Welcome to the Lava Trap” to appear on the screen:\u003C\/span\u003E\u003C\/div\u003E\u003Col style=\"margin-bottom: 0pt; margin-top: 0pt;\"\u003E\u003Cli dir=\"ltr\" style=\"background-color: transparent; color: black; font-family: Arial; font-size: 14.666666666666666px; font-style: normal; font-variant: normal; font-weight: 400; list-style-type: decimal; text-decoration: none; vertical-align: baseline;\"\u003E\u003Cdiv dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"\u003E\u003Cspan style=\"background-color: transparent; color: black; font-family: Arial; font-size: 14.666666666666666px; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\"\u003EPress ESC to go back to the Minecraft menu but leave the game playing.\u003C\/span\u003E\u003C\/div\u003E\u003C\/li\u003E\u003Cli dir=\"ltr\" style=\"background-color: transparent; color: black; font-family: Arial; font-size: 14.666666666666666px; font-style: normal; font-variant: normal; font-weight: 400; list-style-type: decimal; text-decoration: none; vertical-align: baseline;\"\u003E\u003Cdiv dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"\u003E\u003Cspan style=\"background-color: transparent; color: black; font-family: Arial; font-size: 14.666666666666666px; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\"\u003EOpen Python IDLE by clicking Menu \u0026gt; Programming \u0026gt; Python 3.\u003C\/span\u003E\u003C\/div\u003E\u003C\/li\u003E\u003Cli dir=\"ltr\" style=\"background-color: transparent; color: black; font-family: Arial; font-size: 14.666666666666666px; font-style: normal; font-variant: normal; font-weight: 400; list-style-type: decimal; text-decoration: none; vertical-align: baseline;\"\u003E\u003Cdiv dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"\u003E\u003Cspan style=\"background-color: transparent; color: black; font-family: Arial; font-size: 14.666666666666666px; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\"\u003EUse File \u0026gt; New Window to create a new program and save it as ‘myprogram.py’.\u003C\/span\u003E\u003C\/div\u003E\u003C\/li\u003E\u003Cli dir=\"ltr\" style=\"background-color: transparent; color: black; font-family: Arial; font-size: 14.666666666666666px; font-style: normal; font-variant: normal; font-weight: 400; list-style-type: decimal; text-decoration: none; vertical-align: baseline;\"\u003E\u003Cdiv dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"\u003E\u003Cspan style=\"background-color: transparent; color: black; font-family: Arial; font-size: 14.666666666666666px; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\"\u003EType the following code into the program to import the modules you will need.\u003C\/span\u003E\u003C\/div\u003E\u003C\/li\u003E\u003C\/ol\u003E\u003Cdiv dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 3pt; margin-left: 36pt; margin-top: 0pt;\"\u003E\u003Cspan style=\"background-color: transparent; color: #0b5394; font-family: 'Courier New'; font-size: 14.666666666666666px; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\"\u003Efrom mcpi.minecraft import Minecraft\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 3pt; margin-left: 36pt; margin-top: 0pt;\"\u003E\u003Cspan style=\"background-color: transparent; color: #0b5394; font-family: 'Courier New'; font-size: 14.666666666666666px; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\"\u003Efrom mcpi import block\u003C\/span\u003E\u003C\/div\u003E\u003Ch3 dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 3pt; margin-left: 36pt; margin-top: 0pt;\"\u003E\u003Cspan style=\"background-color: transparent; color: #0b5394; font-family: 'Courier New'; font-size: 14.666666666666666px; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\"\u003Efrom time import sleep\u003C\/span\u003E\u003C\/h3\u003E\u003Col start=\"5\" style=\"margin-bottom: 0pt; margin-top: 0pt;\"\u003E\u003Cli dir=\"ltr\" style=\"background-color: transparent; color: black; font-family: Arial; font-size: 14.666666666666666px; font-style: normal; font-variant: normal; font-weight: 400; list-style-type: decimal; text-decoration: none; vertical-align: baseline;\"\u003E\u003Cdiv dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"\u003E\u003Cspan style=\"background-color: transparent; color: black; font-family: Arial; font-size: 14.666666666666666px; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\"\u003ECreate a connection to Minecraft using the code.\u003C\/span\u003E\u003C\/div\u003E\u003C\/li\u003E\u003C\/ol\u003E\u003Ch3 dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 3pt; margin-left: 36pt; margin-top: 0pt;\"\u003E\u003Cspan style=\"background-color: transparent; color: #0b5394; font-family: 'Courier New'; font-size: 14.666666666666666px; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\"\u003Emc = Minecraft.create()\u003C\/span\u003E\u003C\/h3\u003E\u003Col start=\"6\" style=\"margin-bottom: 0pt; margin-top: 0pt;\"\u003E\u003Cli dir=\"ltr\" style=\"background-color: transparent; color: black; font-family: Arial; font-size: 14.666666666666666px; font-style: normal; font-variant: normal; font-weight: 400; list-style-type: decimal; text-decoration: none; vertical-align: baseline;\"\u003E\u003Cdiv dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"\u003E\u003Cspan style=\"background-color: transparent; color: black; font-family: Arial; font-size: 14.666666666666666px; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\"\u003EPost a message to the chat window.\u003C\/span\u003E\u003C\/div\u003E\u003C\/li\u003E\u003C\/ol\u003E\u003Ch3 dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 3pt; margin-left: 36pt; margin-top: 0pt;\"\u003E\u003Cspan style=\"background-color: transparent; color: #0b5394; font-family: 'Courier New'; font-size: 14.666666666666666px; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\"\u003Emc.postToChat(\"Welcome to the Lava Trap\")\u003C\/span\u003E\u003C\/h3\u003E\u003Col start=\"7\" style=\"margin-bottom: 0pt; margin-top: 0pt;\"\u003E\u003Cli dir=\"ltr\" style=\"background-color: transparent; color: black; font-family: Arial; font-size: 14.666666666666666px; font-style: normal; font-variant: normal; font-weight: 400; list-style-type: decimal; text-decoration: none; vertical-align: baseline;\"\u003E\u003Cdiv dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"\u003E\u003Cspan style=\"background-color: transparent; color: black; font-family: Arial; font-size: 14.666666666666666px; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\"\u003ERun your program by clicking Run \u0026gt; Run Module.\u003C\/span\u003E\u003C\/div\u003E\u003C\/li\u003E\u003C\/ol\u003E\u003Cb style=\"font-weight: normal;\"\u003E\u003Cbr \/\u003E\u003C\/b\u003E\u003Cbr \/\u003E\u003Cdiv dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"\u003E\u003Cspan style=\"background-color: transparent; color: black; font-family: Arial; font-size: 14.666666666666666px; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\"\u003EYou should see your message appear in the Minecraft chat window.\u003C\/span\u003E\u003C\/div\u003E\u003Ch2 dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 10pt;\"\u003E\u003Cspan style=\"background-color: transparent; color: #cc0000; font-family: 'Trebuchet MS'; font-size: 16px; font-style: normal; font-variant: normal; font-weight: 700; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\"\u003ETips\u003C\/span\u003E\u003C\/h2\u003E\u003Cdiv dir=\"ltr\" style=\"margin-left: 0pt;\"\u003E\u003Ctable style=\"border-collapse: collapse; border: none; width: 680px;\"\u003E\u003Ccolgroup\u003E\u003Ccol width=\"*\"\u003E\u003C\/col\u003E\u003C\/colgroup\u003E\u003Ctbody\u003E\u003Ctr style=\"height: 0px;\"\u003E\u003Ctd style=\"border-bottom: solid #000000 1px; border-left: solid #000000 1px; border-right: solid #000000 1px; border-top: solid #000000 1px; padding: 7px 7px 7px 7px; vertical-align: top;\"\u003E\u003Cul style=\"margin-bottom: 0pt; margin-top: 0pt;\"\u003E\u003Cli dir=\"ltr\" style=\"background-color: transparent; color: black; font-family: Arial; font-size: 14.666666666666666px; font-style: normal; font-variant: normal; font-weight: 400; list-style-type: disc; text-decoration: none; vertical-align: baseline;\"\u003E\u003Cdiv dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"\u003E\u003Cspan style=\"background-color: transparent; color: black; font-family: Arial; font-size: 14.666666666666666px; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\"\u003EAn errors will be displayed in the Python Shell in \u003C\/span\u003E\u003Cspan style=\"background-color: transparent; color: red; font-family: Arial; font-size: 14.666666666666666px; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\"\u003Ered\u003C\/span\u003E\u003Cspan style=\"background-color: transparent; color: black; font-family: Arial; font-size: 14.666666666666666px; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\"\u003E.\u003C\/span\u003E\u003C\/div\u003E\u003C\/li\u003E\u003Cli dir=\"ltr\" style=\"background-color: transparent; color: black; font-family: Arial; font-size: 14.666666666666666px; font-style: normal; font-variant: normal; font-weight: 400; list-style-type: disc; text-decoration: none; vertical-align: baseline;\"\u003E\u003Cdiv dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"\u003E\u003Cspan style=\"background-color: transparent; color: black; font-family: Arial; font-size: 14.666666666666666px; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\"\u003EIf you get an error check your code carefully.\u003C\/span\u003E\u003C\/div\u003E\u003C\/li\u003E\u003Cli dir=\"ltr\" style=\"background-color: transparent; color: black; font-family: Arial; font-size: 14.666666666666666px; font-style: normal; font-variant: normal; font-weight: 400; list-style-type: disc; text-decoration: none; vertical-align: baseline;\"\u003E\u003Cdiv dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"\u003E\u003Cspan style=\"background-color: transparent; color: black; font-family: Arial; font-size: 14.666666666666666px; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\"\u003ECapital letters are important \u003C\/span\u003E\u003Cspan style=\"background-color: transparent; color: black; font-family: 'Courier New'; font-size: 14.666666666666666px; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\"\u003EMinecraft\u003C\/span\u003E\u003Cspan style=\"background-color: transparent; color: black; font-family: Arial; font-size: 14.666666666666666px; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\"\u003E is different to \u003C\/span\u003E\u003Cspan style=\"background-color: transparent; color: black; font-family: 'Courier New'; font-size: 14.666666666666666px; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\"\u003Eminecraft\u003C\/span\u003E\u003Cspan style=\"background-color: transparent; color: black; font-family: Arial; font-size: 14.666666666666666px; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\"\u003E.\u003C\/span\u003E\u003C\/div\u003E\u003C\/li\u003E\u003C\/ul\u003E\u003C\/td\u003E\u003C\/tr\u003E\u003C\/tbody\u003E\u003C\/table\u003E\u003C\/div\u003E\u003Ch1 dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 10pt;\"\u003E\u003Cspan style=\"background-color: transparent; color: #990000; font-family: 'Trebuchet MS'; font-size: 18.666666666666664px; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\"\u003ELava\u003C\/span\u003E\u003C\/h1\u003E\u003Cdiv dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"\u003E\u003Cspan style=\"background-color: transparent; color: black; font-family: Arial; font-size: 14.666666666666666px; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\"\u003ENext you will use the api to create the pit where the game will be played - when your program runs it will instantly appear under Steve before the game starts.\u003C\/span\u003E\u003C\/div\u003E\u003Cb style=\"font-weight: normal;\"\u003E\u003Cbr \/\u003E\u003C\/b\u003E\u003Cbr \/\u003E\u003Cdiv dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"\u003E\u003Cspan style=\"background-color: transparent; color: black; font-family: Arial; font-size: 14.666666666666666px; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\"\u003EFirst update your program so it creates a single block of lava under Steve, by adding the following code:\u003C\/span\u003E\u003C\/div\u003E\u003Col style=\"margin-bottom: 0pt; margin-top: 0pt;\"\u003E\u003Cli dir=\"ltr\" style=\"background-color: transparent; color: black; font-family: Arial; font-size: 14.666666666666666px; font-style: normal; font-variant: normal; font-weight: 400; list-style-type: decimal; text-decoration: none; vertical-align: baseline;\"\u003E\u003Cdiv dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"\u003E\u003Cspan style=\"background-color: transparent; color: black; font-family: Arial; font-size: 14.666666666666666px; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\"\u003EPut a 3 second delay into your program so that you can see what going on.\u003C\/span\u003E\u003C\/div\u003E\u003C\/li\u003E\u003C\/ol\u003E\u003Ch3 dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 3pt; margin-left: 36pt; margin-top: 0pt;\"\u003E\u003Cspan style=\"background-color: transparent; color: #0b5394; font-family: 'Courier New'; font-size: 14.666666666666666px; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\"\u003Esleep(3)\u003C\/span\u003E\u003C\/h3\u003E\u003Col start=\"2\" style=\"margin-bottom: 0pt; margin-top: 0pt;\"\u003E\u003Cli dir=\"ltr\" style=\"background-color: transparent; color: black; font-family: Arial; font-size: 14.666666666666666px; font-style: normal; font-variant: normal; font-weight: 400; list-style-type: decimal; text-decoration: none; vertical-align: baseline;\"\u003E\u003Cdiv dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"\u003E\u003Cspan style=\"background-color: transparent; color: black; font-family: Arial; font-size: 14.666666666666666px; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\"\u003EFind out where Steve is in the world.\u003C\/span\u003E\u003C\/div\u003E\u003C\/li\u003E\u003C\/ol\u003E\u003Ch3 dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 3pt; margin-left: 36pt; margin-top: 0pt;\"\u003E\u003Cspan style=\"background-color: transparent; color: #0b5394; font-family: 'Courier New'; font-size: 14.666666666666666px; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\"\u003Epos = mc.player.getTilePos()\u003C\/span\u003E\u003C\/h3\u003E\u003Col start=\"3\" style=\"margin-bottom: 0pt; margin-top: 0pt;\"\u003E\u003Cli dir=\"ltr\" style=\"background-color: transparent; color: black; font-family: Arial; font-size: 14.666666666666666px; font-style: normal; font-variant: normal; font-weight: 400; list-style-type: decimal; text-decoration: none; vertical-align: baseline;\"\u003E\u003Cdiv dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"\u003E\u003Cspan style=\"background-color: transparent; color: black; font-family: Arial; font-size: 14.666666666666666px; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\"\u003ECreate a block of lava under Steve.\u003C\/span\u003E\u003C\/div\u003E\u003C\/li\u003E\u003C\/ol\u003E\u003Ch3 dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 3pt; margin-left: 36pt; margin-top: 0pt;\"\u003E\u003Cspan style=\"background-color: transparent; color: #0b5394; font-family: 'Courier New'; font-size: 14.666666666666666px; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\"\u003Emc.setBlock(pos.x, pos.y - 1, pos.z, block.LAVA.id)\u003C\/span\u003E\u003C\/h3\u003E\u003Col start=\"4\" style=\"margin-bottom: 0pt; margin-top: 0pt;\"\u003E\u003Cli dir=\"ltr\" style=\"background-color: transparent; color: black; font-family: Arial; font-size: 14.666666666666666px; font-style: normal; font-variant: normal; font-weight: 400; list-style-type: decimal; text-decoration: none; vertical-align: baseline;\"\u003E\u003Cdiv dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"\u003E\u003Cspan style=\"background-color: transparent; color: black; font-family: Arial; font-size: 14.666666666666666px; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\"\u003ERun your program by clicking Run \u0026gt; Run Module or by pressing F5.\u003C\/span\u003E\u003C\/div\u003E\u003C\/li\u003E\u003C\/ol\u003E\u003Cb style=\"font-weight: normal;\"\u003E\u003Cbr \/\u003E\u003C\/b\u003E\u003Cbr \/\u003E\u003Cdiv dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"\u003E\u003Cspan style=\"background-color: transparent; color: black; font-family: Arial; font-size: 14.666666666666666px; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\"\u003EYour program will wait 3 seconds and then a block of Lava will appear under Steve - he’s going fall in and burn! \u003C\/span\u003E\u003C\/div\u003E\u003Ch2 dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 10pt;\"\u003E\u003Cspan style=\"background-color: transparent; color: #cc0000; font-family: 'Trebuchet MS'; font-size: 16px; font-style: normal; font-variant: normal; font-weight: 700; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\"\u003ETips\u003C\/span\u003E\u003C\/h2\u003E\u003Cdiv dir=\"ltr\" style=\"margin-left: 0pt;\"\u003E\u003Ctable style=\"border-collapse: collapse; border: none; width: 680px;\"\u003E\u003Ccolgroup\u003E\u003Ccol width=\"*\"\u003E\u003C\/col\u003E\u003C\/colgroup\u003E\u003Ctbody\u003E\u003Ctr style=\"height: 0px;\"\u003E\u003Ctd style=\"border-bottom: solid #000000 1px; border-left: solid #000000 1px; border-right: solid #000000 1px; border-top: solid #000000 1px; padding: 7px 7px 7px 7px; vertical-align: top;\"\u003E\u003Cul style=\"margin-bottom: 0pt; margin-top: 0pt;\"\u003E\u003Cli dir=\"ltr\" style=\"background-color: transparent; color: black; font-family: Arial; font-size: 14.666666666666666px; font-style: normal; font-variant: normal; font-weight: 400; list-style-type: disc; text-decoration: none; vertical-align: baseline;\"\u003E\u003Cdiv dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"\u003E\u003Cspan style=\"background-color: transparent; color: black; font-family: Arial; font-size: 14.666666666666666px; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\"\u003EWalk somewhere different and run the program again - another Lava block will appear. \u003C\/span\u003E\u003C\/div\u003E\u003C\/li\u003E\u003Cli dir=\"ltr\" style=\"background-color: transparent; color: black; font-family: Arial; font-size: 14.666666666666666px; font-style: normal; font-variant: normal; font-weight: 400; list-style-type: disc; text-decoration: none; vertical-align: baseline;\"\u003E\u003Cdiv dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"\u003E\u003Cspan style=\"background-color: transparent; color: black; font-family: Arial; font-size: 14.666666666666666px; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\"\u003ETry changing the code to use DIAMOND_BLOCK rather than LAVA and see what happens.\u003C\/span\u003E\u003C\/div\u003E\u003C\/li\u003E\u003C\/ul\u003E\u003C\/td\u003E\u003C\/tr\u003E\u003C\/tbody\u003E\u003C\/table\u003E\u003C\/div\u003E\u003Cdiv dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"\u003E\u003Cspan style=\"background-color: transparent; color: black; font-family: Arial; font-size: 14.666666666666666px; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\"\u003E \u003C\/span\u003E\u003C\/div\u003E\u003Cdiv dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"\u003E\u003Cspan style=\"background-color: transparent; color: black; font-family: Arial; font-size: 14.666666666666666px; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\"\u003EYou need to create a lot more lava in order for the game to be a lot more fun - next you will program a large slab of STONE with LAVA on the top:\u003C\/span\u003E\u003C\/div\u003E\u003Col style=\"margin-bottom: 0pt; margin-top: 0pt;\"\u003E\u003Cli dir=\"ltr\" style=\"background-color: transparent; color: black; font-family: Arial; font-size: 14.666666666666666px; font-style: normal; font-variant: normal; font-weight: 400; list-style-type: decimal; text-decoration: none; vertical-align: baseline;\"\u003E\u003Cdiv dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"\u003E\u003Cspan style=\"background-color: transparent; color: black; font-family: Arial; font-size: 14.666666666666666px; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\"\u003EUse setBlocks() to create an area of STONE 2 blocks below Steve for the LAVA to sit on.\u003C\/span\u003E\u003C\/div\u003E\u003C\/li\u003E\u003C\/ol\u003E\u003Ch3 dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 3pt; margin-left: 36pt; margin-top: 0pt;\"\u003E\u003Cspan style=\"background-color: transparent; color: #0b5394; font-family: 'Courier New'; font-size: 14.666666666666666px; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\"\u003Emc.setBlocks(pos.x - 5, pos.y - 2, pos.z - 5,\u003C\/span\u003E\u003C\/h3\u003E\u003Ch3 dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 3pt; margin-left: 36pt; margin-top: 0pt;\"\u003E\u003Cspan style=\"background-color: transparent; color: #0b5394; font-family: 'Courier New'; font-size: 14.666666666666666px; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\"\u003E \u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;pos.x + 5, pos.y - 2, pos.z + 5,\u003C\/span\u003E\u003C\/h3\u003E\u003Ch3 dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 3pt; margin-left: 36pt; margin-top: 0pt;\"\u003E\u003Cspan style=\"background-color: transparent; color: #0b5394; font-family: 'Courier New'; font-size: 14.666666666666666px; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\"\u003E \u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;block.STONE.id)\u003C\/span\u003E\u003C\/h3\u003E\u003Col start=\"2\" style=\"margin-bottom: 0pt; margin-top: 0pt;\"\u003E\u003Cli dir=\"ltr\" style=\"background-color: transparent; color: black; font-family: Arial; font-size: 14.666666666666666px; font-style: normal; font-variant: normal; font-weight: 400; list-style-type: decimal; text-decoration: none; vertical-align: baseline;\"\u003E\u003Cdiv dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"\u003E\u003Cspan style=\"background-color: transparent; color: black; font-family: Arial; font-size: 14.666666666666666px; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\"\u003EThen create the LAVA under Steve.\u003C\/span\u003E\u003C\/div\u003E\u003C\/li\u003E\u003C\/ol\u003E\u003Ch3 dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 3pt; margin-left: 36pt; margin-top: 0pt;\"\u003E\u003Cspan style=\"background-color: transparent; color: #0b5394; font-family: 'Courier New'; font-size: 14.666666666666666px; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\"\u003Emc.setBlocks(pos.x - 5, pos.y - 1, pos.z - 5,\u003C\/span\u003E\u003C\/h3\u003E\u003Ch3 dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 3pt; margin-left: 36pt; margin-top: 0pt;\"\u003E\u003Cspan style=\"background-color: transparent; color: #0b5394; font-family: 'Courier New'; font-size: 14.666666666666666px; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\"\u003E \u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;pos.x + 5, pos.y - 1, pos.z + 5,\u003C\/span\u003E\u003C\/h3\u003E\u003Ch3 dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 3pt; margin-left: 36pt; margin-top: 0pt;\"\u003E\u003Cspan style=\"background-color: transparent; color: #0b5394; font-family: 'Courier New'; font-size: 14.666666666666666px; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\"\u003E \u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;block.LAVA.id)\u003C\/span\u003E\u003C\/h3\u003E\u003Col start=\"3\" style=\"margin-bottom: 0pt; margin-top: 0pt;\"\u003E\u003Cli dir=\"ltr\" style=\"background-color: transparent; color: black; font-family: Arial; font-size: 14.666666666666666px; font-style: normal; font-variant: normal; font-weight: 400; list-style-type: decimal; text-decoration: none; vertical-align: baseline;\"\u003E\u003Cdiv dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"\u003E\u003Cspan style=\"background-color: transparent; color: black; font-family: Arial; font-size: 14.666666666666666px; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\"\u003ERun your program to see the Lava ‘pit’.\u003C\/span\u003E\u003C\/div\u003E\u003C\/li\u003E\u003C\/ol\u003E\u003Cb style=\"font-weight: normal;\"\u003E\u003Cbr \/\u003E\u003C\/b\u003E\u003Cbr \/\u003E\u003Cdiv dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"\u003E\u003Cspan style=\"background-color: transparent; color: black; font-family: Arial; font-size: 14.666666666666666px; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\"\u003EMake a DIAMOND_BLOCK platform in the middle for Steve to stand on:\u003C\/span\u003E\u003C\/div\u003E\u003Col style=\"margin-bottom: 0pt; margin-top: 0pt;\"\u003E\u003Cli dir=\"ltr\" style=\"background-color: transparent; color: black; font-family: Arial; font-size: 14.666666666666666px; font-style: normal; font-variant: normal; font-weight: 400; list-style-type: decimal; text-decoration: none; vertical-align: baseline;\"\u003E\u003Cdiv dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"\u003E\u003Cspan style=\"background-color: transparent; color: black; font-family: Arial; font-size: 14.666666666666666px; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\"\u003ECreate the diamond block.\u003C\/span\u003E\u003C\/div\u003E\u003C\/li\u003E\u003C\/ol\u003E\u003Ch3 dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 3pt; margin-left: 36pt; margin-top: 0pt;\"\u003E\u003Cspan style=\"background-color: transparent; color: #0b5394; font-family: 'Courier New'; font-size: 14.666666666666666px; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\"\u003Emc.setBlock(pos.x, pos.y - 1, pos.z, block.DIAMOND_BLOCK.id)\u003C\/span\u003E\u003C\/h3\u003E\u003Col start=\"2\" style=\"margin-bottom: 0pt; margin-top: 0pt;\"\u003E\u003Cli dir=\"ltr\" style=\"background-color: transparent; color: black; font-family: Arial; font-size: 14.666666666666666px; font-style: normal; font-variant: normal; font-weight: 400; list-style-type: decimal; text-decoration: none; vertical-align: baseline;\"\u003E\u003Cdiv dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"\u003E\u003Cspan style=\"background-color: transparent; color: black; font-family: Arial; font-size: 14.666666666666666px; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\"\u003ERun your program Steve will be stuck in the middle of the Lava pit.\u003C\/span\u003E\u003C\/div\u003E\u003C\/li\u003E\u003C\/ol\u003E\u003Ch1 dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 10pt;\"\u003E\u003Cspan style=\"background-color: transparent; color: #990000; font-family: 'Trebuchet MS'; font-size: 18.666666666666664px; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\"\u003EChallenge 1 - Can you code yourself out of the Lava Pit?\u003C\/span\u003E\u003C\/h1\u003E\u003Cdiv dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"\u003E\u003Cspan style=\"background-color: transparent; color: black; font-family: Arial; font-size: 14.666666666666666px; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\"\u003EAt the moment unless Steve flies or lays blocks down he can’t get out without getting burned - update your program so he can get out.\u003C\/span\u003E\u003C\/div\u003E\u003Ch2 dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 10pt;\"\u003E\u003Cspan style=\"background-color: transparent; color: #cc0000; font-family: 'Trebuchet MS'; font-size: 16px; font-style: normal; font-variant: normal; font-weight: 700; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\"\u003ETips\u003C\/span\u003E\u003C\/h2\u003E\u003Cdiv dir=\"ltr\" style=\"margin-left: 0pt;\"\u003E\u003Ctable style=\"border-collapse: collapse; border: none; width: 680px;\"\u003E\u003Ccolgroup\u003E\u003Ccol width=\"*\"\u003E\u003C\/col\u003E\u003C\/colgroup\u003E\u003Ctbody\u003E\u003Ctr style=\"height: 0px;\"\u003E\u003Ctd style=\"border-bottom: solid #000000 1px; border-left: solid #000000 1px; border-right: solid #000000 1px; border-top: solid #000000 1px; padding: 7px 7px 7px 7px; vertical-align: top;\"\u003E\u003Cul style=\"margin-bottom: 0pt; margin-top: 0pt;\"\u003E\u003Cli dir=\"ltr\" style=\"background-color: transparent; color: black; font-family: Arial; font-size: 14.666666666666666px; font-style: normal; font-variant: normal; font-weight: 400; list-style-type: disc; text-decoration: none; vertical-align: baseline;\"\u003E\u003Cdiv dir=\"ltr\" style=\"line-height: 1.2; margin-bottom: 0pt; margin-top: 0pt;\"\u003E\u003Cspan style=\"background-color: transparent; color: black; font-family: Arial; font-size: 14.666666666666666px; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\"\u003EUse more setBlocks() commands to make a bridge out of the Lava pit.\u003C\/span\u003E\u003C\/div\u003E\u003C\/li\u003E\u003Cli dir=\"ltr\" style=\"background-color: transparent; color: black; font-family: Arial; font-size: 14.666666666666666px; font-style: normal; font-variant: normal; font-weight: 400; list-style-type: disc; text-decoration: none; vertical-align: baseline;\"\u003E\u003Cdiv dir=\"ltr\" style=\"line-height: 1.2; margin-bottom: 0pt; margin-top: 0pt;\"\u003E\u003Cspan style=\"background-color: transparent; color: black; font-family: Arial; font-size: 14.666666666666666px; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\"\u003EYou can change Steve’s x,y,z position using mc.player.setTilePos(x, y, z).\u003C\/span\u003E\u003C\/div\u003E\u003C\/li\u003E\u003Cli dir=\"ltr\" style=\"background-color: transparent; color: black; font-family: Arial; font-size: 14.666666666666666px; font-style: normal; font-variant: normal; font-weight: 400; list-style-type: disc; text-decoration: none; vertical-align: baseline;\"\u003E\u003Cdiv dir=\"ltr\" style=\"line-height: 1.2; margin-bottom: 0pt; margin-top: 0pt;\"\u003E\u003Cspan style=\"background-color: transparent; color: black; font-family: Arial; font-size: 14.666666666666666px; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\"\u003EIf it’s too easy, make the Lava Pit really big - is it still easy?\u003C\/span\u003E\u003C\/div\u003E\u003C\/li\u003E\u003C\/ul\u003E\u003C\/td\u003E\u003C\/tr\u003E\u003C\/tbody\u003E\u003C\/table\u003E\u003C\/div\u003E\u003Ch1 dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 10pt;\"\u003E\u003Cspan style=\"background-color: transparent; color: #990000; font-family: 'Trebuchet MS'; font-size: 18.666666666666664px; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\"\u003EMake a game\u003C\/span\u003E\u003C\/h1\u003E\u003Cdiv dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"\u003E\u003Cspan style=\"background-color: transparent; color: black; font-family: Arial; font-size: 14.666666666666666px; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\"\u003EUpdate your program to make blocks under Steve disappear:\u003C\/span\u003E\u003C\/div\u003E\u003Col style=\"margin-bottom: 0pt; margin-top: 0pt;\"\u003E\u003Cli dir=\"ltr\" style=\"background-color: transparent; color: black; font-family: Arial; font-size: 14.666666666666666px; font-style: normal; font-variant: normal; font-weight: 400; list-style-type: decimal; text-decoration: none; vertical-align: baseline;\"\u003E\u003Cdiv dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"\u003E\u003Cspan style=\"background-color: transparent; color: black; font-family: Arial; font-size: 14.666666666666666px; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\"\u003EPost messages to the chat screen to warn the player the game is about to start.\u003C\/span\u003E\u003C\/div\u003E\u003C\/li\u003E\u003C\/ol\u003E\u003Ch3 dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 3pt; margin-left: 36pt; margin-top: 0pt;\"\u003E\u003Cspan style=\"background-color: transparent; color: #0b5394; font-family: 'Courier New'; font-size: 14.666666666666666px; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\"\u003Emc.postToChat(\"Get Ready\")\u003C\/span\u003E\u003C\/h3\u003E\u003Ch3 dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 3pt; margin-left: 36pt; margin-top: 0pt;\"\u003E\u003Cspan style=\"background-color: transparent; color: #0b5394; font-family: 'Courier New'; font-size: 14.666666666666666px; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\"\u003Emc.postToChat(\"Blocks under you will keep disappearing\")\u003C\/span\u003E\u003C\/h3\u003E\u003Ch3 dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 3pt; margin-left: 36pt; margin-top: 0pt;\"\u003E\u003Cspan style=\"background-color: transparent; color: #0b5394; font-family: 'Courier New'; font-size: 14.666666666666666px; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\"\u003Esleep(3)\u003C\/span\u003E\u003C\/h3\u003E\u003Ch3 dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 3pt; margin-left: 36pt; margin-top: 0pt;\"\u003E\u003Cspan style=\"background-color: transparent; color: #0b5394; font-family: 'Courier New'; font-size: 14.666666666666666px; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\"\u003Emc.postToChat(\"Go\")\u003C\/span\u003E\u003C\/h3\u003E\u003Col start=\"2\" style=\"margin-bottom: 0pt; margin-top: 0pt;\"\u003E\u003Cli dir=\"ltr\" style=\"background-color: transparent; color: black; font-family: Arial; font-size: 14.666666666666666px; font-style: normal; font-variant: normal; font-weight: 400; list-style-type: decimal; text-decoration: none; vertical-align: baseline;\"\u003E\u003Cdiv dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"\u003E\u003Cspan style=\"background-color: transparent; color: black; font-family: Arial; font-size: 14.666666666666666px; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\"\u003ECreate a variable called gameover and set it to False - it will be set to True at the end of the game.\u003C\/span\u003E\u003C\/div\u003E\u003C\/li\u003E\u003C\/ol\u003E\u003Ch3 dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 3pt; margin-left: 36pt; margin-top: 0pt;\"\u003E\u003Cspan style=\"background-color: transparent; color: #0b5394; font-family: 'Courier New'; font-size: 14.666666666666666px; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\"\u003Egameover = False\u003C\/span\u003E\u003C\/h3\u003E\u003Col start=\"3\" style=\"margin-bottom: 0pt; margin-top: 0pt;\"\u003E\u003Cli dir=\"ltr\" style=\"background-color: transparent; color: black; font-family: Arial; font-size: 14.666666666666666px; font-style: normal; font-variant: normal; font-weight: 400; list-style-type: decimal; text-decoration: none; vertical-align: baseline;\"\u003E\u003Cdiv dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"\u003E\u003Cspan style=\"background-color: transparent; color: black; font-family: Arial; font-size: 14.666666666666666px; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\"\u003ECreate a loop which will continue until the game is over.\u003C\/span\u003E\u003C\/div\u003E\u003C\/li\u003E\u003C\/ol\u003E\u003Ch3 dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 3pt; margin-left: 36pt; margin-top: 0pt;\"\u003E\u003Cspan style=\"background-color: transparent; color: #0b5394; font-family: 'Courier New'; font-size: 14.666666666666666px; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\"\u003Ewhile gameover == False:\u003C\/span\u003E\u003C\/h3\u003E\u003Col start=\"4\" style=\"margin-bottom: 0pt; margin-top: 0pt;\"\u003E\u003Cli dir=\"ltr\" style=\"background-color: transparent; color: black; font-family: Arial; font-size: 14.666666666666666px; font-style: normal; font-variant: normal; font-weight: 400; list-style-type: decimal; text-decoration: none; vertical-align: baseline;\"\u003E\u003Cdiv dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"\u003E\u003Cspan style=\"background-color: transparent; color: black; font-family: Arial; font-size: 14.666666666666666px; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\"\u003EGet Steve’s position.\u003C\/span\u003E\u003C\/div\u003E\u003C\/li\u003E\u003C\/ol\u003E\u003Ch3 dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 3pt; margin-left: 36pt; margin-top: 0pt;\"\u003E\u003Cspan style=\"background-color: transparent; color: #0b5394; font-family: 'Courier New'; font-size: 14.666666666666666px; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\"\u003E \u0026nbsp;\u0026nbsp;\u0026nbsp;playpos = mc.player.getTilePos()\u003C\/span\u003E\u003C\/h3\u003E\u003Col start=\"5\" style=\"margin-bottom: 0pt; margin-top: 0pt;\"\u003E\u003Cli dir=\"ltr\" style=\"background-color: transparent; color: black; font-family: Arial; font-size: 14.666666666666666px; font-style: normal; font-variant: normal; font-weight: 400; list-style-type: decimal; text-decoration: none; vertical-align: baseline;\"\u003E\u003Cdiv dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"\u003E\u003Cspan style=\"background-color: transparent; color: black; font-family: Arial; font-size: 14.666666666666666px; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\"\u003ETurn the block under Steve to OBSIDIAN as a warning and wait for 2 seconds.\u003C\/span\u003E\u003C\/div\u003E\u003C\/li\u003E\u003C\/ol\u003E\u003Ch3 dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 3pt; margin-left: 36pt; margin-top: 0pt;\"\u003E\u003Cspan style=\"background-color: transparent; color: #0b5394; font-family: 'Courier New'; font-size: 14.666666666666666px; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\"\u003E \u0026nbsp;\u0026nbsp;\u0026nbsp;mc.setBlock(playpos.x, playpos.y - 1, playpos.z,block.OBSIDIAN.id)\u003C\/span\u003E\u003C\/h3\u003E\u003Ch3 dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 3pt; margin-left: 36pt; margin-top: 0pt;\"\u003E\u003Cspan style=\"background-color: transparent; color: #0b5394; font-family: 'Courier New'; font-size: 14.666666666666666px; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\"\u003E \u0026nbsp;\u0026nbsp;\u0026nbsp;sleep(2)\u003C\/span\u003E\u003Cspan style=\"background-color: transparent; color: #0b5394; font-family: 'Courier New'; font-size: 14.666666666666666px; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\"\u003E \u003C\/span\u003E\u003C\/h3\u003E\u003Col start=\"6\" style=\"margin-bottom: 0pt; margin-top: 0pt;\"\u003E\u003Cli dir=\"ltr\" style=\"background-color: transparent; color: black; font-family: Arial; font-size: 14.666666666666666px; font-style: normal; font-variant: normal; font-weight: 400; list-style-type: decimal; text-decoration: none; vertical-align: baseline;\"\u003E\u003Cdiv dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"\u003E\u003Cspan style=\"background-color: transparent; color: black; font-family: Arial; font-size: 14.666666666666666px; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\"\u003EAfter the warning turn the block to AIR, if Steve is standing on it, he’s going to be in the Lava pit.\u003C\/span\u003E\u003C\/div\u003E\u003C\/li\u003E\u003C\/ol\u003E\u003Ch3 dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 3pt; margin-left: 36pt; margin-top: 0pt;\"\u003E\u003Cspan style=\"background-color: transparent; color: #0b5394; font-family: 'Courier New'; font-size: 14.666666666666666px; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\"\u003E \u0026nbsp;\u0026nbsp;\u0026nbsp;mc.setBlock(playpos.x, playpos.y - 1, playpos.z, block.AIR.id)\u003C\/span\u003E\u003C\/h3\u003E\u003Ch3 dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 3pt; margin-left: 36pt; margin-top: 0pt;\"\u003E\u003Cspan style=\"background-color: transparent; color: #0b5394; font-family: 'Courier New'; font-size: 14.666666666666666px; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\"\u003E \u0026nbsp;\u0026nbsp;\u0026nbsp;sleep(0.5)\u003C\/span\u003E\u003C\/h3\u003E\u003Col start=\"7\" style=\"margin-bottom: 0pt; margin-top: 0pt;\"\u003E\u003Cli dir=\"ltr\" style=\"background-color: transparent; color: black; font-family: Arial; font-size: 14.666666666666666px; font-style: normal; font-variant: normal; font-weight: 400; list-style-type: decimal; text-decoration: none; vertical-align: baseline;\"\u003E\u003Cdiv dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"\u003E\u003Cspan style=\"background-color: transparent; color: black; font-family: Arial; font-size: 14.666666666666666px; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\"\u003ERun the program, the game will start and you will have to put blocks down in the Lava pit to escape because otherwise they are going to disappear and Steve will fall in.\u003C\/span\u003E\u003C\/div\u003E\u003C\/li\u003E\u003C\/ol\u003E\u003Ch1 dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 10pt;\"\u003E\u003Cspan style=\"background-color: transparent; color: #990000; font-family: 'Trebuchet MS'; font-size: 18.666666666666664px; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\"\u003EGame over\u003C\/span\u003E\u003C\/h1\u003E\u003Cdiv dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"\u003E\u003Cspan style=\"background-color: transparent; color: black; font-family: Arial; font-size: 14.666666666666666px; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\"\u003EThe game is over if Steve falls into the Lava, you need to modify your program to check if he has fallen into the Lava and put a message on the screen:\u003C\/span\u003E\u003C\/div\u003E\u003Col style=\"margin-bottom: 0pt; margin-top: 0pt;\"\u003E\u003Cli dir=\"ltr\" style=\"background-color: transparent; color: black; font-family: Arial; font-size: 14.666666666666666px; font-style: normal; font-variant: normal; font-weight: 400; list-style-type: decimal; text-decoration: none; vertical-align: baseline;\"\u003E\u003Cdiv dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"\u003E\u003Cspan style=\"background-color: transparent; color: black; font-family: Arial; font-size: 14.666666666666666px; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\"\u003EUse an if statement to see if Steve’s height (y) is not equal to where he started, if it is set the gameover variable to True.\u003C\/span\u003E\u003C\/div\u003E\u003C\/li\u003E\u003C\/ol\u003E\u003Ch3 dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 3pt; margin-left: 36pt; margin-top: 0pt;\"\u003E\u003Cspan style=\"background-color: transparent; color: #0b5394; font-family: 'Courier New'; font-size: 14.666666666666666px; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\"\u003E \u0026nbsp;\u0026nbsp;\u0026nbsp;if playpos.y != pos.y:\u003C\/span\u003E\u003C\/h3\u003E\u003Ch3 dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 3pt; margin-left: 36pt; margin-top: 0pt;\"\u003E\u003Cspan style=\"background-color: transparent; color: #0b5394; font-family: 'Courier New'; font-size: 14.666666666666666px; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\"\u003E \u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;gameover = True\u003C\/span\u003E\u003C\/h3\u003E\u003Col start=\"2\" style=\"margin-bottom: 0pt; margin-top: 0pt;\"\u003E\u003Cli dir=\"ltr\" style=\"background-color: transparent; color: black; font-family: Arial; font-size: 14.666666666666666px; font-style: normal; font-variant: normal; font-weight: 400; list-style-type: decimal; text-decoration: none; vertical-align: baseline;\"\u003E\u003Cdiv dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"\u003E\u003Cspan style=\"background-color: transparent; color: black; font-family: Arial; font-size: 14.666666666666666px; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\"\u003EPut a message on the screen to let the player know they have been caught in the lava trap.\u003C\/span\u003E\u003C\/div\u003E\u003C\/li\u003E\u003C\/ol\u003E\u003Ch3 dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 3pt; margin-left: 36pt; margin-top: 0pt;\"\u003E\u003Cspan style=\"background-color: transparent; color: #0b5394; font-family: 'Courier New'; font-size: 14.666666666666666px; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\"\u003E \u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;mc.postToChat(\"Game over.\")\u003C\/span\u003E\u003C\/h3\u003E\u003Col start=\"3\" style=\"margin-bottom: 0pt; margin-top: 0pt;\"\u003E\u003Cli dir=\"ltr\" style=\"background-color: transparent; color: black; font-family: Arial; font-size: 14.666666666666666px; font-style: normal; font-variant: normal; font-weight: 400; list-style-type: decimal; text-decoration: none; vertical-align: baseline;\"\u003E\u003Cdiv dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"\u003E\u003Cspan style=\"background-color: transparent; color: black; font-family: Arial; font-size: 14.666666666666666px; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\"\u003ERun your program and see how long you can stay out of the lava.\u003C\/span\u003E\u003C\/div\u003E\u003C\/li\u003E\u003C\/ol\u003E\u003Ch1 dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 10pt;\"\u003E\u003Cspan style=\"background-color: transparent; color: #990000; font-family: 'Trebuchet MS'; font-size: 18.666666666666664px; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\"\u003EChallenge 2 - Make the game your own.\u003C\/span\u003E\u003C\/h1\u003E\u003Cdiv dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"\u003E\u003Cspan style=\"background-color: transparent; color: black; font-family: Arial; font-size: 14.666666666666666px; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\"\u003EThis game is just the start, can you finish it? Here are some challenges:\u003C\/span\u003E\u003C\/div\u003E\u003Col style=\"margin-bottom: 0pt; margin-top: 0pt;\"\u003E\u003Cli dir=\"ltr\" style=\"background-color: transparent; color: black; font-family: Arial; font-size: 14.666666666666666px; font-style: normal; font-variant: normal; font-weight: 400; list-style-type: decimal; text-decoration: none; vertical-align: baseline;\"\u003E\u003Cdiv dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"\u003E\u003Cspan style=\"background-color: transparent; color: black; font-family: Arial; font-size: 14.666666666666666px; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\"\u003EMake the game harder? \u003C\/span\u003E\u003C\/div\u003E\u003C\/li\u003E\u003Cli dir=\"ltr\" style=\"background-color: transparent; color: black; font-family: Arial; font-size: 14.666666666666666px; font-style: normal; font-variant: normal; font-weight: 400; list-style-type: decimal; text-decoration: none; vertical-align: baseline;\"\u003E\u003Cdiv dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"\u003E\u003Cspan style=\"background-color: transparent; color: black; font-family: Arial; font-size: 14.666666666666666px; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\"\u003EMake a better game arena, perhaps build a stadium or walls around it so Steve can get out.\u003C\/span\u003E\u003C\/div\u003E\u003C\/li\u003E\u003Cli dir=\"ltr\" style=\"background-color: transparent; color: black; font-family: Arial; font-size: 14.666666666666666px; font-style: normal; font-variant: normal; font-weight: 400; list-style-type: decimal; text-decoration: none; vertical-align: baseline;\"\u003E\u003Cdiv dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"\u003E\u003Cspan style=\"background-color: transparent; color: black; font-family: Arial; font-size: 14.666666666666666px; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\"\u003EAdd points to the game, each time Steve doesn’t fall in he gets a point.\u003C\/span\u003E\u003C\/div\u003E\u003C\/li\u003E\u003Cli dir=\"ltr\" style=\"background-color: transparent; color: black; font-family: Arial; font-size: 14.666666666666666px; font-style: normal; font-variant: normal; font-weight: 400; list-style-type: decimal; text-decoration: none; vertical-align: baseline;\"\u003E\u003Cdiv dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"\u003E\u003Cspan style=\"background-color: transparent; color: black; font-family: Arial; font-size: 14.666666666666666px; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\"\u003EChange the game so it starts easy but gets harder the longer you play.\u003C\/span\u003E\u003C\/div\u003E\u003C\/li\u003E\u003Cli dir=\"ltr\" style=\"background-color: transparent; color: black; font-family: Arial; font-size: 14.666666666666666px; font-style: normal; font-variant: normal; font-weight: 400; list-style-type: decimal; text-decoration: none; vertical-align: baseline;\"\u003E\u003Cdiv dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"\u003E\u003Cspan style=\"background-color: transparent; color: black; font-family: Arial; font-size: 14.666666666666666px; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\"\u003EAdd a 2 player (or even multiplayer!) option.\u003C\/span\u003E\u003C\/div\u003E\u003C\/li\u003E\u003C\/ol\u003E\u003Ch2 dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 10pt;\"\u003E\u003Cspan style=\"background-color: transparent; color: #cc0000; font-family: 'Trebuchet MS'; font-size: 16px; font-style: normal; font-variant: normal; font-weight: 700; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\"\u003ETips\u003C\/span\u003E\u003C\/h2\u003E\u003Cdiv dir=\"ltr\" style=\"margin-left: 0pt;\"\u003E\u003Ctable style=\"border-collapse: collapse; border: none; width: 680px;\"\u003E\u003Ccolgroup\u003E\u003Ccol width=\"*\"\u003E\u003C\/col\u003E\u003C\/colgroup\u003E\u003Ctbody\u003E\u003Ctr style=\"height: 0px;\"\u003E\u003Ctd style=\"border-bottom: solid #000000 1px; border-left: solid #000000 1px; border-right: solid #000000 1px; border-top: solid #000000 1px; padding: 7px 7px 7px 7px; vertical-align: top;\"\u003E\u003Cul style=\"margin-bottom: 0pt; margin-top: 0pt;\"\u003E\u003Cli dir=\"ltr\" style=\"background-color: transparent; color: black; font-family: Arial; font-size: 14.666666666666666px; font-style: normal; font-variant: normal; font-weight: 400; list-style-type: disc; text-decoration: none; vertical-align: baseline;\"\u003E\u003Cdiv dir=\"ltr\" style=\"line-height: 1.2; margin-bottom: 0pt; margin-top: 0pt;\"\u003E\u003Cspan style=\"background-color: transparent; color: black; font-family: Arial; font-size: 14.666666666666666px; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\"\u003EIf you make the sleeps shorter it’ll make the game quicker and harder.\u003C\/span\u003E\u003C\/div\u003E\u003C\/li\u003E\u003Cli dir=\"ltr\" style=\"background-color: transparent; color: black; font-family: Arial; font-size: 14.666666666666666px; font-style: normal; font-variant: normal; font-weight: 400; list-style-type: disc; text-decoration: none; vertical-align: baseline;\"\u003E\u003Cdiv dir=\"ltr\" style=\"line-height: 1.2; margin-bottom: 0pt; margin-top: 0pt;\"\u003E\u003Cspan style=\"background-color: transparent; color: black; font-family: Arial; font-size: 14.666666666666666px; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\"\u003ECreate a variable called points at the start of the game and add 1 to it each time your program goes around the loop.\u003C\/span\u003E\u003C\/div\u003E\u003C\/li\u003E\u003Cli dir=\"ltr\" style=\"background-color: transparent; color: black; font-family: Arial; font-size: 14.666666666666666px; font-style: normal; font-variant: normal; font-weight: 400; list-style-type: disc; text-decoration: none; vertical-align: baseline;\"\u003E\u003Cdiv dir=\"ltr\" style=\"line-height: 1.2; margin-bottom: 0pt; margin-top: 0pt;\"\u003E\u003Cspan style=\"background-color: transparent; color: black; font-family: Arial; font-size: 14.666666666666666px; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\"\u003EThere are lots of experienced Python developers all around you - perhaps you can teach them!\u003C\/span\u003E\u003C\/div\u003E\u003C\/li\u003E\u003C\/ul\u003E\u003C\/td\u003E\u003C\/tr\u003E\u003C\/tbody\u003E\u003C\/table\u003E\u003C\/div\u003E\u003Ch1 dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 10pt;\"\u003E\u003Cspan style=\"background-color: transparent; color: #990000; font-family: 'Trebuchet MS'; font-size: 18.666666666666664px; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\"\u003EFind out more\u003C\/span\u003E\u003C\/h1\u003E\u003Cspan style=\"font-family: Arial; font-size: 14.6667px; vertical-align: baseline; white-space: pre-wrap;\"\u003EIf you have enjoyed this check out “Adventures in Minecraft” and learn how to program Minecraft using Python on your Raspberry Pi, Windows PC or Apple Mac and the Minecraft resources on the Raspberry Pi website \u003C\/span\u003E\u003Ca href=\"http:\/\/www.raspberrypi.org\/resources\" style=\"text-decoration: none;\"\u003E\u003Cspan style=\"color: #1155cc; font-family: Arial; font-size: 14.6667px; text-decoration: underline; vertical-align: baseline; white-space: pre-wrap;\"\u003Ewww.raspberrypi.org\/resources\u003C\/span\u003E\u003C\/a\u003E\u003Cspan style=\"font-family: Arial; font-size: 14.6667px; vertical-align: baseline; white-space: pre-wrap;\"\u003E.\u003C\/span\u003E"},"link":[{"rel":"replies","type":"application/atom+xml","href":"http:\/\/www.stuffaboutcode.com\/feeds\/3577042240961446396\/comments\/default","title":"Post Comments"},{"rel":"replies","type":"text/html","href":"http:\/\/www.stuffaboutcode.com\/2015\/09\/minecraft-game-tutorial-lavatrap-pycon.html#comment-form","title":"3 Comments"},{"rel":"edit","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/9007601562606157016\/posts\/default\/3577042240961446396"},{"rel":"self","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/9007601562606157016\/posts\/default\/3577042240961446396"},{"rel":"alternate","type":"text/html","href":"http:\/\/www.stuffaboutcode.com\/2015\/09\/minecraft-game-tutorial-lavatrap-pycon.html","title":"Minecraft Game Tutorial - LavaTrap - Pycon 2015"}],"author":[{"name":{"$t":"Martin O'Hanlon"},"uri":{"$t":"https:\/\/plus.google.com\/117449463512606889592"},"email":{"$t":"noreply@blogger.com"},"gd$image":{"rel":"http://schemas.google.com/g/2005#thumbnail","width":"32","height":"32","src":"\/\/lh6.googleusercontent.com\/-mXyYt17u23k\/AAAAAAAAAAI\/AAAAAAAAME4\/UO0fIz3K4Xg\/s512-c\/photo.jpg"}}],"thr$total":{"$t":"3"}}]}});